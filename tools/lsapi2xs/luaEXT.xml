<autoc><keyword name="Player_IsCanSpell" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能使用魔法攻击. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="IO_TextFileInsertLine" func="yes">
<overload  retval="bool" descr="&#x0A;在文本文件中插入内容. &#x0A;参数:strFileName 文件名.,dwLine 前插行号.最小为1,最大为真实行数.,strContent 文本内容,不能包含回车换行符.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="dwLine" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="on_hack_check" func="yes">
<overload  retval="void" descr="&#x0A;客户端外挂检测回调. &#x0A;参数:strPlayer 玩家的GUID.,right 非外挂权重,wrong 外挂权重,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="right" />
<param name="wrong" />
</overload>
</keyword>
<keyword name="Player_IsServantNear" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家的随从是不是在附近. &#x0A;参数:strPlayer 玩家的GUID.,strMonster 随从的GUID.,&#x0A;返回:是否在附近.&#x0A;警告:附近是指主人和随从在同一GS上,不是指地理位置上的附近.&#x0A;">
<param name="strPlayer" />
<param name="strMonster" />
</overload>
</keyword>
<keyword name="TaoAtk" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的道攻. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:道攻.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="Item_ChangeName" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的自定义名称. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strName 物品的新名字.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strName" />
</overload>
</keyword>
<keyword name="TaoAtkPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的道攻属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:道攻属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GetActiveCountToday" func="yes">
<overload  retval="int" descr="&#x0A;取得玩家的活跃点数&#x0A;参数:strPlayerName 玩家的名字.,&#x0A;返回:取得玩家的活跃点数,如果玩家找不到返回0.&#x0A;">
<param name="strPlayerName" />
</overload>
</keyword>
<keyword name="Map_GetHeight" func="yes">
<overload  retval="uint16" descr="&#x0A;取得地图的高度. &#x0A;参数:strMap 地图的GUID.,&#x0A;返回:地图高度,出错返回0.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="Player_IsOnline" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否在线上. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_gp" func="yes">
<overload  retval="void" descr="&#x0A;玩家检测到外挂行为时回调. &#x0A;参数:strPlayer 玩家的GUID.,iGPRuntime 当前违规行为次数.,iGPTotal 违规行为的总次数.,iAvgTick 单次违规差值.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="iGPRuntime" />
<param name="iGPTotal" />
<param name="iAvgTick" />
</overload>
</keyword>
<keyword name="MagAtkPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的魔攻属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:魔攻属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="on_pre_market_delegate_sell" func="yes">
<overload  retval="bool" descr="&#x0A;玩家在寄售行寄售之前回调. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 寄售数量.,iPrice 寄售单价.,iMoneyType 寄售货币类型. 0 = 金币, 1 = 元宝, 2 = 积分.,&#x0A;返回:true = 允许玩家寄售, false = 阻止玩家寄售.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iNum" />
<param name="iPrice" />
<param name="iMoneyType" />
</overload>
</keyword>
<keyword name="Player_GetAccountID" func="yes">
<overload  retval="uint32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的帐号ID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:帐号ID,出错返回0.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:UserID,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Equip_GetIdentifyNum" func="yes">
<overload  retval="int" descr="&#x0A;取得装备当前鉴定条目数&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,&#x0A;返回:取得装备当前鉴定条目数.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
</overload>
</keyword>
<keyword name="SetServantPickItem" func="yes">
<overload  retval="bool" descr="&#x0A;设置是否开启宝宝自动捡物品功能&#x0A;参数:servant_guid 宝宝的guid.,is_pick_item true表示打开自动捡物品功能 fase表示关闭此功能,&#x0A;返回:true表示设置成功 false表示设置失败&#x0A;">
<param name="servant_guid" />
<param name="is_pick_item" />
</overload>
</keyword>
<keyword name="GetRegionFreeRndEx" func="yes">
<overload  retval="table" descr="&#x0A;返回地图区域中空坐标列表. &#x0A;参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标.,&#x0A;返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRndEx(...); local x, y = tGrids[1].X, tGrids[1].Y;&#x0A;">
<param name="strMap" />
<param name="tRange" />
<param name="wLimit" />
</overload>
</keyword>
<keyword name="Item_GetUsesCount" func="yes">
<overload  retval="int16" descr="&#x0A;根据物品GUID取得该物品的剩余使用次数. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的使用次数,出错返回-1.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="on_pre_stall_buy" func="yes">
<overload  retval="int" descr="&#x0A;购买摆摊物品前触发&#x0A;参数:buy_guid 买家的GUID.,sell_guid 卖家的GUID.,item_guid 物品的GUID.,price 购买的总价格,amount 购买数量,type 0=金币 1=元宝,&#x0A;返回:如果返回负数则表示不允许购买,返回正数则表示购买的最终价格.&#x0A;参考:eTriggerType,&#x0A;">
<param name="buy_guid" />
<param name="sell_guid" />
<param name="item_guid" />
<param name="amount" />
<param name="type" />
</overload>
</keyword>
<keyword name="on_item_pickup" func="yes">
<overload  retval="void" descr="&#x0A;角色拾取道具时回调. &#x0A;参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="on_restore_process" func="yes">
<overload  retval="void" descr="&#x0A;角色走恢复流程时回调. &#x0A;参数:strRole 治疗者的GUID.,strTarget 被治疗者的GUID.,wSkillID 治疗技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="chr" func="yes">
<overload  retval="string" descr="&#x0A;将ascii转成字符.&#x0A;参数:iAscii 字符的ascii码.,&#x0A;返回:ascii码对应的字符,长度为1.&#x0A;备注:t_str=string.chr(i_asscii),返回数值i&shy;_asscii的字符格式。比如:string.chr(65),执行的结果就是&rdquo;A&rdquo;。&#x0A;">
<param name="iAscii" />
</overload>
</keyword>
<keyword name="TakeOn" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家穿装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Dir" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的方向. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:方向值,出错返回-1.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="on_item_apply" func="yes">
<overload  retval="void" descr="&#x0A;角色使用道具时回调. &#x0A;参数:strRole 角色的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Map_AddEffect" func="yes">
<overload  retval="bool" descr="&#x0A;在地图指定位置播放特效. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,dwEffectID 特效ID,请参考策划配置表.,dwLife 特效持续时间,单位秒.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="dwEffectID" />
<param name="dwLife" />
</overload>
</keyword>
<keyword name="Item_GetAmount" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的堆叠数量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:返回堆叠数量.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="KeyName" func="yes">
<overload  retval="string" descr="&#x0A;根据GUID取得KeyName. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:对象的KeyName,如果对象不存在返回''.&#x0A;备注:如果对象是玩家则返回玩家的名字.&#x0A;参考:KeyName,Name,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="GridAttr" func="yes">
<overload  retval="bool" descr="&#x0A;判断地图格子属性是否相符. &#x0A;参数:strMap 地图的GUID.,iX 地图X坐标.,iY 地图Y坐标.,iType 格子属性,1 = 不可移动点 2 = 魔法攻击阻挡 3 = 物理攻击阻挡 4 = 可穿透点 5 = 跳转点 6 = 复活点 7 = 摆摊点 8 = 安全区点 9 = 竞技区点 10 = PK区点 11 = 挖矿区点,&#x0A;返回:true = 是,false = 否.&#x0A;">
<param name="strMap" />
<param name="iX" />
<param name="iY" />
<param name="iType" />
</overload>
</keyword>
<keyword name="GetEquipSuitCount" func="yes">
<overload  retval="uint8" descr="&#x0A;获得角色身上指定套装中装备数量&#x0A;参数:player_guid 角色guid.,equip_guid 此装备所指定的套装.,item_id 此物品id所指定的套装.,suit_id 此套装id所指定的套装.,&#x0A;返回:角色身上指定套装中的装备数&#x0A;备注:equip_guid equip_guid suit_id,只要任一填一个&#x0A;">
<param name="player_guid" />
<param name="equip_guid" />
<param name="item_id" />
<param name="suit_id" />
</overload>
</keyword>
<keyword name="ApplyItem" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家使用道具. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
<param name="bInstance" />
</overload>
</keyword>
<keyword name="GetDay" func="yes">
<overload  retval="uint32" descr="&#x0A;取得指定时间值的天. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:天,范围: [1 - 31].&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="IO_GetFileString" func="yes">
<overload  retval="string" descr="&#x0A;读取文本文件所有内容. &#x0A;参数:strFileName 文件名.,&#x0A;返回:文件内容.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="SetTempInt" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上存储整型数值变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="AddShop" func="yes">
<overload  retval="bool" descr="&#x0A;将NPC与指定商店关联起来&#x0A;参数:strNpc NPC的GUID.,wShopId 商店ID.,&#x0A;返回:成功或失败.&#x0A;参考:AddShop,OpenShop,&#x0A;">
<param name="strNpc" />
<param name="wShopId" />
</overload>
</keyword>
<keyword name="MsgBox" func="yes">
<overload  retval="void" descr="&#x0A;通知客户端显示消息框. &#x0A;参数:strPlayer 玩家的GUID.,strContent 消息框内容.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="Equip_GetExtProp" func="yes">
<overload  retval="table" descr="&#x0A;获取装备的某条扩展属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条.,&#x0A;返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="index" />
</overload>
</keyword>
<keyword name="SendMail" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_name" />
<param name="text" />
</overload>
</keyword>
<keyword name="IO_FileCTime" func="yes">
<overload  retval="string" descr="&#x0A;返回文件创建时间. &#x0A;参数:strFileName 文件名.,&#x0A;返回:时间格式串.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="Player_DestroyItemUnbind" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:DelItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_ReCalGuildCtrb" func="yes">
<overload  retval="bool" descr="&#x0A;调整玩家的行会贡献度. &#x0A;参数:strPlayer 玩家的GUID.,iValue 大于0时在原有的贡献度上追加,小于0时在原有贡献度上扣除.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="GetAllPlayerNames" func="yes">
<overload  retval="table" descr="&#x0A;取得服务器上所有玩家的名字列表. &#x0A;参数: ,&#x0A;返回:玩家名列表,返回lua table.&#x0A;">
</overload>
</keyword>
<keyword name="ApplyEquipEx" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家穿装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Monster_SetHateList" func="yes">
<overload  retval="bool" descr="&#x0A;设置怪物的仇恨列表. &#x0A;参数:strMonster 怪物的GUID.,tHateList 怪物的仇恨列表. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Elapse' = elapse}, ....},&#x0A;返回:true=成功,false=失败.&#x0A;">
<param name="strMonster" />
<param name="tHateList" />
</overload>
</keyword>
<keyword name="GetCastleBasiGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得某城堡的皇宫地图GUID. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:皇宫地图的GUID.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="GetCastleCustomVarInt" func="yes">
<overload  retval="int32" descr="&#x0A;取得某城堡的数值型自定义变量. &#x0A;参数:strCastleName 城堡名.,strKey 变量名.,&#x0A;返回:变量值.&#x0A;">
<param name="strCastleName" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="ForceAcceptQuest" func="yes">
<overload  retval="bool" descr="&#x0A;强制玩家接受任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="on_summon" func="yes">
<overload  retval="void" descr="&#x0A;角色召唤时触发. &#x0A;参数:strRole 角色的GUID.,wMonsterID 怪物的ID.,wLevel 宝宝召唤等级.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wMonsterID" />
<param name="wLevel" />
</overload>
</keyword>
<keyword name="Time2Str" func="yes">
<overload  retval="string" descr="&#x0A;将数值型时间转换成字符串时间. &#x0A;参数:strFmt 时间格式:Y-m-d H:M:S或Y-m-d.,dwTimes 时间值,单位:秒.,&#x0A;返回:字符串时间.&#x0A;">
<param name="strFmt" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="IsBanItem" func="yes">
<overload  retval="bool" descr="&#x0A;判断是不是地图禁止物品. &#x0A;参数:strItem 物品GUID.,strMap 地图GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strItem" />
<param name="strMap" />
</overload>
</keyword>
<keyword name="Map_BatchGenMonster" func="yes">
<overload  retval="bool" descr="&#x0A;在地图中随机刷怪. &#x0A;参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="wCount" />
<param name="bCanRelive" />
</overload>
</keyword>
<keyword name="IO_SetCustomVarInt" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在数据库中存储整型数值变量. &#x0A;参数:strKey 变量名.,iValue 变量值,&#x0A;返回:成功或失败.&#x0A;参考:SetDBNum,&#x0A;">
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Ring" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的戒指. &#x0A;参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
<param name="sequ" />
</overload>
</keyword>
<keyword name="Monster_GetPosY" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据怪物的GUID取得Y坐标. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物的Y坐标,如果怪物不存在返回-1.&#x0A;参考:X,Y,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="IO_EmptyTextFile" func="yes">
<overload  retval="bool" descr="&#x0A;清空文本文件内容. &#x0A;参数:strFileName 文件名.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="GiveOneItem" func="yes">
<overload  retval="string" descr="&#x0A;给予玩家单个非绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:新物品的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_GetTimeProp" func="yes">
<overload  retval="uint32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的时间型属性值. &#x0A;参数:strPlayer 角色的GUID.,wAttrType 属性类型,过期接口不再详述.,&#x0A;返回:时间属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="wAttrType" />
</overload>
</keyword>
<keyword name="GetAllDays" func="yes">
<overload  retval="uint32" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的天数. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:天数.&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Player_SetGhost" func="yes">
<overload  retval="bool" descr="&#x0A;设置/取消玩家幽灵模式. &#x0A;参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消.,&#x0A;返回:无.&#x0A;">
<param name="strPlayer" />
<param name="bActive" />
</overload>
</keyword>
<keyword name="Player_GetAllTitles" func="yes">
<overload  retval="table" descr="&#x0A;获取玩家所有称号. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:返回lua_table，包含玩家所有称号.&#x0A;备注:无. * 示例代码：&#x0A;* function test(strPlayer)&#x0A;*     local ret = lualib:Player_GetAllTitles(strPlayer)&#x0A;*     -- 打印所有称号&#x0A;*     for k,v in ipairs(ret) do&#x0A;*         local title_id = v[1]        --称号id&#x0A;*         local title_keyname = v[2]   --称号keyname&#x0A;*         local title_life = v[3]      --称号有效时间&#x0A;*     end&#x0A;* end&#x0A;* &#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Necklace" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的项链. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SubIntegral" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色积分. &#x0A;参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIntegral" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetMagDefPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色魔法防御属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Gem" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的宝石. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_add_exp" func="yes">
<overload  retval="void" descr="&#x0A;角色杀怪得到经验时回调. &#x0A;参数:strRole 角色的GUID.,iExp 得到的经验值.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="iExp" />
</overload>
</keyword>
<keyword name="ApplyTitle" func="yes">
<overload  retval="void" descr="&#x0A;给玩家应用称号.&#x0A;参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,&#x0A;返回:无返回值.&#x0A;警告:如果称号在使用中,则会取消该称号. (经测试不会取消称号，慎用)&#x0A;">
<param name="strPlayer" />
<param name="wTitleID" />
</overload>
</keyword>
<keyword name="SetHairColor" func="yes">
<overload  retval="void" descr="&#x0A;设置角色的头发颜色. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHairColor 头发颜色.,&#x0A;返回:无返回值.&#x0A;参考:HairColor,SetHairColor,&#x0A;">
<param name="strRole" />
<param name="iHairColor" />
</overload>
</keyword>
<keyword name="on_destroy" func="yes">
<overload  retval="void" descr="&#x0A;物品、NPC、怪物销毁时回调. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:无返回值.&#x0A;警告:服务器上没有调用过该触发器,功能未实现.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Ip" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家的IP字符串. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的IP字符串,如果玩家不存在返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Hp" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的血量. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:血量.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="CampIntegs" func="yes">
<overload  retval="uint32" descr="&#x0A;取得该活动总计积分. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:总计活动积分.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="SysMsg_SendTopMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端顶部消息. &#x0A;参数:byCount 消息滚动次数.,strMsg 消息内容.,&#x0A;返回:无返回值.&#x0A;">
<param name="byCount" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="ItemRole" func="yes">
<overload  retval="string" descr="&#x0A;取得物品的归属&#x0A;参数:strItem 物品GUID.,&#x0A;返回:物品归属者GUID,如果无归属或物品不存在返回''.&#x0A;参考:Item_GetRole,&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Item_SetUsesCount" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的剩余使用次数. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 使用次数.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Distance" func="yes">
<overload  retval="uint16" descr="&#x0A;取得对象间的距离. &#x0A;参数:strObject1 对象的GUID,可以是玩家、怪物、NPC、物品.,strObject2 对象的GUID,可以是玩家、怪物、NPC、物品.,&#x0A;返回:返回对象间的距离,如果对象不存在或不在同一张地图上返回65535.&#x0A;">
<param name="strObject1" />
<param name="strObject2" />
</overload>
</keyword>
<keyword name="Player_FixSingleEquip" func="yes">
<overload  retval="bool" descr="&#x0A;修理玩家指定装备. &#x0A;参数:strPlayer 玩家的GUID.,strItem 装备的GUID.,bAdv 是否特修.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="bAdv" />
</overload>
</keyword>
<keyword name="PostDBEvt" func="yes">
<overload  retval="bool" descr="&#x0A;投递数据库事件&#x0A;参数:strSQL 要执行的SQL语句,为了数据库安全性只支持CREATE,SELECT,INSERT,UPDATE,DROP,DELETE,REPLACE六种语法,&#x0A;&#x0A; 并且所有的表名字段名都必须以DATA_***的形式定义.,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来.,&#x0A;返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功.&#x0A;备注:回调函数格式:&#x0A; void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_table&amp; tRecordSets, const char* strParam);&#x0A; bResult:执行结果 &#x0A; dwError:错误码 &#x0A; strError:错误信息 &#x0A; iResultNum:没有结果集的语句影响的结果数 &#x0A; tRecordSets:有结果集的语句产生的结果集 &#x0A; strParam:自定义参数&#x0A;警告:对性能还是有影响的,不要轻易使用.&#x0A;">
<param name="strSQL" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="GUID" func="yes">
<overload  retval="string" descr="&#x0A;系统中各种类型的物品的编号&#x0A;参数:&#x0A;返回:&#x0A;备注:在系统产生各种游戏事件时，&#x0A;&#x0A;	如：玩家进入地图，怪物死亡，玩家升级 等等 系统会传递一个用来区别于不同的角色，不同的怪物等。&#x0A;&#x0A;	这个编号是一个 16位的字符串，全游戏唯一，我们游戏中很多接口都需要传递这个guid的参数以便于区分不同的内容&#x0A;">
</overload>
</keyword>
<keyword name="Item_GetBySite" func="yes">
<overload  retval="string" descr="&#x0A;根据玩家背包格子位取物品GUID. &#x0A;参数:strPlayer 玩家的GUID.,wSite 背包格子位.,&#x0A;返回:物品的GUID,没有物品返回''.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="wSite" />
</overload>
</keyword>
<keyword name="Monster_GetKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据怪物GUID取得怪物KeyName. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物的KeyName,如果对象不存在返回''.&#x0A;参考:KeyName,Name,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="IO_ClearCustomVarStr" func="yes">
<overload  retval="void" descr="&#x0A;[此函数过期, 禁用]&#x0A;从数据库中删除字符型变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:无返回值.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="ModifyCastleAttacks" func="yes">
<overload  retval="bool" descr="&#x0A;强制修改城堡攻击行会. &#x0A;参数:strCastleName 城堡名.,tAttacks 攻击行会列表.,bRemoveAll 是否清除原先设置的行会.,&#x0A;返回:成功或失败.&#x0A;警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.&#x0A;">
<param name="strCastleName" />
<param name="tAttacks" />
<param name="bRemoveAll" />
</overload>
</keyword>
<keyword name="Player_IsDie" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否死亡. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Equip_SetRefineProp" func="yes">
<overload  retval="bool" descr="&#x0A;设置装备的精炼属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,attr_name 属性名.,attr_value 属性值.,&#x0A;返回:成功返回true，失败返回false.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="attr_name" />
<param name="attr_value" />
</overload>
</keyword>
<keyword name="SetWeight" func="yes">
<overload  retval="void" descr="&#x0A;设置角色背包负重. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="Map_CreateDgn" func="yes">
<overload  retval="string" descr="&#x0A;创建副本地图. &#x0A;参数:strMapKey 地图的KeyName.,bLoadGrid 是否加载地图格子, true = 直接加载地图格子,副本开始销毁倒计时. false = 当有玩家进入时才加载地图格子,副本开始销毁倒计时.,dwLife 副本的生存时间,单位秒.,&#x0A;返回:副本的GUID.&#x0A;">
<param name="strMapKey" />
<param name="bLoadGrid" />
<param name="dwLife" />
</overload>
</keyword>
<keyword name="CanAcceptQuest" func="yes">
<overload  retval="bool" descr="&#x0A;判断某任务是否可接. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="Item_SetDurability" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的当前耐久. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iDura" />
</overload>
</keyword>
<keyword name="GetFamilyByName" func="yes">
<overload  retval="string" descr="&#x0A;根据行会名字获取行会GUID&#x0A;参数:strFamilyName 行会名称.,&#x0A;返回:行会名,没有则返回''.&#x0A;">
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="GetQuestProgressing" func="yes">
<overload  retval="string" descr="&#x0A;取得任务进行中的追踪文本&#x0A;参数:wQuestID 任务ID.,&#x0A;返回:任务追踪文本,如果任务找不到返回''.&#x0A;">
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="HasTimer" func="yes">
<overload  retval="bool" descr="&#x0A;判断对象是否有定时器. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,&#x0A;返回:对象有定时器返回true没有返回false.&#x0A;">
<param name="strObject" />
<param name="dwTimerID" />
</overload>
</keyword>
<keyword name="Player_GetItemGuid" func="yes">
<overload  retval="string" descr="&#x0A;获得玩家某装备位的物品GUID. &#x0A;参数:strPlayer 对象的GUID.,wSite 装备位,详细解说请参考lua_logic_define.lua.,&#x0A;返回:对应位置物品的GUID.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="wSite" />
</overload>
</keyword>
<keyword name="SubIntegral" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色积分. &#x0A;参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIntegral" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetDBNumEx" func="yes">
<overload  retval="bool" descr="&#x0A;在数据库中存储数值型变量. &#x0A;参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,&#x0A;返回:成功或失败.&#x0A;">
<param name="strKey" />
<param name="dbValue" />
<param name="byType" />
</overload>
</keyword>
<keyword name="SetPk" func="yes">
<overload  retval="void" descr="&#x0A;设置角色PK值. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Map_ClearDgnPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;清理副本中所有的玩家. &#x0A;参数:strMap 副本的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="MonsterKey2ID" func="yes">
<overload  retval="uint32" descr="&#x0A;根据怪物的KeyName取得怪物的ID. &#x0A;参数:strMonsterKey 怪物的KeyName.,&#x0A;返回:怪物的ID,出错返回0.&#x0A;">
<param name="strMonsterKey" />
</overload>
</keyword>
<keyword name="on_dungeon_end" func="yes">
<overload  retval="void" descr="&#x0A;副本销毁时回调. &#x0A;参数:strMap 副本的GUID.,strMapKey 副本的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="on_switch_skill" func="yes">
<overload  retval="void" descr="&#x0A;角色开关技能时触发. &#x0A;参数:strRole 角色的GUID.,wSkillID 技能的ID.,byActive 开关状态. 0 = 关, 1 = 开.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="wSkillID" />
<param name="byActive" />
</overload>
</keyword>
<keyword name="Player_SetAntiIndulge" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家的防沉迷状态. &#x0A;参数:strPlayer 玩家的GUID.,dwType 0 = 无收益 1 = 经验减半 2 = 全收益.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwType" />
</overload>
</keyword>
<keyword name="post_player_die" func="yes">
<overload  retval="void" descr="&#x0A;玩家死亡时回调. &#x0A;参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;备注:lua_trigger_player_post_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="ModifyItemGold" func="yes">
<overload  retval="bool" descr="&#x0A;修改物品的金币&#x0A;参数:strItem 物品GUID.,iGold 修改后的金币数.,&#x0A;返回:成功或失败.&#x0A;参考:Map_GenGold,GetItemGold,&#x0A;">
<param name="strItem" />
<param name="iGold" />
</overload>
</keyword>
<keyword name="encode" func="yes">
<overload  retval="string" descr="&#x0A;将lua对象转换成json格式的字符串.&#x0A;参数:oObject 任意lua对象.,&#x0A;返回:对象的json字符串.&#x0A;备注:json_text=json.encode(object) 将任意对象转换成json字符串，对象可以是数字、字符串、table。&#x0A;">
<param name="oObject" />
</overload>
</keyword>
<keyword name="ClearTrigger" func="yes">
<overload  retval="void" descr="&#x0A;移除对象拥有的所有触发器. &#x0A;参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="on_login" func="yes">
<overload  retval="void" descr="&#x0A;玩家进入游戏时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetPlayerCurrentHeroList" func="yes">
<overload  retval="table" descr="&#x0A;获取玩家已经载入的英雄列表&#x0A;参数:player 玩家的GUID.,&#x0A;返回:英雄列表.&#x0A;备注:返回一个数组，每个项包含英雄的guid&#x0A;">
<param name="player" />
</overload>
</keyword>
<keyword name="GenUniqueID" func="yes">
<overload  retval="string" descr="&#x0A;生成系统唯一标识符. &#x0A;参数: ,&#x0A;返回:标识符字符串.&#x0A;">
</overload>
</keyword>
<keyword name="TakeOffEx" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家脱装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 装备的GUID或KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
</overload>
</keyword>
<keyword name="Monster_IsExist" func="yes">
<overload  retval="bool" descr="&#x0A;判断怪物是否存在. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="RemoveEscorter" func="yes">
<overload  retval="bool" descr="&#x0A;移除玩家镖车. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetPanelSize" func="yes">
<overload  retval="bool" descr="&#x0A;设置角色NPC面板的size. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,wWidth 面板的宽度.,wHeight 面板的高度.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="IO_TextFileGetLine" func="yes">
<overload  retval="string" descr="&#x0A;从文本文件中取出指定行. &#x0A;参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数.,&#x0A;返回:行内容.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="dwLine" />
</overload>
</keyword>
<keyword name="eRoleAttr" func="yes">
<overload  retval="void" descr="&#x0A;枚举类型:角色属性类型定义&#x0A;参数:&#x0A;返回:无返回值.&#x0A;备注:&#x0A;lua_role_level 类型值=0 类型名=等级.&#x0A;lua_role_job 类型值=1 类型名=职业.&#x0A;lua_role_hp 类型值=2 类型名=当前hp.&#x0A;lua_role_max_hp 类型值=3 类型名=hp上限.&#x0A;lua_role_mp 类型值=4 类型名=当前mp.&#x0A;lua_role_max_mp 类型值=5 类型名=mp上限.&#x0A;lua_role_max_phy_def 类型值=6 类型名=物防上限.&#x0A;lua_role_min_phy_def 类型值=7 类型名=物防下限.&#x0A;lua_role_max_mag_def 类型值=8 类型名=魔防上限.&#x0A;lua_role_min_mag_def 类型值=9 类型名=魔防下限.&#x0A;lua_role_max_phy_atk 类型值=10 类型名=物攻上限.&#x0A;lua_role_min_phy_atk 类型值=11 类型名=物攻下限.&#x0A;lua_role_max_mag_atk 类型值=12 类型名=魔攻上限.&#x0A;lua_role_min_mag_atk 类型值=13 类型名=魔攻下限.&#x0A;lua_role_max_tao_atk 类型值=14 类型名=道术上限.&#x0A;lua_role_min_tao_atk 类型值=15 类型名=道术下限.&#x0A;lua_role_hit 类型值=16 类型名=命中.&#x0A;lua_role_miss 类型值=17 类型名=闪避.&#x0A;lua_role_move_speed 类型值=18 类型名=移动速度，基准值.&#x0A;lua_role_attack_speed 类型值=19 类型名=攻击速度，基准值.&#x0A;lua_role_weight 类型值=20 类型名=当前背包负重.&#x0A;lua_role_max_weight 类型值=21 类型名=上限背包负重.&#x0A;lua_role_equip_weight 类型值=22 类型名=当前装备负重.&#x0A;lua_role_max_equip_weight 类型值=23 类型名=上限装备负重.&#x0A;lua_role_brawn 类型值=24 类型名=腕力.&#x0A;lua_role_max_brawn 类型值=25 类型名=上限腕力.&#x0A;lua_role_point 类型值=26 类型名=剩余属性点.&#x0A;lua_role_point_hp 类型值=27 类型名=剩余属性点加HP.&#x0A;lua_role_point_mp 类型值=28 类型名=剩余属性点加MP.&#x0A;lua_role_point_phy_atk 类型值=29 类型名=剩余属性点加物攻.&#x0A;lua_role_point_mag_atk 类型值=30 类型名=剩余属性点加魔攻.&#x0A;lua_role_point_tao_atk 类型值=31 类型名=剩余属性点加道术.&#x0A;lua_role_point_phy_def 类型值=32 类型名=剩余属性点加物防.&#x0A;lua_role_point_mag_def 类型值=33 类型名=剩余属性点加魔防.&#x0A;lua_role_ele_1_atk 类型值=34 类型名=属性攻击（金）.&#x0A;lua_role_ele_2_atk 类型值=35 类型名=属性攻击（木）.&#x0A;lua_role_ele_3_atk 类型值=36 类型名=属性攻击（水）.&#x0A;lua_role_ele_4_atk 类型值=37 类型名=属性攻击（火）.&#x0A;lua_role_ele_5_atk 类型值=38 类型名=属性攻击（土）.&#x0A;lua_role_ele_1_def 类型值=39 类型名=属性防御（金）.&#x0A;lua_role_ele_2_def 类型值=40 类型名=属性防御（木）.&#x0A;lua_role_ele_3_def 类型值=41 类型名=属性防御（水）.&#x0A;lua_role_ele_4_def 类型值=42 类型名=属性防御（火）.&#x0A;lua_role_ele_5_def 类型值=43 类型名=属性防御（土）.&#x0A;lua_role_hp_rec 类型值=44 类型名=hp回复值.&#x0A;lua_role_mp_rec 类型值=45 类型名=mp回复值.&#x0A;lua_role_poison_rec 类型值=46 类型名=中毒恢复值.&#x0A;lua_role_energy 类型值=47 类型名=活力.&#x0A;lua_role_max_energy 类型值=48 类型名=活力上限.&#x0A;lua_role_burst 类型值=49 类型名=暴击率.&#x0A;lua_role_luck_curse 类型值=50 类型名=幸运诅咒.&#x0A;lua_role_pk 类型值=51 类型名=PK值.&#x0A;lua_role_prestige 类型值=52 类型名=声望.&#x0A;lua_role_meritorious 类型值=53 类型名=功勋.&#x0A;lua_role_achievement 类型值=54 类型名=成就.&#x0A;lua_role_reincarnation 类型值=55 类型名=转生标记.&#x0A;lua_role_rein_hp 类型值=56 类型名=转生后HP.&#x0A;lua_role_rein_mp 类型值=57 类型名=转生后MP.&#x0A;lua_role_rein_max_phy_def 类型值=58 类型名=转生后物防上限.&#x0A;lua_role_rein_min_phy_def 类型值=59 类型名=转生后物防下限.&#x0A;lua_role_rein_max_mag_def 类型值=60 类型名=转生魔防上限.&#x0A;lua_role_rein_min_mag_def 类型值=61 类型名=转生魔防下限.&#x0A;lua_role_rein_max_phy_atk 类型值=62 类型名=转生物攻上限.&#x0A;lua_role_rein_min_phy_atk 类型值=63 类型名=转生物攻下限.&#x0A;lua_role_rein_max_mag_atk 类型值=64 类型名=转生魔攻上限.&#x0A;lua_role_rein_min_mag_atk 类型值=65 类型名=转生魔攻下限.&#x0A;lua_role_rein_max_tao_atk 类型值=66 类型名=转生道术上限.&#x0A;lua_role_rein_min_tao_atk 类型值=67 类型名=转生道术下限.&#x0A;lua_role_rein_hit 类型值=68 类型名=转生命中.&#x0A;lua_role_rein_miss 类型值=69 类型名=转生闪避.&#x0A;lua_role_rein_burst 类型值=70 类型名=转生暴击率.&#x0A;lua_role_rein_weight 类型值=71 类型名=转生背包负重.&#x0A;lua_role_rein_equip_weight 类型值=72 类型名=转生装备负重.&#x0A;lua_role_rein_brawn 类型值=73 类型名=转生腕力.&#x0A;lua_role_bag_size_0 类型值=74 类型名=包裹0大小.&#x0A;lua_role_bag_size_1 类型值=75 类型名=包裹1大小.&#x0A;lua_role_bag_size_2 类型值=76 类型名=包裹2大小.&#x0A;lua_role_bag_size_3 类型值=77 类型名=包裹3大小.&#x0A;lua_role_bag_size_4 类型值=78 类型名=包裹4大小.&#x0A;lua_role_warehouse_size 类型值=79 类型名=玩家的仓库大小.&#x0A;lua_role_warehouse_adv_size 类型值=80 类型名=玩家高级仓库大小.&#x0A;lua_role_max_hp_pct 类型值=81 类型名=hp百分比.&#x0A;lua_role_max_mp_pct 类型值=82 类型名=mp百分比.&#x0A;lua_role_max_phy_def_pct 类型值=83 类型名=物防上限百分比.&#x0A;lua_role_min_phy_def_pct 类型值=84 类型名=物防下限百分比.&#x0A;lua_role_max_mag_def_pct 类型值=85 类型名=魔防上限百分比.&#x0A;lua_role_min_mag_def_pct 类型值=86 类型名=魔防下限百分比.&#x0A;lua_role_max_phy_atk_pct 类型值=87 类型名=物攻上限百分比.&#x0A;lua_role_min_phy_atk_pct 类型值=88 类型名=物攻下限百分比.&#x0A;lua_role_max_mag_atk_pct 类型值=89 类型名=魔攻上限百分比.&#x0A;lua_role_min_mag_atk_pct 类型值=90 类型名=魔攻下限百分比.&#x0A;lua_role_max_tao_atk_pct 类型值=91 类型名=道术上限百分比.&#x0A;lua_role_min_tao_atk_pct 类型值=92 类型名=道术下限百分比.&#x0A;lua_role_ele_1_atk_pct 类型值=93 类型名=属性攻击（金）百分比.&#x0A;lua_role_ele_2_atk_pct 类型值=94 类型名=属性攻击（木）百分比.&#x0A;lua_role_ele_3_atk_pct 类型值=95 类型名=属性攻击（水）百分比.&#x0A;lua_role_ele_4_atk_pct 类型值=96 类型名=属性攻击（火）百分比.&#x0A;lua_role_ele_5_atk_pct 类型值=97 类型名=属性攻击（土）百分比.&#x0A;lua_role_ele_1_def_pct 类型值=98 类型名=属性防御（金）百分比.&#x0A;lua_role_ele_2_def_pct 类型值=99 类型名=属性防御（木）百分比.&#x0A;lua_role_ele_3_def_pct 类型值=100 类型名=属性防御（水）百分比.&#x0A;lua_role_ele_4_def_pct 类型值=101 类型名=属性防御（火）百分比.&#x0A;lua_role_ele_5_def_pct 类型值=102 类型名=属性防御（土）百分比.&#x0A;lua_role_max_weight_pct 类型值=103 类型名=背包负重百分比.&#x0A;lua_role_max_equip_weight_pct 类型值=104 类型名=装备负重百分比.&#x0A;lua_role_max_brawn_pct 类型值=105 类型名=腕力百分比.&#x0A;lua_role_hp_rec_pct 类型值=106 类型名=hp回复速度百分比.&#x0A;lua_role_mp_rec_pct 类型值=107 类型名=mp回复速度百分比.&#x0A;lua_role_poison_rec_pct 类型值=108 类型名=中毒恢复速度百分比.&#x0A;lua_role_move_speed_pct 类型值=109 类型名=移动速度百分比.&#x0A;lua_role_attack_speed_pct 类型值=110 类型名=攻击速度百分比.&#x0A;lua_role_suck_hp 类型值=111 类型名=吸血.&#x0A;lua_role_suck_hp_pct 类型值=112 类型名=吸血百分比.&#x0A;lua_role_suck_max_hp_pct 类型值=113 类型名=吸血上限百分比.&#x0A;lua_role_suck_mp 类型值=114 类型名=吸魔.&#x0A;lua_role_suck_mp_pct 类型值=115 类型名=吸魔百分比.&#x0A;lua_role_suck_max_mp_pct 类型值=116 类型名=吸魔上限百分比.&#x0A;lua_role_ref_phy 类型值=117 类型名=物理伤害反射.&#x0A;lua_role_ref_phy_pct 类型值=118 类型名=物理伤害反射百分比.&#x0A;lua_role_ref_mag 类型值=119 类型名=魔法伤害反射数值.&#x0A;lua_role_ref_mag_pct 类型值=120 类型名=魔法伤害反射百分比.&#x0A;lua_role_imm_mag 类型值=121 类型名=魔法伤害减免数值.&#x0A;lua_role_imm_mag_pct 类型值=122 类型名=魔法伤害减免百分比.&#x0A;lua_role_imm_phy 类型值=123 类型名=物理伤害减免数值.&#x0A;lua_role_imm_phy_pct 类型值=124 类型名=物理伤害减免百分比.&#x0A;lua_role_atk_mode 类型值=125 类型名=攻击类型.&#x0A;lua_role_can_walk 类型值=126 类型名=能走路.&#x0A;lua_role_can_run 类型值=127 类型名=能跑步.&#x0A;lua_role_can_turn 类型值=128 类型名=能转向.&#x0A;lua_role_can_jump_map 类型值=129 类型名=能跳地图.&#x0A;lua_role_can_phy_atk 类型值=130 类型名=能物理攻击.&#x0A;lua_role_can_mag_atk 类型值=131 类型名=能魔法攻击.&#x0A;lua_role_can_use_item 类型值=132 类型名=能使用道具(包括换装).&#x0A;lua_role_is_phy_imm 类型值=133 类型名=物理免疫.&#x0A;lua_role_is_mag_imm 类型值=134 类型名=魔法免疫.&#x0A;lua_role_is_stealth 类型值=135 类型名=隐形.&#x0A;lua_role_has_mana_shield 类型值=136 类型名=有魔法盾.&#x0A;lua_role_has_collide 类型值=137 类型名=处于冲撞状态.&#x0A;lua_role_has_repelled 类型值=138 类型名=处于击退状态.&#x0A;lua_role_can_push 类型值=139 类型名=能否被推.&#x0A;lua_role_can_use_skill 类型值=140 类型名=能否使用技能.&#x0A;lua_role_is_black 类型值=141 类型名=是否为黑名.&#x0A;lua_role_has_imm_shield 类型值=142 类型名=有减免盾.&#x0A;lua_role_imm_shield 类型值=143 类型名=减免盾多少值，BUFF消失.&#x0A;lua_role_has_bag_guard 类型值=144 类型名=有包裹防掉落.&#x0A;lua_role_has_equip_guard 类型值=145 类型名=有装备防掉落.&#x0A;lua_role_is_gray 类型值=146 类型名=灰名.&#x0A;lua_role_is_chaos 类型值=147 类型名=混沌状态.&#x0A;lua_role_is_poisoning 类型值=148 类型名=是否中毒.&#x0A;lua_role_is_ghost 类型值=149 类型名=是否ghost.&#x0A;lua_role_is_pk 类型值=150 类型名=是否pk状态.&#x0A;lua_role_can_through 类型值=151 类型名=是否可以穿人穿怪.&#x0A;lua_role_can_zhenshi 类型值=152 类型名=是否珍视.&#x0A;lua_role_can_opt_bag 类型值=153 类型名=是否可以操作包裹.&#x0A;lua_role_can_change_atk_mode 类型值=154 类型名=是否可以改变攻击类型.&#x0A;lua_role_inner_force 类型值=155 类型名=角色内功值.&#x0A;lua_role_inner_force_lv 类型值=156 类型名=角色内功等级.&#x0A;lua_role_inner_force_rec 类型值=157 类型名=内功恢复速度.&#x0A;lua_role_inner_force_rec_pct 类型值=158 类型名=内功恢复速度百分比.&#x0A;lua_role_max_inner_force 类型值=159 类型名=角色最大内功值.&#x0A;lua_role_inner_force_exp_pct 类型值=160 类型名=内功经验倍数.&#x0A;lua_role_inner_force_derate_pct 类型值=161 类型名=内功减伤百分比.&#x0A;lua_role_has_team 类型值=180 类型名= 有队伍.&#x0A;lua_role_gender 类型值=181 类型名= 性别.&#x0A;lua_role_head 类型值=182 类型名= 头像.&#x0A;lua_role_hair 类型值=183 类型名= 头发.&#x0A;lua_role_hair_color 类型值=184 类型名= 头发颜色.&#x0A;lua_role_gm_level 类型值=185 类型名= gm等级.&#x0A;lua_role_identify 类型值=186 类型名= 鉴定积分.&#x0A;lua_role_title 类型值=187 类型名= 称号.&#x0A;lua_role_gold_settlement 类型值=188 类型名= 金币结算: 1金币结算 0:绑币结算.&#x0A;lua_role_stall 类型值=189 类型名= 0: 未摆摊 1: 摆摊准备 2: 摆摊中.&#x0A;lua_role_friend_switch 类型值=190 类型名= 0: 不可加好友 1: 可加好友.&#x0A;lua_role_team_switch 类型值=191 类型名= 0: 不接收队伍邀请 1: 接收队伍邀请.&#x0A;lua_role_has_family 类型值=192 类型名= 有行会.&#x0A;lua_role_exp_pct 类型值=193 类型名=经验倍数.&#x0A;lua_role_mag_miss 类型值=194 类型名=魔法闪避.&#x0A;lua_role_intensity 类型值=195 类型名=装备强度.&#x0A;lua_role_attack_pct 类型值=196 类型名=攻击力倍数.&#x0A;lua_role_defense_pct 类型值=197 类型名=防御力倍数.&#x0A;lua_role_gp_runtime 类型值=198 类型名=反外挂运行时计时器.&#x0A;lua_role_gp 类型值=199 类型名=反外挂总计数器.&#x0A;lua_role_ride_switch 类型值=200 类型名=骑马开关.&#x0A;lua_role_vip_level 类型值=201 类型名=角色vip等级.&#x0A;lua_role_vip_buytimes 类型值=202 类型名=角色vip购买时间.&#x0A;lua_role_lock_switch 类型值=203 类型名=锁开关.&#x0A;lua_role_effect1 类型值=204 类型名=武器发光位置.&#x0A;lua_role_effect2 类型值=205 类型名=身体发光位置.&#x0A;lua_role_effect3 类型值=206 类型名=马蹄发光位置.&#x0A;lua_role_effect4 类型值=207 类型名=预留发光位置1.&#x0A;lua_role_effect5 类型值=208 类型名=预留发光位置2.&#x0A;lua_role_camp 类型值=209 类型名=阵营.&#x0A;lua_role_avatar 类型值=210 类型名=外形.&#x0A;lua_role_rage 类型值=211 类型名=怒气.&#x0A;lua_role_max_rage 类型值=212 类型名=怒气上限.&#x0A;lua_role_hunt_drop_pct 类型值=213 类型名=怪物掉落倍数.&#x0A;lua_role_ignore_def 类型值=214 类型名=忽视目标防御常数.&#x0A;lua_role_ignore_def_pct 类型值=215 类型名=忽视目标防御百分比.&#x0A;lua_role_ignore_imm 类型值=216 类型名=忽视目标减免盾常数.&#x0A;lua_role_ignore_imm_pct 类型值=217 类型名=忽视目标减免盾百分比.&#x0A;lua_role_ignore_def_valid 类型值=218 类型名=忽视目标防御生效概率百分比.&#x0A;lua_role_igonre_imm_valid 类型值=219 类型名=忽视目标减免盾生效概率百分比.&#x0A;lua_role_dyn_att0 类型值=300 类型名=动态属性名0.&#x0A;lua_role_dyn_value0 类型值=301 类型名=动态属性值0.&#x0A;lua_role_dyn_att1 类型值=302 类型名=动态属性名1.&#x0A;lua_role_dyn_value1 类型值=303 类型名=动态属性值1.&#x0A;lua_role_dyn_att2 类型值=304 类型名=动态属性名2.&#x0A;lua_role_dyn_value2 类型值=305 类型名=动态属性值2.&#x0A;lua_role_dyn_att3 类型值=306 类型名=动态属性名3.&#x0A;lua_role_dyn_value3 类型值=307 类型名=动态属性值3.&#x0A;lua_role_dyn_att4 类型值=308 类型名=动态属性名4.&#x0A;lua_role_dyn_value4 类型值=309 类型名=动态属性值4.&#x0A;lua_role_dyn_att5 类型值=310 类型名=动态属性名5.&#x0A;lua_role_dyn_value5 类型值=311 类型名=动态属性值5.&#x0A;lua_role_dyn_att6 类型值=312 类型名=动态属性名6.&#x0A;lua_role_dyn_value6 类型值=313 类型名=动态属性值6.&#x0A;lua_role_dyn_att7 类型值=314 类型名=动态属性名7.&#x0A;lua_role_dyn_value7 类型值=315 类型名=动态属性值7.&#x0A;lua_role_dyn_att8 类型值=316 类型名=动态属性名8.&#x0A;lua_role_dyn_value8 类型值=317 类型名=动态属性值8.&#x0A;lua_role_dyn_att9 类型值=318 类型名=动态属性名9.&#x0A;lua_role_dyn_value9 类型值=319 类型名=动态属性值9.&#x0A;lua_role_dyn_att10 类型值=320 类型名=动态属性名10.&#x0A;lua_role_dyn_value10 类型值=321 类型名=动态属性值10.&#x0A;lua_role_dyn_att11 类型值=322 类型名=动态属性名11.&#x0A;lua_role_dyn_value11 类型值=323 类型名=动态属性值11.&#x0A;lua_role_dyn_att12 类型值=324 类型名=动态属性名12.&#x0A;lua_role_dyn_value12 类型值=325 类型名=动态属性值12.&#x0A;lua_role_dyn_att13 类型值=326 类型名=动态属性名13.&#x0A;lua_role_dyn_value13 类型值=327 类型名=动态属性值13.&#x0A;lua_role_dyn_att14 类型值=328 类型名=动态属性名14.&#x0A;lua_role_dyn_value14 类型值=329 类型名=动态属性值14.&#x0A;lua_role_dyn_att15 类型值=330 类型名=动态属性名15.&#x0A;lua_role_dyn_value15 类型值=331 类型名=动态属性值15.&#x0A;lua_role_dyn_att16 类型值=332 类型名=动态属性名16.&#x0A;lua_role_dyn_value16 类型值=333 类型名=动态属性值16.&#x0A;lua_role_dyn_att17 类型值=334 类型名=动态属性名17.&#x0A;lua_role_dyn_value17 类型值=335 类型名=动态属性值17.&#x0A;lua_role_dyn_att18 类型值=336 类型名=动态属性名18.&#x0A;lua_role_dyn_value18 类型值=337 类型名=动态属性值18.&#x0A;lua_role_dyn_att19 类型值=338 类型名=动态属性名19.&#x0A;lua_role_dyn_value19 类型值=339 类型名=动态属性值19.&#x0A;lua_role_dyn_att20 类型值=340 类型名=动态属性名20.&#x0A;lua_role_dyn_value20 类型值=341 类型名=动态属性值20.&#x0A;lua_role_dyn_att21 类型值=342 类型名=动态属性名21.&#x0A;lua_role_dyn_value21 类型值=343 类型名=动态属性值21.&#x0A;lua_role_dyn_att22 类型值=344 类型名=动态属性名22.&#x0A;lua_role_dyn_value22 类型值=345 类型名=动态属性值22.&#x0A;lua_role_dyn_att23 类型值=346 类型名=动态属性名23.&#x0A;lua_role_dyn_value23 类型值=347 类型名=动态属性值23.&#x0A;lua_role_dyn_att24 类型值=348 类型名=动态属性名24.&#x0A;lua_role_dyn_value24 类型值=349 类型名=动态属性值24.&#x0A;lua_role_dyn_att25 类型值=350 类型名=动态属性名25.&#x0A;lua_role_dyn_value25 类型值=351 类型名=动态属性值25.&#x0A;lua_role_dyn_att26 类型值=352 类型名=动态属性名26.&#x0A;lua_role_dyn_value26 类型值=353 类型名=动态属性值26.&#x0A;lua_role_dyn_att27 类型值=354 类型名=动态属性名27.&#x0A;lua_role_dyn_value27 类型值=355 类型名=动态属性值27.&#x0A;lua_role_dyn_att28 类型值=356 类型名=动态属性名28.&#x0A;lua_role_dyn_value28 类型值=357 类型名=动态属性值28.&#x0A;lua_role_dyn_att29 类型值=358 类型名=动态属性名29.&#x0A;lua_role_dyn_value29 类型值=359 类型名=动态属性值29.&#x0A;lua_role_dyn_att30 类型值=360 类型名=动态属性名30.&#x0A;lua_role_dyn_value30 类型值=361 类型名=动态属性值30.&#x0A;lua_role_dyn_att31 类型值=362 类型名=动态属性名31.&#x0A;lua_role_dyn_value31 类型值=363 类型名=动态属性值31.&#x0A;lua_role_dyn_att32 类型值=364 类型名=动态属性名32.&#x0A;lua_role_dyn_value32 类型值=365 类型名=动态属性值32.&#x0A;lua_role_dyn_att33 类型值=366 类型名=动态属性名33.&#x0A;lua_role_dyn_value33 类型值=367 类型名=动态属性值33.&#x0A;lua_role_dyn_att34 类型值=368 类型名=动态属性名34.&#x0A;lua_role_dyn_value34 类型值=369 类型名=动态属性值34.&#x0A;lua_role_dyn_att35 类型值=370 类型名=动态属性名35.&#x0A;lua_role_dyn_value35 类型值=371 类型名=动态属性值35.&#x0A;lua_role_dyn_att36 类型值=372 类型名=动态属性名36.&#x0A;lua_role_dyn_value36 类型值=373 类型名=动态属性值36.&#x0A;lua_role_dyn_att37 类型值=374 类型名=动态属性名37.&#x0A;lua_role_dyn_value37 类型值=375 类型名=动态属性值37.&#x0A;lua_role_dyn_att38 类型值=376 类型名=动态属性名38.&#x0A;lua_role_dyn_value38 类型值=377 类型名=动态属性值38.&#x0A;lua_role_dyn_att39 类型值=378 类型名=动态属性名39.&#x0A;lua_role_dyn_value39 类型值=379 类型名=动态属性值39.&#x0A;lua_role_dyn_att40 类型值=380 类型名=动态属性名40.&#x0A;lua_role_dyn_value40 类型值=381 类型名=动态属性值40.&#x0A;lua_role_dyn_att41 类型值=382 类型名=动态属性名41.&#x0A;lua_role_dyn_value41 类型值=383 类型名=动态属性值41.&#x0A;lua_role_dyn_att42 类型值=384 类型名=动态属性名42.&#x0A;lua_role_dyn_value42 类型值=385 类型名=动态属性值42.&#x0A;lua_role_dyn_att43 类型值=386 类型名=动态属性名43.&#x0A;lua_role_dyn_value43 类型值=387 类型名=动态属性值43.&#x0A;lua_role_dyn_att44 类型值=388 类型名=动态属性名44.&#x0A;lua_role_dyn_value44 类型值=389 类型名=动态属性值44.&#x0A;lua_role_dyn_att45 类型值=390 类型名=动态属性名45.&#x0A;lua_role_dyn_value45 类型值=391 类型名=动态属性值45.&#x0A;lua_role_dyn_att46 类型值=392 类型名=动态属性名46.&#x0A;lua_role_dyn_value46 类型值=393 类型名=动态属性值46.&#x0A;lua_role_dyn_att47 类型值=394 类型名=动态属性名47.&#x0A;lua_role_dyn_value47 类型值=395 类型名=动态属性值47.&#x0A;lua_role_dyn_att48 类型值=396 类型名=动态属性名48.&#x0A;lua_role_dyn_value48 类型值=397 类型名=动态属性值48.&#x0A;lua_role_dyn_att49 类型值=398 类型名=动态属性名49.&#x0A;lua_role_dyn_value49 类型值=399 类型名=动态属性值49.&#x0A;lua_role_dyn_att50 类型值=400 类型名=动态属性名50.&#x0A;lua_role_dyn_value50 类型值=401 类型名=动态属性值50.&#x0A;lua_role_dyn_att51 类型值=402 类型名=动态属性名51.&#x0A;lua_role_dyn_value51 类型值=403 类型名=动态属性值51.&#x0A;lua_role_dyn_att52 类型值=404 类型名=动态属性名52.&#x0A;lua_role_dyn_value52 类型值=405 类型名=动态属性值52.&#x0A;lua_role_dyn_att53 类型值=406 类型名=动态属性名53.&#x0A;lua_role_dyn_value53 类型值=407 类型名=动态属性值53.&#x0A;lua_role_dyn_att54 类型值=408 类型名=动态属性名54.&#x0A;lua_role_dyn_value54 类型值=409 类型名=动态属性值54.&#x0A;lua_role_dyn_att55 类型值=410 类型名=动态属性名55.&#x0A;lua_role_dyn_value55 类型值=411 类型名=动态属性值55.&#x0A;lua_role_dyn_att56 类型值=412 类型名=动态属性名56.&#x0A;lua_role_dyn_value56 类型值=413 类型名=动态属性值56.&#x0A;lua_role_dyn_att57 类型值=414 类型名=动态属性名57.&#x0A;lua_role_dyn_value57 类型值=415 类型名=动态属性值57.&#x0A;lua_role_dyn_att58 类型值=416 类型名=动态属性名58.&#x0A;lua_role_dyn_value58 类型值=417 类型名=动态属性值58.&#x0A;lua_role_dyn_att59 类型值=418 类型名=动态属性名59.&#x0A;lua_role_dyn_value59 类型值=419 类型名=动态属性值59.&#x0A;lua_role_dyn_att60 类型值=420 类型名=动态属性名60.&#x0A;lua_role_dyn_value60 类型值=421 类型名=动态属性值60.&#x0A;lua_role_dyn_att61 类型值=422 类型名=动态属性名61.&#x0A;lua_role_dyn_value61 类型值=423 类型名=动态属性值61.&#x0A;lua_role_dyn_att62 类型值=424 类型名=动态属性名62.&#x0A;lua_role_dyn_value62 类型值=425 类型名=动态属性值62.&#x0A;lua_role_dyn_att63 类型值=426 类型名=动态属性名63.&#x0A;lua_role_dyn_value63 类型值=427 类型名=动态属性值63.&#x0A;lua_role_dyn_att64 类型值=428 类型名=动态属性名64.&#x0A;lua_role_dyn_value64 类型值=429 类型名=动态属性值64.&#x0A;lua_role_dyn_att65 类型值=430 类型名=动态属性名65.&#x0A;lua_role_dyn_value65 类型值=431 类型名=动态属性值65.&#x0A;lua_role_dyn_att66 类型值=432 类型名=动态属性名66.&#x0A;lua_role_dyn_value66 类型值=433 类型名=动态属性值66.&#x0A;lua_role_dyn_att67 类型值=434 类型名=动态属性名67.&#x0A;lua_role_dyn_value67 类型值=435 类型名=动态属性值67.&#x0A;lua_role_dyn_att68 类型值=436 类型名=动态属性名68.&#x0A;lua_role_dyn_value68 类型值=437 类型名=动态属性值68.&#x0A;lua_role_dyn_att69 类型值=438 类型名=动态属性名69.&#x0A;lua_role_dyn_value69 类型值=439 类型名=动态属性值69.&#x0A;lua_role_dyn_att70 类型值=440 类型名=动态属性名70.&#x0A;lua_role_dyn_value70 类型值=441 类型名=动态属性值70.&#x0A;lua_role_dyn_att71 类型值=442 类型名=动态属性名71.&#x0A;lua_role_dyn_value71 类型值=443 类型名=动态属性值71.&#x0A;lua_role_dyn_att72 类型值=444 类型名=动态属性名72.&#x0A;lua_role_dyn_value72 类型值=445 类型名=动态属性值72.&#x0A;lua_role_dyn_att73 类型值=446 类型名=动态属性名73.&#x0A;lua_role_dyn_value73 类型值=447 类型名=动态属性值73.&#x0A;lua_role_dyn_att74 类型值=448 类型名=动态属性名74.&#x0A;lua_role_dyn_value74 类型值=449 类型名=动态属性值74.&#x0A;lua_role_dyn_att75 类型值=450 类型名=动态属性名75.&#x0A;lua_role_dyn_value75 类型值=451 类型名=动态属性值75.&#x0A;lua_role_dyn_att76 类型值=452 类型名=动态属性名76.&#x0A;lua_role_dyn_value76 类型值=453 类型名=动态属性值76.&#x0A;lua_role_dyn_att77 类型值=454 类型名=动态属性名77.&#x0A;lua_role_dyn_value77 类型值=455 类型名=动态属性值77.&#x0A;lua_role_dyn_att78 类型值=456 类型名=动态属性名78.&#x0A;lua_role_dyn_value78 类型值=457 类型名=动态属性值78.&#x0A;lua_role_dyn_att79 类型值=458 类型名=动态属性名79.&#x0A;lua_role_dyn_value79 类型值=459 类型名=动态属性值79.&#x0A;lua_role_dyn_att80 类型值=460 类型名=动态属性名80.&#x0A;lua_role_dyn_value80 类型值=461 类型名=动态属性值80.&#x0A;lua_role_dyn_att81 类型值=462 类型名=动态属性名81.&#x0A;lua_role_dyn_value81 类型值=463 类型名=动态属性值81.&#x0A;lua_role_dyn_att82 类型值=464 类型名=动态属性名82.&#x0A;lua_role_dyn_value82 类型值=465 类型名=动态属性值82.&#x0A;lua_role_dyn_att83 类型值=466 类型名=动态属性名83.&#x0A;lua_role_dyn_value83 类型值=467 类型名=动态属性值83.&#x0A;lua_role_dyn_att84 类型值=468 类型名=动态属性名84.&#x0A;lua_role_dyn_value84 类型值=469 类型名=动态属性值84.&#x0A;lua_role_dyn_att85 类型值=470 类型名=动态属性名85.&#x0A;lua_role_dyn_value85 类型值=471 类型名=动态属性值85.&#x0A;lua_role_dyn_att86 类型值=472 类型名=动态属性名86.&#x0A;lua_role_dyn_value86 类型值=473 类型名=动态属性值86.&#x0A;lua_role_dyn_att87 类型值=474 类型名=动态属性名87.&#x0A;lua_role_dyn_value87 类型值=475 类型名=动态属性值87.&#x0A;lua_role_dyn_att88 类型值=476 类型名=动态属性名88.&#x0A;lua_role_dyn_value88 类型值=477 类型名=动态属性值88.&#x0A;lua_role_dyn_att89 类型值=478 类型名=动态属性名89.&#x0A;lua_role_dyn_value89 类型值=479 类型名=动态属性值89.&#x0A;lua_role_dyn_att90 类型值=480 类型名=动态属性名90.&#x0A;lua_role_dyn_value90 类型值=481 类型名=动态属性值90.&#x0A;lua_role_dyn_att91 类型值=482 类型名=动态属性名91.&#x0A;lua_role_dyn_value91 类型值=483 类型名=动态属性值91.&#x0A;lua_role_dyn_att92 类型值=484 类型名=动态属性名92.&#x0A;lua_role_dyn_value92 类型值=485 类型名=动态属性值92.&#x0A;lua_role_dyn_att93 类型值=486 类型名=动态属性名93.&#x0A;lua_role_dyn_value93 类型值=487 类型名=动态属性值93.&#x0A;lua_role_dyn_att94 类型值=488 类型名=动态属性名94.&#x0A;lua_role_dyn_value94 类型值=489 类型名=动态属性值94.&#x0A;lua_role_dyn_att95 类型值=490 类型名=动态属性名95.&#x0A;lua_role_dyn_value95 类型值=491 类型名=动态属性值95.&#x0A;lua_role_dyn_att96 类型值=492 类型名=动态属性名96.&#x0A;lua_role_dyn_value96 类型值=493 类型名=动态属性值96.&#x0A;lua_role_dyn_att97 类型值=494 类型名=动态属性名97.&#x0A;lua_role_dyn_value97 类型值=495 类型名=动态属性值97.&#x0A;lua_role_dyn_att98 类型值=496 类型名=动态属性名98.&#x0A;lua_role_dyn_value98 类型值=497 类型名=动态属性值98.&#x0A;lua_role_dyn_att99 类型值=498 类型名=动态属性名99.&#x0A;lua_role_dyn_value99 类型值=499 类型名=动态属性值99.&#x0A;&#x0A;">
</overload>
</keyword>
<keyword name="Player_IsCanNpcTalk" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能与NPC交互. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Pk" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的PK值. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:PK值.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="SetDir" func="yes">
<overload  retval="void" descr="&#x0A;设置角色方向. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Camp" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的阵营. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:阵营.&#x0A;参考:Camp,SetCamp,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GetTotalBill" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家充值元宝数. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:冲值元宝数.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetZoneId" func="yes">
<overload  retval="uint32" descr="&#x0A;获取区ID. &#x0A;参数: ,&#x0A;返回:区ID.&#x0A;">
</overload>
</keyword>
<keyword name="on_pre_item_pickup" func="yes">
<overload  retval="bool" descr="&#x0A;角色拾取道具前回调. &#x0A;参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:true = 允许角色拾取道具, false = 阻止角色拾取道具.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetPlayerHeroList" func="yes">
<overload  retval="table" descr="&#x0A;获取玩家所有的英雄列表&#x0A;参数:player 玩家的GUID.,&#x0A;返回:英雄列表.&#x0A;备注:返回一个数组，每个项包含英雄的guid，名字，职业等&#x0A;">
<param name="player" />
</overload>
</keyword>
<keyword name="Log" func="yes">
<overload  retval="void" descr="&#x0A;向日志服务器上传角色的物品操作行程日志. &#x0A;参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRoleName" />
<param name="strItemKey" />
<param name="strItem" />
<param name="iSrcValue" />
<param name="iRefValue" />
<param name="strDescript" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SysMsg_SendTipsMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端左上角消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="AccountName" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家的帐号名. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的帐号名,如果玩家不存在返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="DisaFbdLogin" func="yes">
<overload  retval="void" descr="&#x0A;解除禁止登陆. &#x0A;参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.,&#x0A;返回:无返回值.&#x0A;">
<param name="strKeyword" />
<param name="byType" />
</overload>
</keyword>
<keyword name="on_post_player_die" func="yes">
<overload  retval="void" descr="&#x0A;玩家死亡时回调. &#x0A;参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="Player_GetServantList" func="yes">
<overload  retval="table" descr="&#x0A;取得玩家的随从的GUID列表. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:随从的GUID列表,返回lua table.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_castle_war_init" func="yes">
<overload  retval="void" descr="&#x0A;攻城战申请成功时回调. &#x0A;参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strCastleName" />
<param name="strCastle" />
<param name="strBasilica" />
</overload>
</keyword>
<keyword name="on_pre_harm" func="yes">
<overload  retval="int" descr="&#x0A;被攻击者受到伤害即将损血前回调. &#x0A;参数:strRole 被攻击者的GUID,比如玩家、怪物、英雄.,strAttacker 攻击者的GUID,比如玩家、怪物、英雄.,iHp 被攻击者即将损失的血量,负数表示损血.,iDefense 本次攻击被攻击者发挥出的防御值,该值必定是正数.,strKillKey 本次攻击所使用的技能KeyName.,IsBurst 本次攻击是否为暴击 true=是 false=否.,&#x0A;返回:如果返回负数则损血,返回正数则补血.数值对应损/补的血量.&#x0A;警告:注意返回正负数的区别.如果系统、地图、角色分别都挂了这类触发器,生效顺序为系统、地图、角色.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strAttacker" />
<param name="iHp" />
<param name="iDefense" />
<param name="strKillKey" />
<param name="IsBurst" />
</overload>
</keyword>
<keyword name="RemoveTitle" func="yes">
<overload  retval="void" descr="&#x0A;移除玩家称号. &#x0A;参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="wTitleID" />
</overload>
</keyword>
<keyword name="Monster_DelBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;删除怪物BUFF. &#x0A;参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,&#x0A;返回:成功或失败.&#x0A;参考:DelBuff,&#x0A;">
<param name="strMonster" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="RunClientScript" func="yes">
<overload  retval="bool" descr="&#x0A;指定运行客户端脚本. &#x0A;参数:strObject 对象的GUID,对象可以为系统、玩家、队伍、行会、地图.,strLuaFile 客户端LUA文件名.,strLuaFunction 客户端LUA函数名.,strParam 自定义参数.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strLuaFile" />
<param name="strLuaFunction" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Player_IsInGS" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否在本GS上. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetEquipName" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家装备栏装备着的物品Name. &#x0A;参数:strPlayer 玩家的GUID.,wSite 装备栏位置,请参考引擎常量中的角色site位类型定义,&#x0A;返回:物品Name.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="wSite" />
</overload>
</keyword>
<keyword name="Item_GetPosY" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据物品GUID取得Y坐标. &#x0A;参数:strMap 物品所属地图GUID.,strItem 物品的GUID.,&#x0A;返回:物品的Y坐标,如果物品不存在返回0.&#x0A;参考:X,Y,&#x0A;">
<param name="strMap" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetAllPlayerCount" func="yes">
<overload  retval="int" descr="&#x0A;取得服务器所有人数. &#x0A;参数: ,&#x0A;返回:服务器人数.&#x0A;">
</overload>
</keyword>
<keyword name="AllServantBetry" func="yes">
<overload  retval="bool" descr="&#x0A;玩家所有宝宝背叛. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:true = 成功, false = 失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="DeleteHeroForPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;删除英雄（未开放）&#x0A;参数:player 玩家guid.,hero 英雄的guid.,&#x0A;返回:删除请求是否成功.&#x0A;备注:异步过程，是否成功会通过回调函数告知。&#x0A;">
<param name="player" />
<param name="hero" />
</overload>
</keyword>
<keyword name="Player_GetBagFree" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家包裹空格子数量. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹空格子数,出错返回-1.&#x0A;参考:GetBagFree,GetBagFreeEx,BagFree,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetPhyDef" func="yes">
<overload  retval="void" descr="&#x0A;设置角色物理防御. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="on_pre_die" func="yes">
<overload  retval="bool" descr="&#x0A;角色死亡之前回调. &#x0A;参数:strRole 角色的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许角色死亡, false = 阻止角色死亡.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="StartCastleWarEx" func="yes">
<overload  retval="bool" descr="&#x0A;开启城堡战. &#x0A;参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.,dwStartTime 攻城时间.UTC时间,参考GetAllTime.单位:秒.,dwDuration 持续时间,单位:秒.,&#x0A;返回:成功或失败.&#x0A;参考:GetAllTime,&#x0A;">
<param name="strCastleName" />
<param name="strFamilys" />
<param name="dwStartTime" />
<param name="dwDuration" />
</overload>
</keyword>
<keyword name="GetClientVer" func="yes">
<overload  retval="uint32" descr="&#x0A;获得客户端版本号&#x0A;参数:player_guid 玩家的guid.,&#x0A;返回:客户端版本号&#x0A;备注:注意玩家刚上线时可能会取不到版本号返回0&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="GetPlayerGloryState" func="yes">
<overload  retval="uint32" descr="&#x0A;获取玩家成就状态. &#x0A;参数:strPlayer 玩家的guid.,dwGloryID 成绩id.,&#x0A;返回:成就状态 0 成就不存在 1 未完成 2 已完成 3 已奖励.&#x0A;">
<param name="strPlayer" />
<param name="dwGloryID" />
</overload>
</keyword>
<keyword name="Wrist" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的护腕. &#x0A;参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
<param name="sequ" />
</overload>
</keyword>
<keyword name="Player_FixEquip" func="yes">
<overload  retval="bool" descr="&#x0A;修理玩家所有装备. &#x0A;参数:strPlayer 玩家的GUID.,bAdv 是否特修.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="bAdv" />
</overload>
</keyword>
<keyword name="SysCenterMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端中部消息. &#x0A;参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,&#x0A;返回:无返回值.&#x0A;">
<param name="byType" />
<param name="strMsg" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="OpenShopEx" func="yes">
<overload  retval="void" descr="&#x0A;打开随身商店&#x0A;参数:strPlayer 玩家GUID.,wShopId 商店ID.,&#x0A;返回:无返回值.&#x0A;参考:AddShop,OpenShop,&#x0A;">
<param name="strPlayer" />
<param name="wShopId" />
</overload>
</keyword>
<keyword name="ItemCountEx" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="bBindType" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarehouse" />
</overload>
</keyword>
<keyword name="Shoulder" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的护肩. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="AddScheduled" func="yes">
<overload  retval="bool" descr="&#x0A;给服务器添加计划任务. &#x0A;参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000.,strScheduleName 计划任务名字.,iType 计划任务类型:1 = Y-m-d h:m:s 特定时间, 2 = m-d h:m:s 每年执行, 3 = d h:m:s 每月执行, 4 = w h:m:s 每周执行, 5 = h:m:s 每天执行.,tTime 计划任务时间表.如:计划任务类型为4,则{'0 19:30:00', '3 19:30:00'}，代表每周日19:30:00、周三19:30:00触发计划任务.每周的第一天从周日开始.,strCallBack 计划任务回调函数.,strParam 参数，脚本使用者自由设置,方便上下文切换,回调时由服务器做为参数自动传回.,&#x0A;返回:成功或失败.&#x0A;警告:通过脚本添加的计划任务ID必须大于100000.&#x0A;">
<param name="dwScheduleID" />
<param name="strScheduleName" />
<param name="iType" />
<param name="tTime" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Monster_Remove" func="yes">
<overload  retval="bool" descr="&#x0A;移除怪物. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="AddBuff" func="yes">
<overload  retval="bool" descr="&#x0A;给角色添加BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,&#x0A;返回:成功或失败.&#x0A;警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Monster_GetIntProp" func="yes">
<overload  retval="double" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得怪物的数值型属性值. &#x0A;参数:strMonster 怪物的GUID.,iAttrType 属性类型,过期接口不再详述.,&#x0A;返回:属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strMonster" />
<param name="iAttrType" />
</overload>
</keyword>
<keyword name="on_attack" func="yes">
<overload  retval="void" descr="&#x0A;受攻击时回调. &#x0A;参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strAttacker" />
</overload>
</keyword>
<keyword name="SysMapMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部地图消息. &#x0A;参数:strMap 地图的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="PostURL" func="yes">
<overload  retval="bool" descr="&#x0A;获取一个URL的内容，带Post数据&#x0A;参数:Url http链接地址.,post_data 以post方式投递的数据.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间.,&#x0A;返回:true表示投递请求成功（不表示获取内容成功）.&#x0A;">
<param name="Url" />
<param name="post_data" />
<param name="callback" />
<param name="param_list" />
<param name="timeout" />
</overload>
</keyword>
<keyword name="Player_DragFromRole" func="yes">
<overload  retval="bool" descr="&#x0A;将目标玩家拉到自己面前. &#x0A;参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strDestPlayerName" />
</overload>
</keyword>
<keyword name="Equip_GetRefineLevel" func="yes">
<overload  retval="uint8" descr="&#x0A;取得装备精炼等级&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,&#x0A;返回:取得装备精炼等级.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
</overload>
</keyword>
<keyword name="Monster_SetCustomVarInt" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在对象实体上存储整型数值变量. &#x0A;参数:strMonster 怪物的GUID.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetInt,&#x0A;">
<param name="strMonster" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SysMsg_SendWebPage" func="yes">
<overload  retval="bool" descr="&#x0A;通知客户端打开网页. &#x0A;参数:strPlayer 玩家的GUID.,strURL 网页URL路径.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strURL" />
</overload>
</keyword>
<keyword name="Player_NpcMove" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家跳转到指定NPC附近. &#x0A;参数:strPlayer 玩家的GUID.,strNpcKey NPC的KeyName.,wRange 坐标范围.,&#x0A;返回:成功或失败.&#x0A;警告:该接口是异步的,接口返回时玩家还没有切换地图.&#x0A;">
<param name="strPlayer" />
<param name="strNpcKey" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="TakeItem" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SysMsg_SendBroadcastMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端底部广播消息. &#x0A;参数:strMsg 消息内容.,strName 广播标题.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMsg" />
<param name="strName" />
</overload>
</keyword>
<keyword name="Monster_GetMap" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得怪物当前地图的GUID. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物当前地图的GUID,出错返回''.&#x0A;参考:MapGuid,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="LastLogoutTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的最后退出时间. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:最后退出时间.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="ShowRoleHPRefEx" func="yes">
<overload  retval="bool" descr="&#x0A;向周围通知角色血量的变化扩展&#x0A;参数:see 需要看到目标角色血量变化的玩家GUID.如果为''则周围所有玩家都会看到,target 血量发生变化的对象的GUID(即谁的头顶会冒血),target_hp_ref 血量的变化量(即头顶冒血的数字),type 0=普通 1=暴击 2=致命 3=附加伤害,&#x0A;返回:成功或失败.&#x0A;">
<param name="see" />
<param name="target" />
<param name="target_hp_ref" />
<param name="type" />
</overload>
</keyword>
<keyword name="Monster_SetPanelSize" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;设置角色NPC面板的size. &#x0A;参数:strMonster 怪物的GUID.,wWidth 面板的宽度.,wHeight 面板的高度.,&#x0A;返回:成功或失败.&#x0A;参考:SetPanelSize,&#x0A;">
<param name="strMonster" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="CancelStall" func="yes">
<overload  retval="void" descr="&#x0A;取消玩家摆摊&#x0A;参数:player_guid 玩家的guid.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="Prestige" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的声望. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:声望.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GetDeposit" func="yes">
<overload  retval="double" descr="&#x0A;取得角色仓库金币. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家仓库金币的数量.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_post_equip" func="yes">
<overload  retval="void" descr="&#x0A;角色穿装备回调. &#x0A;参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strEquip" />
<param name="wEquipID" />
<param name="strEquipKey" />
</overload>
</keyword>
<keyword name="on_pre_npc_buy" func="yes">
<overload  retval="bool" descr="&#x0A;玩家在NPC购买之前回调. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买总价.,type 购买货币类型 0经验 1元宝 2绑定元宝 3积分 4金币 5绑定金币,strNpc NPC的GUID,&#x0A;返回:无.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iNum" />
<param name="iPrice" />
<param name="type" />
<param name="strNpc" />
</overload>
</keyword>
<keyword name="SetQuestGroupHuntingsCount" func="yes">
<overload  retval="void" descr="&#x0A;设置玩家任务组杀怪次数. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wMonsterID 怪物的ID.,iCount 杀怪数量.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
<param name="wMonsterID" />
<param name="iCount" />
</overload>
</keyword>
<keyword name="OpenWarehouseAdv" func="yes">
<overload  retval="void" descr="&#x0A;打开玩家高级仓库&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;参考:OpenWarehouse,OpenWarehouseAdv,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_IsIntegralEnough" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色的积分是否足够. &#x0A;参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="iIntegral" />
</overload>
</keyword>
<keyword name="Player_KillServant" func="yes">
<overload  retval="bool" descr="&#x0A;杀死玩家所有随从. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_damage_process" func="yes">
<overload  retval="void" descr="&#x0A;角色走伤害流程时回调. &#x0A;参数:strRole 伤害者的GUID.,strTarget 受害者的GUID.,wSkillID 伤害技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="Map_GetRegionDummys" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的英雄列表. &#x0A;参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,&#x0A;返回:区域内英雄列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="tRange" />
<param name="bIgnoreDied" />
</overload>
</keyword>
<keyword name="MagDefPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的魔防属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:魔防属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Player_DelBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;删除角色BUFF. &#x0A;参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName.,&#x0A;返回:成功或失败.&#x0A;参考:DelBuff,&#x0A;">
<param name="strPlayer" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="GetExpStr" func="yes">
<overload  retval="string" descr="&#x0A;获取角色经验字符串版. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:当前经验值字符串.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_AddIngot" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Monster_GetMaster" func="yes">
<overload  retval="string" descr="&#x0A;取得怪物主人的Name. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物主人的Name,如果对象不存在返回''.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Map_ClearDgnMonster" func="yes">
<overload  retval="bool" descr="&#x0A;清理副本中所有的怪物. &#x0A;参数:strMap 副本的GUID.,&#x0A;返回:成功或失败.&#x0A;警告:只清理普通怪,玩家的随从、守护怪不清理.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="GetQuestGroupHuntingsCount" func="yes">
<overload  retval="int32" descr="&#x0A;获取玩家任务组杀怪次数. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wMonsterID 怪物的ID.,&#x0A;返回:杀怪数量.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
<param name="wMonsterID" />
</overload>
</keyword>
<keyword name="SetHeroRage" func="yes">
<overload  retval="bool" descr="&#x0A;设置英雄的怒气值&#x0A;参数:hero 英雄的GUID.,rage 怒气值.,&#x0A;返回:设置是否成功.&#x0A;备注:无&#x0A;">
<param name="hero" />
<param name="rage" />
</overload>
</keyword>
<keyword name="SysMsg_SendBottomColor" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端底部消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,&#x0A;返回:无返回值.&#x0A;备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
<param name="iForeground" />
<param name="iBackground" />
</overload>
</keyword>
<keyword name="Map_SetCustomVarInt" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在地图实体上存储整型数值变量. &#x0A;参数:strMap 地图GUID.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetInt,&#x0A;">
<param name="strMap" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Error" func="yes">
<overload  retval="void" descr="&#x0A;打印错误日志. &#x0A;参数:strMsg 日志内容.,&#x0A;返回:无返回值.&#x0A;备注:若非必要,不要打印日志.&#x0A;警告:大量记录日志会对服务器性能带来些许影响.&#x0A;参考:Print,Debug,Warn,Error,&#x0A;">
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Player_AddGold" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddGold,AddBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="ShowFormWithContent" func="yes">
<overload  retval="void" descr="&#x0A;通知客户端显示表单&#x0A;参数:strPlayer 玩家GUID.,strFormName 表单名字.,strContent 提交的内容.,&#x0A;返回:无返回值.&#x0A;参考:ShowForm,ShowFormWithContent,&#x0A;">
<param name="strPlayer" />
<param name="strFormName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="MapOwnerFamily" func="yes">
<overload  retval="string" descr="&#x0A;判断地图上的所有玩家是否属于同一个行会. &#x0A;参数:strMap 地图GUID.,&#x0A;返回:如果地图上所有玩家不属于同一个行会返回'',反之返回行会名字.&#x0A;警告:忽略地图上的GM角色与死亡角色.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="Item_GetMaxDurability" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的最大耐久. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的最大耐久,出错返回-1.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="Player_SubExp" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Map_IsDgn" func="yes">
<overload  retval="bool" descr="&#x0A;判断地图是不是副本&#x0A;参数:strKeyName 地图的KeyName.,&#x0A;返回:是或否.&#x0A;">
<param name="strKeyName" />
</overload>
</keyword>
<keyword name="DisableEquip" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家脱装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetAllWeeks" func="yes">
<overload  retval="uint32" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的周数. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:周数.&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="UnRide" func="yes">
<overload  retval="void" descr="&#x0A;玩家解散坐骑&#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;警告:系统功能的扩展,脚本不应使用.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GetMonsterCount" func="yes">
<overload  retval="int32" descr="&#x0A;取得地图上怪物的数量. &#x0A;参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果为'',则代表所有怪.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,&#x0A;返回:怪物数量,出错返回-1.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="bIgnoreDied" />
<param name="bIgnoreServant" />
</overload>
</keyword>
<keyword name="on_pre_item_drop" func="yes">
<overload  retval="bool" descr="&#x0A;角色扔道具前回调. &#x0A;参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:true = 允许角色扔道具, false = 阻止角色扔道具.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetCastleOwnFamily" func="yes">
<overload  retval="string" descr="&#x0A;获取某城堡的拥有者行会. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:行会名.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="Player_Kick" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;踢玩家下线. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;警告:该函数是异步的,返回成功并不代表踢人成功.&#x0A;参考:KickByName,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetHead" func="yes">
<overload  retval="void" descr="&#x0A;设置角色的头像. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHead 头像编号.,&#x0A;返回:无返回值.&#x0A;参考:Head,SetHead,&#x0A;">
<param name="strRole" />
<param name="iHead" />
</overload>
</keyword>
<keyword name="on_item_appear" func="yes">
<overload  retval="void" descr="&#x0A;物品出现在地图时回调. &#x0A;参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="SysMsg_SendCenterMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端中部消息. &#x0A;参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,&#x0A;返回:无返回值.&#x0A;">
<param name="byType" />
<param name="strMsg" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Weight" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的背包负重. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:背包负重.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="Level" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的等级. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:等级.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="SetCastleOwnFamily" func="yes">
<overload  retval="void" descr="&#x0A;设置某城堡的拥有者行会. &#x0A;参数:strCastleName 城堡名.,strFamilyName 行会名.,&#x0A;返回:无返回值.&#x0A;">
<param name="strCastleName" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="Player_DestroyItemBind" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:DelItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Monster_IsMonster" func="yes">
<overload  retval="bool" descr="&#x0A;判断对象是否为怪物. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="mid" func="yes">
<overload  retval="string" descr="&#x0A;从字符串的开始偏移n个位置复制m个长度的字符.&#x0A;参数:strString 字符串.,iOffset 字符串偏移长度.,iLen 复制的字符串长度.,&#x0A;返回:返回新字符串.&#x0A;备注:t_str=string.mid(str, offset, len),从字符串str的开始偏移offset个位置复制len个长度的字符到目标串中，并返回目标串(功能同string.left)。比如:string.mid(&ldquo;abcdef&rdquo;, 1, 2),执行的结果就是&rdquo;bc&rdquo;。&#x0A;&#x0A;	复制的长度不能超过字符串长度-偏移长度&#x0A;">
<param name="strString" />
<param name="iOffset" />
<param name="iLen" />
</overload>
</keyword>
<keyword name="GetRunningFamilyWar" func="yes">
<overload  retval="table" descr="&#x0A;取得正在与玩家行会作战的行会列表. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:作战行会列表,返回lua table.&#x0A;警告:服务器功能的扩展,脚本作者不应该使用.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SysMsg_SendMsgDlg" func="yes">
<overload  retval="bool" descr="&#x0A;通知客户端显示消息框. &#x0A;参数:strPlayer 玩家的GUID.,dwDlgID 消息框ID,任填.同GUID下ID必须唯一.,strContent 消息框内容.,dwTimeOut 消息框超时时间,单位:秒.,strCallBack 消息框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwDlgID" />
<param name="strContent" />
<param name="dwTimeOut" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="ReloadScript" func="yes">
<overload  retval="bool" descr="&#x0A;重载某类型脚本. &#x0A;参数:iScriptType 脚本类型.,&#x0A;返回:成功或失败.&#x0A;">
<param name="iScriptType" />
</overload>
</keyword>
<keyword name="on_pre_level_up" func="yes">
<overload  retval="bool" descr="&#x0A;角色升级前回调. &#x0A;参数:strRole 角色的GUID.,iLevel 角色现在的等级.,&#x0A;返回:true 角色正常升级 false角色不升级经验不扣.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="iLevel" />
</overload>
</keyword>
<keyword name="on_player_change_name" func="yes">
<overload  retval="void" descr="&#x0A;玩家改名结果 玩家改名结果. &#x0A;参数:strPlayer 玩家的GUID.,result 改名结果(0成功，1名字重复失败),newName 新名字,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="result" />
<param name="newName" />
</overload>
</keyword>
<keyword name="Item_NotifyUpdate" func="yes">
<overload  retval="void" descr="&#x0A;向物品的主人通知物品属性更新. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="HasCastle" func="yes">
<overload  retval="bool" descr="&#x0A;判断某城堡是否存在. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:是或否.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="on_unride_request" func="yes">
<overload  retval="void" descr="&#x0A;收到下马请求时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GetCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得存储在地图实体上的字符型变量. &#x0A;参数:strMap 地图GUID.,strKey 变量名.,&#x0A;返回:变量值.&#x0A;参考:GetStr,&#x0A;">
<param name="strMap" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="KeyName2Id" func="yes">
<overload  retval="uint16" descr="&#x0A;更具对象KeyName获得Id&#x0A;参数:KeyName 对象KeyName.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,&#x0A;返回:对象配置表中的Id.&#x0A;">
<param name="KeyName" />
<param name="type" />
</overload>
</keyword>
<keyword name="Item2Json" func="yes">
<overload  retval="string" descr="&#x0A;根据物品实体信息生成物品的JSON信息. &#x0A;参数:strItem 物品的GUID.,&#x0A;返回:物品的JSON信息,出错返回''.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Map_GetRegionNpcs" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;获取地图区域内的NPC列表. &#x0A;参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC.,&#x0A;返回:区域内NPC列表,返回lua table.&#x0A;参考:Map_GetRegionNpcsEx,&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="GetGSClientVer" func="yes">
<overload  retval="uint32" descr="&#x0A;获取引擎中学习到的最新的客户端版本&#x0A;参数: ,&#x0A;返回:引擎里最新的客户端版本号.&#x0A;">
</overload>
</keyword>
<keyword name="Armor" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的衣服. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GetRegionMonstersEx" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的怪物列表. &#x0A;参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,&#x0A;返回:区域内怪物列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="tRange" />
<param name="bIgnoreDied" />
<param name="bIgnoreServant" />
</overload>
</keyword>
<keyword name="Npc_GetBindQuests" func="yes">
<overload  retval="table" descr="&#x0A;取得NPC实体上绑定的任务. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:绑定的可接任务和可交任务列表,返回lua table.&#x0A;备注:返回一个table，里面包含两个table，分别是可接任务列表和可交任务列表. * 示例代码：&#x0A;* function test(strNpc)&#x0A;*     local ret = lualib:Npc_GetBindQuests(strNpc)&#x0A;*     -- 打印可接任务id&#x0A;*     local accepts = ret[1]&#x0A;*     for k,v in ipairs(accepts) do&#x0A;*         print(v)&#x0A;*     end&#x0A;*     -- 打印可交任务id&#x0A;*     local accomplishes = ret[2]&#x0A;*     for k,v in ipairs(accomplishes) do&#x0A;*         print(v)&#x0A;*     end&#x0A;* end&#x0A;* &#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="NotifyCSChannelMsg" func="yes">
<overload  retval="void" descr="&#x0A;[此函数过期, 禁用]&#x0A;GS给CS发送频道消息 GS给CS发送频道消息.&#x0A;参数:wChannelType 频道类型.,strParam 参数.,strMsg 消息内容.,&#x0A;返回:无返回值.&#x0A;备注:该接口曾经用来扩展服务器的功能,脚本作者不要使用.&#x0A;">
<param name="wChannelType" />
<param name="strParam" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="GetFamilyMembers" func="yes">
<overload  retval="table" descr="&#x0A;返回玩家所属行会成员的列表&#x0A;参数:strGuid 玩家GUID或者行会的GUID.,bIsOnline 是否只取在线成员.,&#x0A;返回:行会成员列表的lua table.&#x0A;">
<param name="strGuid" />
<param name="bIsOnline" />
</overload>
</keyword>
<keyword name="IO_FileExists" func="yes">
<overload  retval="bool" descr="&#x0A;判断文件是否存在. &#x0A;参数:strFileName 文件名.,&#x0A;返回:存在或不存在.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="Player_SetInvincible" func="yes">
<overload  retval="bool" descr="&#x0A;设置/取消玩家无敌模式. &#x0A;参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消.,&#x0A;返回:无.&#x0A;">
<param name="strPlayer" />
<param name="bActive" />
</overload>
</keyword>
<keyword name="Player_GetTeamGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家队伍的GUID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家队伍的GUID.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetPlatformInfo" func="yes">
<overload  retval="table" descr="&#x0A;获取玩家第三方登陆平台信息. &#x0A;参数:strPlayer 玩家guid.,&#x0A;返回:返回lua_table, 包含平台名称和平台用户具体信息.&#x0A;警告:无. * 示例代码：&#x0A;* function test(strPlayer)&#x0A;*     local ret = lualib:GetPlatformInfo(strPlayer)&#x0A;*     local platform_name = ret[1]&#x0A;*     local platform_info_json = ret[2]&#x0A;*     if platform_info_json ~= '' then&#x0A;*       local platform_info_table = json.decode(platform_info_json)&#x0A;*     end&#x0A;* end&#x0A;*&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetTitle" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家当前称号. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:当前称号ID,无则返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="IO_GetFileText" func="yes">
<overload  retval="table" descr="&#x0A;读取文本文件内容,换行生成列表. &#x0A;参数:strFileName 文件名.,&#x0A;返回:文件内容列表,返回lua table.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="GetTime" func="yes">
<overload  retval="uint32" descr="&#x0A;[此函数过期, 禁用]&#x0A;从1970年1月1日0时0分0到现在经过的秒数. &#x0A;参数: ,&#x0A;返回:时间秒数.&#x0A;参考:GetTime,GetLocalTime,GetAllTime,&#x0A;">
</overload>
</keyword>
<keyword name="IsCastleWarStart" func="yes">
<overload  retval="bool" descr="&#x0A;判断某城堡战是否开启. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:是或否.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="Map_GetRegionMonstersCount" func="yes">
<overload  retval="int32" descr="&#x0A;获取地图区域内的怪物数量. &#x0A;参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,&#x0A;返回:区域内怪物数量.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="tRange" />
<param name="bIgnoreDied" />
<param name="bIgnoreServant" />
</overload>
</keyword>
<keyword name="Npc_IsExist" func="yes">
<overload  retval="bool" descr="&#x0A;判断NPC是否存在. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="RemainPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的剩余属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:剩余属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Gender" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的性别. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:性别.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="on_dig_meat" func="yes">
<overload  retval="void" descr="&#x0A;角色挖肉时回调. &#x0A;参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="UUIDToGUID" func="yes">
<overload  retval="string" descr="&#x0A;根据玩家或英雄的为一名标识获得其GUID&#x0A;参数:player_uuid 玩家的UUID(唯一名标识).,&#x0A;返回:玩家或英雄的GUID.&#x0A;">
<param name="player_uuid" />
</overload>
</keyword>
<keyword name="AddTitleEx" func="yes">
<overload  retval="void" descr="&#x0A;给玩家添加称号,允许设置称号时间. &#x0A;参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,dwTimes 称号的持继时间,单位为秒.,&#x0A;返回:无返回值.&#x0A;备注:如持继时间设为0,则使用配置表时间.&#x0A;">
<param name="strPlayer" />
<param name="wTitleID" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="on_castle_war_start" func="yes">
<overload  retval="void" descr="&#x0A;攻城战开启时回调. &#x0A;参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strCastleName" />
<param name="strCastle" />
<param name="strBasilica" />
</overload>
</keyword>
<keyword name="number_arithmetic" func="yes">
<overload  retval="string" descr="&#x0A;增加对INT64类型数据的四则运算支持&#x0A;参数:value1 INT64类型数字的字符串格式,value2 INT64类型数字的字符串格式,opreate 支持的运算符 '+', '-', '*', '/',&#x0A;返回:计算结果数字的字符串格式, 失败返回 '';&#x0A;备注:注意如果value1 和 value2都必须在INT64类型数值的范围内, opreate 必须是 '+', '-', '*', '/', 注意除法是按整数除法来运算&#x0A;">
<param name="value1" />
<param name="value2" />
<param name="opreate" />
</overload>
</keyword>
<keyword name="Json2ItemEx" func="yes">
<overload  retval="string" descr="&#x0A;根据物品的JSON信息生成物品的实体. &#x0A;参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息.,bNew 是否重新生成GUID.,&#x0A;返回:物品的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strJson" />
<param name="bNew" />
</overload>
</keyword>
<keyword name="Player_DropItemEx" func="yes">
<overload  retval="bool" descr="&#x0A;强制玩家丢弃物品. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:成功或失败.&#x0A;参考:DropItem,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="GiveOneBindItem" func="yes">
<overload  retval="string" descr="&#x0A;给予玩家单个绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:新物品的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SysMsg_SendMapMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部地图消息. &#x0A;参数:strMap 地图的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Monster_DataRow" func="yes">
<overload  retval="table" descr="&#x0A;根据怪物KeyName取得该怪物的配置表结构. &#x0A;参数:strMonsterKey 怪物的KeyName.,&#x0A;返回:物品的配置表结构.&#x0A;">
<param name="strMonsterKey" />
</overload>
</keyword>
<keyword name="Player_UseItem" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;让玩家使用道具. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:成功或失败.&#x0A;参考:ApplyItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Attr" func="yes">
<overload  retval="int32" descr="&#x0A;获取角色属性值. &#x0A;参数:strRole 角色的GUID.,iAttrName 属性类型.,&#x0A;返回:属性值.&#x0A;备注:接口出错也会返回0.&#x0A;参考:eRoleAttr,&#x0A;">
<param name="strRole" />
<param name="iAttrName" />
</overload>
</keyword>
<keyword name="CampInteg" func="yes">
<overload  retval="uint32" descr="&#x0A;取得该活动当天积分. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:当天活动积分.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="SysPromptMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部提示消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Player_GetServantLevel" func="yes">
<overload  retval="int32" descr="&#x0A;获取玩家召唤宝宝的等级. &#x0A;参数:strServant 宝宝的GUID.,&#x0A;返回:返回该宝宝的等级,出错返回0.&#x0A;">
<param name="strServant" />
</overload>
</keyword>
<keyword name="GetFamilyMemberAttr" func="yes">
<overload  retval="uint32" descr="&#x0A;获得家族成员信息&#x0A;参数:player_guid 角色的guid,attr_type 信息种类 1=称号 2=贡献度 3=累计贡献度 4=加入时间,&#x0A;返回:对应种类的数值.&#x0A;">
<param name="player_guid" />
<param name="attr_type" />
</overload>
</keyword>
<keyword name="SetPhyAtk" func="yes">
<overload  retval="void" descr="&#x0A;设置角色物理攻击. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="GetEscorter" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家镖车GUID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:镖车GUID,出错返回''.&#x0A;警告:跨GS后镖车的GUID会变更.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="ServantBetry" func="yes">
<overload  retval="bool" descr="&#x0A;玩家某个宝宝背叛. &#x0A;参数:strPlayer 玩家的GUID.,strServant 宝宝的GUID.,&#x0A;返回:true = 成功, false = 失败.&#x0A;参考:Player_GetServantList,&#x0A;">
<param name="strPlayer" />
<param name="strServant" />
</overload>
</keyword>
<keyword name="Player_AddSkill" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给角色添加技能. &#x0A;参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,&#x0A;返回:成功或失败.&#x0A;参考:AddSkill,&#x0A;">
<param name="strPlayer" />
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="Base64Encode" func="yes">
<overload  retval="string" descr="&#x0A;将字符串进行BASE64编码. &#x0A;参数:strString 字符串.,&#x0A;返回:编码后的字符串.&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="IO_FileMTime" func="yes">
<overload  retval="string" descr="&#x0A;返回文件修改时间. &#x0A;参数:strFileName 文件名.,&#x0A;返回:时间格式串.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="Guid2Name" func="yes">
<overload  retval="string" descr="&#x0A;更具Guid获得对象名称&#x0A;参数:guid 对象的guid.,&#x0A;返回:对象的名称.&#x0A;备注:传入guid的对象只能是玩家、英雄、行会、怪物、NPC、道具、地图.&#x0A;">
<param name="guid" />
</overload>
</keyword>
<keyword name="Map_GetRegionItems" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;获取地图区域内的物品列表. &#x0A;参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,wX X坐标.,wY Y坐标.,wRange 范围.,&#x0A;返回:区域内物品列表,返回lua table.&#x0A;参考:Map_GetRegionItemsEx,&#x0A;">
<param name="strMap" />
<param name="strItemKey" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Map_GenNpc" func="yes">
<overload  retval="string" descr="&#x0A;在地图中指定范围刷NPC. &#x0A;参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,&#x0A;返回:NPC的GUID.&#x0A;">
<param name="strMap" />
<param name="strNpcKey" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="byDir" />
</overload>
</keyword>
<keyword name="TakeItemEx" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bBind" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarehouse" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_SubExpStr" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色经验. &#x0A;参数:strPlayer 玩家的GUID.,str_exp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="str_exp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetFbdLogin" func="yes">
<overload  retval="void" descr="&#x0A;禁止登陆. &#x0A;参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.,dwTimes 禁止持续时间,单位:秒.,strDesc 禁止原因.,&#x0A;返回:无返回值.&#x0A;">
<param name="strKeyword" />
<param name="byType" />
<param name="dwTimes" />
<param name="strDesc" />
</overload>
</keyword>
<keyword name="SysMsg_SendBroadcastColor" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端底部广播消息. &#x0A;参数:strMsg 消息内容.,strName 广播标题.,iForeground 前景颜色.,iBackground 背景颜色.,&#x0A;返回:无返回值.&#x0A;备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.&#x0A;">
<param name="strMsg" />
<param name="strName" />
<param name="iForeground" />
<param name="iBackground" />
</overload>
</keyword>
<keyword name="GetFamilyLeader" func="yes">
<overload  retval="string" descr="&#x0A;获得行会会长guid&#x0A;参数:family 行会的名称或者GUID.,&#x0A;返回:如果没有返回'',有则返回会长玩家的guid&#x0A;备注:无&#x0A;">
<param name="family" />
</overload>
</keyword>
<keyword name="ScriptFuncToPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;给某个player执行一段脚本&#x0A;参数:player_name 玩家姓名,script 脚本名称,scriptFunc 脚本函数,params 脚本参数，以#分隔，执行时会分开传入函数,&#x0A;返回:true表示投递请求成功（不表示脚本已经执行）.&#x0A;备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.&#x0A;">
<param name="player_name" />
<param name="script" />
<param name="scriptFunc" />
<param name="params" />
</overload>
</keyword>
<keyword name="Item_GetLife" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的剩余存在时间. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的剩余存在时间,出错返回-1.秒位:秒.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="Player_GetBagItemList" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家包裹所有物品的GUID列表. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹所有物品的GUID列表,返回lua table.&#x0A;参考:BagItemList,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetHp" func="yes">
<overload  retval="void" descr="&#x0A;设置角色HP. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="IsCastleWarNull" func="yes">
<overload  retval="bool" descr="&#x0A;判断某城堡战是否注册过. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:是或否.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="Player_GetIntProp" func="yes">
<overload  retval="double" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的数值型属性值. &#x0A;参数:strPlayer 玩家的GUID.,iAttrType 属性类型,过期接口不再详述.,&#x0A;返回:属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="iAttrType" />
</overload>
</keyword>
<keyword name="GetBagFree" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹空格子数量. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹空格子数,出错返回-1.&#x0A;参考:GetBagFree,GetBagFreeEx,BagFree,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetJoinHitTarget" func="yes">
<overload  retval="string" descr="&#x0A;获取英雄合击的目标的guid&#x0A;参数:hero_guid 英雄的guid.,&#x0A;返回:返回合击目标角色的guid&#x0A;">
<param name="hero_guid" />
</overload>
</keyword>
<keyword name="BagFree" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹空格子数量. &#x0A;参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,&#x0A;返回:包裹空格子数,出错返回-1.&#x0A;参考:GetBagFree,GetBagFreeEx,BagFree,&#x0A;">
<param name="strPlayer" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarhouse" />
</overload>
</keyword>
<keyword name="Player_IsViceGuildLeader" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否副会长. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_equip" func="yes">
<overload  retval="bool" descr="&#x0A;角色穿装备之前回调. &#x0A;参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,&#x0A;返回:true = 允许玩家穿装备, false = 阻止玩家穿装备.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strEquip" />
<param name="wEquipID" />
<param name="strEquipKey" />
</overload>
</keyword>
<keyword name="HasBuff" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色是否拥有BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="Equip_GetQualProp" func="yes">
<overload  retval="table" descr="&#x0A;获取装备的某条品质属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条.,&#x0A;返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="index" />
</overload>
</keyword>
<keyword name="Player_GetItemCountUnbind" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Player_GetDgnByTicket" func="yes">
<overload  retval="string" descr="&#x0A;根据玩家的副本KeyName找到副本的GUID. &#x0A;参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName.,&#x0A;返回:副本的GUID.&#x0A;">
<param name="strPlayer" />
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="Equip_GetLuckCurse" func="yes">
<overload  retval="int16" descr="&#x0A;根据物品GUID取得该物品的幸运诅咒值. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:幸运或诅咒值.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="CreateHeroForPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;创建英雄&#x0A;参数:player 玩家guid.,name 英雄的姓名.,job 英雄的职业.,gender 英雄的性别.,callback 创建完成后的回调.,params 回调参数.,&#x0A;返回:创建请求是否成功.&#x0A;备注:该创建是异步过程，是否成功会通过回调函数告知。 function(player, err, name) player 玩家的guid err 错误码，0表示成功 name 欲创建的英雄名字&#x0A;">
<param name="player" />
<param name="name" />
<param name="job" />
<param name="gender" />
<param name="callback" />
<param name="params" />
</overload>
</keyword>
<keyword name="on_leave_map" func="yes">
<overload  retval="void" descr="&#x0A;玩家离开地图时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="pre_monster_die" func="yes">
<overload  retval="bool" descr="&#x0A;怪物死亡之前回调. &#x0A;参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许怪物死亡, false = 阻止怪物死亡.&#x0A;备注:lua_trigger_monster_pre_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="TeamInvite" func="yes">
<overload  retval="void" descr="&#x0A;组队邀请玩家&#x0A;参数:inviter_guid 邀请玩家的GUID.,invitee_guid 被邀请玩家的GUID.,need_agree 是否需要对方同意, true=需要 false=不需要,&#x0A;返回:无返回值.&#x0A;">
<param name="inviter_guid" />
<param name="invitee_guid" />
<param name="need_agree" />
</overload>
</keyword>
<keyword name="Monster_IsHasBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;判断怪物是否拥有某个BUFF. &#x0A;参数:strMonster 怪物的GUID.,wBuffID BUFF的ID.,&#x0A;返回:是或否.&#x0A;参考:HasBuff,&#x0A;">
<param name="strMonster" />
<param name="wBuffID" />
</overload>
</keyword>
<keyword name="WebBox" func="yes">
<overload  retval="bool" descr="&#x0A;发送显示Web页面框通知&#x0A;参数:player 玩家的GUID,url 弹出的IE框所使用的URL地址,&#x0A;返回:忽略&#x0A;">
<param name="player" />
<param name="url" />
</overload>
</keyword>
<keyword name="Map_GenNpcRnd" func="yes">
<overload  retval="string" descr="&#x0A;在地图中随机位置刷NPC. &#x0A;参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,&#x0A;返回:NPC的GUID.&#x0A;">
<param name="strMap" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="GetLuaPerformance" func="yes">
<overload  retval="table" descr="&#x0A;查询所有脚本的性能参数. &#x0A;参数: ,&#x0A;返回:返回lua table. 如:local tPerformances = lualib:GetLuaPerformance(); local strLuaName, strFuncName, dwCount, dwTotal = tPerformances['File'], tPerformances['Function'], tPerformances['Count'], tPerformances['Total'];&#x0A;">
</overload>
</keyword>
<keyword name="Npc_GetKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得NPC的KeyName. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:NPC的KeyName.&#x0A;参考:KeyName,&#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="WebBoxEx" func="yes">
<overload  retval="void" descr="&#x0A;发送显示Web页面框通知&#x0A;参数:player_guid 玩家的GUID,title 弹出的IE框所使用的标题,url 弹出的IE框所使用的URL地址,param 自定义参数,&#x0A;返回:无返回值.&#x0A;备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K&#x0A;&#x0A;	param：由脚本作者来维护&#x0A;&#x0A;	暂时用不到这个功能&#x0A;参考:SysMsg_SendWebMsg,&#x0A;">
<param name="player_guid" />
<param name="title" />
<param name="url" />
<param name="param" />
</overload>
</keyword>
<keyword name="Player_GetWarehouseFree" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家包裹空格子数量. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹空格子数,出错返回-1.&#x0A;参考:GetBagFree,GetBagFreeEx,BagFree,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SysMsg_SendTopColor" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端顶部广播消息. &#x0A;参数:byCount 消息滚动次数.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,&#x0A;返回:无返回值.&#x0A;备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.&#x0A;">
<param name="byCount" />
<param name="strMsg" />
<param name="iForeground" />
<param name="iBackground" />
</overload>
</keyword>
<keyword name="SubIngot" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色非绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubIngot,SubBindIngot,&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GetRegionFree" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;返回地图区域中空坐标列表. &#x0A;参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围.,&#x0A;返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFree(strMap, wX, wY, wR); local x, y = tGrids[1].X, tGrids[1].Y;&#x0A;参考:GetRegionFreeEx,&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Monster_GetCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得对象实体上存储的字符型变量. &#x0A;参数:strMonster 怪物的GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;">
<param name="strMonster" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetFamilyName" func="yes">
<overload  retval="string" descr="&#x0A;获取玩家的行会名. &#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:行会名,没有则返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetItemDropFreezeTime" func="yes">
<overload  retval="bool" descr="&#x0A;修改物品的掉落冻结时间&#x0A;参数:strItem 物品GUID.,dwFreeze 冻结时间,单位为秒.,&#x0A;返回:返回修改成功或失败.&#x0A;备注:冻结时间:掉落后多久可以被别人拾取.&#x0A;">
<param name="strItem" />
<param name="dwFreeze" />
</overload>
</keyword>
<keyword name="GetDayInt" func="yes">
<overload  retval="uint32" descr="&#x0A;取得对象实体上设置的数值型天变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,&#x0A;返回:变量的值,如果变量已跨天返回0.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="OnlineTimeEx" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的本次登陆的当天在线时间. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:当天在线时间,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="ItemCountByKey" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarehouse" />
<param name="bBindType" />
</overload>
</keyword>
<keyword name="Item_GetCustomVarInt" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得物品实体上存储的整型数值变量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回0.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:GetInt,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="Player_IsCanUseItem" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能使用物品. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SetForbidTalkType" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家禁言类型. &#x0A;参数:strPlayer 玩家的GUID.,strDesc 禁言设置原因.,dwType 禁言设置类型,1=文字禁言 2=语音禁言 3=文字和语音禁言.,dwTimes 禁言设置时间,单位秒.注意该时间请如实填写,否则会数据溢出.,&#x0A;返回:成功或失败.&#x0A;警告:该函数是异步的,返回成功并不代表设置成功.&#x0A;">
<param name="strPlayer" />
<param name="strDesc" />
<param name="dwType" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Map_GetPlayerCount" func="yes">
<overload  retval="int32" descr="&#x0A;取得地图上玩家的数量. &#x0A;参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色.,&#x0A;返回:玩家数量,出错返回-1.&#x0A;">
<param name="strMap" />
<param name="bIgnoreDied" />
</overload>
</keyword>
<keyword name="on_mining" func="yes">
<overload  retval="void" descr="&#x0A;角色挖矿时回调. &#x0A;参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strMapKey" />
<param name="wSkillID" />
<param name="strSkillName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="Map_GetMapGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得地图的GUID. &#x0A;参数:strMapKey 地图的KeyName.,&#x0A;返回:地图的GUID,出错返回''.&#x0A;">
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="OpenWarehouseEx" func="yes">
<overload  retval="void" descr="&#x0A;打开随身仓库&#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;参考:OpenWarehouse,OpenWarehouseAdv,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_IsTeamLeader" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否队长. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GetRegionNpcsEx" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的NPC列表. &#x0A;参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC.,&#x0A;返回:区域内NPC列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="tRange" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="HasCastleWar" func="yes">
<overload  retval="bool" descr="&#x0A;判断某行会是否在某城堡的攻击者列表中. &#x0A;参数:strCastleName 城堡名.,strFamilyName 行会名.,&#x0A;返回:是或否.&#x0A;">
<param name="strCastleName" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="IO_GetLuaPath" func="yes">
<overload  retval="string" descr="&#x0A;返回服务器LUA文件夹的绝对路径. &#x0A;参数: ,&#x0A;返回:LUA文件夹路径.&#x0A;">
</overload>
</keyword>
<keyword name="Map_GetRegionPlayers" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;获取地图区域内的玩家列表. &#x0A;参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色.,&#x0A;返回:区域内玩家列表,返回lua table.&#x0A;参考:Map_GetRegionPlayersEx,&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="bIgnoreDied" />
</overload>
</keyword>
<keyword name="GenTeam" func="yes">
<overload  retval="bool" descr="&#x0A;创建队伍. &#x0A;参数:strLeader 队长的Name.,tMembers 队伍成员的Name列表,lua table.,&#x0A;返回:异步调用,返回值忽略.&#x0A;">
<param name="strLeader" />
<param name="tMembers" />
</overload>
</keyword>
<keyword name="SetDayInt" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上设置数值型天变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SetCastleCustomVarStr" func="yes">
<overload  retval="void" descr="&#x0A;设置某城堡的字符型自定义变量. &#x0A;参数:strCastleName 城堡名.,strKey 变量名.,strValue 变量值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strCastleName" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="pre_process_pk" func="yes">
<overload  retval="bool" descr="&#x0A;角色处理PK值之前回调. &#x0A;参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,&#x0A;返回:true = 允许角色得到PK值, false = 阻止角色得到PK值.&#x0A;备注:lua_trigger_pre_process_pk&#x0A;参考:eTriggerType,&#x0A;">
<param name="strKiller" />
<param name="strVictim" />
</overload>
</keyword>
<keyword name="Map_GetCustomVarInt" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得存储在地图实体上的整型数值变量. &#x0A;参数:strMap 地图GUID.,strKey 变量名.,&#x0A;返回:变量值.&#x0A;参考:GetInt,&#x0A;">
<param name="strMap" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="NPCTalkDetailEx" func="yes">
<overload  retval="void" descr="&#x0A;打开NPC的对话框&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,&#x0A;返回:无返回值.&#x0A;参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
<param name="strTalk" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="on_kill" func="yes">
<overload  retval="void" descr="&#x0A;杀死角色时回调. &#x0A;参数:strKiller 杀手的GUID.,strRole 受害者的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strKiller" />
<param name="strRole" />
</overload>
</keyword>
<keyword name="SetEnergy" func="yes">
<overload  retval="void" descr="&#x0A;设置角色活力. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="GetCastleCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;取得某城堡的字符型自定义变量. &#x0A;参数:strCastleName 城堡名.,strKey 变量名.,&#x0A;返回:变量值.&#x0A;">
<param name="strCastleName" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="IO_FileSize" func="yes">
<overload  retval="uint32" descr="&#x0A;返回文件大小. &#x0A;参数:strFileName 文件名.,&#x0A;返回:文件大小.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="post_process_pk" func="yes">
<overload  retval="void" descr="&#x0A;角色处理PK值时回调. &#x0A;参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值.,&#x0A;返回:无返回值.&#x0A;备注:lua_trigger_post_process_pk&#x0A;参考:eTriggerType,&#x0A;">
<param name="strKiller" />
<param name="strVictim" />
<param name="iPKRef" />
</overload>
</keyword>
<keyword name="Medal" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的勋章. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetOffline" func="yes">
<overload  retval="void" descr="&#x0A;设置玩家离线挂机. &#x0A;参数:strPlayer 玩家的GUID.,dwTimes 挂机时间,单位:秒(最大不能超过4233600000也就是49天).,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="on_monster_appear" func="yes">
<overload  retval="void" descr="&#x0A;怪物出现在地图时回调. &#x0A;参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="wMonsterID" />
<param name="strMonsterName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="AddTrigger" func="yes">
<overload  retval="void" descr="&#x0A;给对象添加触发器. &#x0A;参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
<param name="iType" />
<param name="strCallBack" />
</overload>
</keyword>
<keyword name="Item_GetSite" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的包裹位. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:返回包裹位置,如果物品不存在返回0.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="SetCamp" func="yes">
<overload  retval="void" descr="&#x0A;设置角色的阵营. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 阵营值.,&#x0A;返回:无返回值.&#x0A;参考:Camp,SetCamp,&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="GSRunScript" func="yes">
<overload  retval="void" descr="&#x0A;让GS里所有人执行一段脚本. &#x0A;参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:无返回值.&#x0A;备注:该接口是异步的.接口返回成功并不代表脚本执行成功.&#x0A;">
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="RemoveTrigger" func="yes">
<overload  retval="bool" descr="&#x0A;移除对象拥有的某触发器. &#x0A;参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,&#x0A;返回:成功或失败.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
<param name="iType" />
<param name="strCallBack" />
</overload>
</keyword>
<keyword name="Map_ClearMonster" func="yes">
<overload  retval="bool" descr="&#x0A;清理地图指定范围中的怪物. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strMonsterKey 怪物的KeyName.,bIgnoreDied 是否忽略死亡的怪.,bIgnorePet 是否忽略玩家随从.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="strMonsterKey" />
<param name="bIgnoreDied" />
<param name="bIgnorePet" />
</overload>
</keyword>
<keyword name="Map_IsInGS" func="yes">
<overload  retval="bool" descr="&#x0A;判断某地图是否在本GS上. &#x0A;参数:strMapKey 地图的KeyName.,&#x0A;返回:是或否.&#x0A;">
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="DisableAutoReply" func="yes">
<overload  retval="bool" descr="&#x0A;取消玩家自动回复. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:异步调用,返回值忽略.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetServantCount" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家的随从的数量. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:随从的数量.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetGroupId" func="yes">
<overload  retval="uint32" descr="&#x0A;获取组ID. &#x0A;参数: ,&#x0A;返回:组ID.&#x0A;">
</overload>
</keyword>
<keyword name="SetMeritor" func="yes">
<overload  retval="void" descr="&#x0A;设置角色功勋. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="GetZoneKey" func="yes">
<overload  retval="string" descr="&#x0A;获取区密钥. &#x0A;参数: ,&#x0A;返回:区密钥.&#x0A;">
</overload>
</keyword>
<keyword name="GetAllYears" func="yes">
<overload  retval="uint32" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的年数. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:年数.&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Helmet" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的头盔. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Item_SetLife" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的剩余存在时间. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 剩余存在时间.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="on_spell" func="yes">
<overload  retval="void" descr="&#x0A;角色放技能时回调. &#x0A;参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name.,wX 技能施放坐标X.,wY 技能施放坐标Y.,strTarget 技能施放目标.,strSkillKeyName 技能的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSkillID" />
<param name="strSkillName" />
<param name="wX" />
<param name="wY" />
<param name="strTarget" />
<param name="strSkillKeyName" />
</overload>
</keyword>
<keyword name="Player_GetWarehouseSize" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家包裹大小. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹大小,出错返回-1.&#x0A;参考:GetBagSize,GetBagSizeEx,BagSize,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GenDummy" func="yes">
<overload  retval="string" descr="&#x0A;在地图上生成一个假人&#x0A;参数:name 假人的名称.,job 假人的职业,gender 假人的性别.,map 生成目标地图.,x 生成目标坐标X.,y 生成目标坐标Y.,player_guid 假人的主人,life 假人的生命时间，单位是秒 0表示永远存在,&#x0A;返回:假人的GUID.&#x0A;备注:无&#x0A;警告:不要使用该假人干一些需要保存的事情，因为这个假人不会存档.&#x0A;">
<param name="name" />
<param name="job" />
<param name="gender" />
<param name="map" />
<param name="x" />
<param name="y" />
<param name="player_guid" />
<param name="life" />
</overload>
</keyword>
<keyword name="Player_AddIntegral" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色积分. &#x0A;参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIntegral" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_SetDgnTicket" func="yes">
<overload  retval="bool" descr="&#x0A;给玩家设置副本门票. &#x0A;参数:strPlayer 玩家的GUID.,strMap 副本的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMap" />
</overload>
</keyword>
<keyword name="CanFixEquip" func="yes">
<overload  retval="bool" descr="&#x0A;判断某件装备能否被修理. &#x0A;参数:strItem 装备的GUID.,iType 修理类型,1 = 普修 2 = 特修.,&#x0A;返回:是或否.&#x0A;">
<param name="strItem" />
<param name="iType" />
</overload>
</keyword>
<keyword name="Equip_GetRefineProp" func="yes">
<overload  retval="table" descr="&#x0A;获取装备的精炼属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,&#x0A;返回:成功返回lua_table包括两个数据,key存储属性,value存储数据.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
</overload>
</keyword>
<keyword name="Map_RemoveNpc" func="yes">
<overload  retval="bool" descr="&#x0A;清理地图中的NPC. &#x0A;参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="IO_TextFileRndGetLine" func="yes">
<overload  retval="string" descr="&#x0A;从文本文件中取出随机行. &#x0A;参数:strFileName 文件名.,&#x0A;返回:行内容.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="Map_ClearDgnNpc" func="yes">
<overload  retval="bool" descr="&#x0A;清理副本中所有的NPC. &#x0A;参数:strMap 副本的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="Monster_GetHateList" func="yes">
<overload  retval="table" descr="&#x0A;取得怪物的仇恨列表. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物的仇恨列表,返回lua table. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Tick' = tick, 'Elapse' = elapse}, ....}&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="SysMsg_SendTriggerMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部触发消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="AddBuff2" func="yes">
<overload  retval="bool" descr="&#x0A;给角色添加BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strHost 对象的BUFF,代表BUFF由谁添加的.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写.,&#x0A;返回:成功或失败.&#x0A;警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.&#x0A;">
<param name="strRole" />
<param name="strHost" />
<param name="strBuffKey" />
<param name="strSkillKey" />
<param name="dwTimes" />
<param name="iAttr1" />
</overload>
</keyword>
<keyword name="Map_ClearDgnItem" func="yes">
<overload  retval="bool" descr="&#x0A;清理副本中所有的物品. &#x0A;参数:strMap 副本的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="on_level_up" func="yes">
<overload  retval="void" descr="&#x0A;角色升级时回调. &#x0A;参数:strRole 角色的GUID.,iLevel 角色现在的等级.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="iLevel" />
</overload>
</keyword>
<keyword name="Player_MapMoveXY" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家跳转到指定地图指定坐标. &#x0A;参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳.,wX 地图的X坐标.,wY 地图的Y坐标.,wRange 坐标范围.,&#x0A;返回:成功或失败.&#x0A;警告:该接口是异步的,接口返回时玩家还没有切换地图.&#x0A;">
<param name="strPlayer" />
<param name="strMapKey" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="GetMonth" func="yes">
<overload  retval="uint32" descr="&#x0A;取得指定时间值的月. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:月,范围: [1 - 12].&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="IsHeroCopy" func="yes">
<overload  retval="bool" descr="&#x0A;判断英雄是否为分身&#x0A;参数:hero_guid 英雄的guid.,&#x0A;返回:true是英雄分身 false不是分身.&#x0A;">
<param name="hero_guid" />
</overload>
</keyword>
<keyword name="LogWithId" func="yes">
<overload  retval="void" descr="&#x0A;向日志服务器上传角色的物品操作行程日志. &#x0A;参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRoleName" />
<param name="iAction" />
<param name="strItemKey" />
<param name="strItem" />
<param name="iSrcValue" />
<param name="iRefValue" />
<param name="strDescript" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_IsAttackModeLock" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家攻击模式是否被锁定&#x0A;参数:player_guid 玩家的GUID.,&#x0A;返回:true=锁定 false=不锁定.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="Monster_AddBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给怪物添加BUFF. &#x0A;参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,&#x0A;返回:成功或失败.&#x0A;参考:AddBuff,&#x0A;">
<param name="strMonster" />
<param name="strBuffKey" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Player_SetForbidTalk" func="yes">
<overload  retval="bool" descr="&#x0A;将玩家禁言. &#x0A;参数:strPlayer 玩家的GUID.,strDesc 禁言原因.,dwTimes 禁言时间,单位秒.注意该时间请如实填写,否则会数据溢出.,&#x0A;返回:成功或失败.&#x0A;警告:该函数是异步的,返回成功并不代表禁言成功.&#x0A;">
<param name="strPlayer" />
<param name="strDesc" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Map_DestroyDgn" func="yes">
<overload  retval="void" descr="&#x0A;销毁副本地图. &#x0A;参数:strMap 副本地图的GUID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="TakeOff" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家脱装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="on_remove_buff" func="yes">
<overload  retval="void" descr="&#x0A;角色删除BUFF时回调. &#x0A;参数:strRole 角色的GUID.,wBuffID BUFF的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wBuffID" />
</overload>
</keyword>
<keyword name="IsOffline" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否在离线挂机. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="MapCanRide" func="yes">
<overload  retval="bool" descr="&#x0A;判断地图是否可以上坐骑. &#x0A;参数:strMapKey 地图的KeyName.,&#x0A;返回:是或否.&#x0A;">
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="SetMagAtk" func="yes">
<overload  retval="void" descr="&#x0A;设置角色魔法攻击. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="Player_Relive" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家复活. &#x0A;参数:strPlayer 玩家的GUID.,strMap 复活地图GUID.,wX 复活坐标X.,wY 复活坐标Y.,wRange 复活范围.,wHPPCT 复活时的血量百分比.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="wHPPCT" />
</overload>
</keyword>
<keyword name="on_billinex" func="yes">
<overload  retval="void" descr="&#x0A;玩家冲值时回调. &#x0A;参数:userid 账号id.,iBillinIngot 当次充值元宝数.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="userid" />
<param name="iBillinIngot" />
</overload>
</keyword>
<keyword name="on_item_attr_zero" func="yes">
<overload  retval="void" descr="&#x0A;角色物品属性为0时回调. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,attr 指明物品那种属性为0(1=堆叠数 2=耐久 4=使用次数),&#x0A;返回:无返回值.&#x0A;备注:注意添加此触发器后 原来的on_item_amount_zero, on_item_use_zero, on_item_dur_zero, on_item_dur_zero_ex自动失效.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
<param name="attr" />
</overload>
</keyword>
<keyword name="Player_SetIntProp" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的数值型属性值. &#x0A;参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,wOprType 操作类型,过期接口不再详述.,dwValue 属性值.,&#x0A;返回:成功或失败.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="wAttrType" />
<param name="wOprType" />
<param name="dwValue" />
</overload>
</keyword>
<keyword name="SetDummyAIOption" func="yes">
<overload  retval="bool" descr="&#x0A;设置假人的AI配置&#x0A;参数:dummy 假人或英雄的GUID.,AI_table AI各项配置，INT32数组表示.,&#x0A;返回:设置是否成功.&#x0A;备注:可以参考system/dummy_AI.lua脚本&#x0A;">
<param name="dummy" />
<param name="AI_table" />
</overload>
</keyword>
<keyword name="on_pre_catch" func="yes">
<overload  retval="bool" descr="&#x0A;角色抓宝宝之前回调. &#x0A;参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID.,&#x0A;返回:true = 允许角色捉宝宝, false = 阻止角色捉宝宝.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="MoveItem" func="yes">
<overload  retval="bool" descr="&#x0A;物品移动接口. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,iSite 装备栏、背包、仓库、高级仓库中的格子对应的编号.,&#x0A;返回:true = 成功, false = 失败.&#x0A;备注:必须满足物品移动规则.比如:将武器移动到项链位置是被禁止的.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iSite" />
</overload>
</keyword>
<keyword name="on_pre_logout" func="yes">
<overload  retval="bool" descr="&#x0A;玩家退出游戏之前回调. &#x0A;参数:strPlayer 玩家的GUID.,iExitType 玩家退出类型. 1 = 退出游戏, 2 = 返回角色界面.,&#x0A;返回:true = 允许玩家退出游戏, false = 阻止玩家退出游戏.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="iExitType" />
</overload>
</keyword>
<keyword name="DestroyDummy" func="yes">
<overload  retval="bool" descr="&#x0A;清除一个假人&#x0A;参数:dummy 假人的GUID.,&#x0A;返回:清除是否成功.&#x0A;备注:该接口可以用来清除任何假人，包括玩家的英雄；如果这个假人需要保存，会自动保存到数据库（只有从数据库载入的才会保存）&#x0A;">
<param name="dummy" />
</overload>
</keyword>
<keyword name="Item_GetDurability" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的当前耐久. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的耐久,出错返回-1.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="SetLog" func="yes">
<overload  retval="bool" descr="&#x0A;日志开关接口. &#x0A;参数:log_level 日志级别 1、调试；2、信息；4、警告；8、错误.,is_open 是否打开.,&#x0A;返回:true = 成功, false = 失败.&#x0A;">
<param name="log_level" />
<param name="is_open" />
</overload>
</keyword>
<keyword name="Map_JumpXY" func="yes">
<overload  retval="void" descr="&#x0A;玩家跳地图. &#x0A;参数:strMap 副本的GUID.,strPlayer 玩家的GUID.,wX 跳转坐标X.,wY 跳转坐标Y.,wRange 跳转坐标范围.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMap" />
<param name="strPlayer" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Str2Time" func="yes">
<overload  retval="uint32" descr="&#x0A;将字符串时间转换成数值型时间. &#x0A;参数:strDateTime 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,&#x0A;返回:数值时间.&#x0A;">
<param name="strDateTime" />
</overload>
</keyword>
<keyword name="GetBagSize" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹大小. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹大小,出错返回-1.&#x0A;参考:GetBagSize,GetBagSizeEx,BagSize,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="ItemDropHost" func="yes">
<overload  retval="string" descr="&#x0A;取得物品的掉落源&#x0A;参数:strItem 物品GUID.,&#x0A;返回:返回掉落源的GUID, 可能是玩家、怪物、地图、系统('').&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetClientType" func="yes">
<overload  retval="uint8" descr="&#x0A;获取客户端的类型&#x0A;参数:player_guid 角色guid.,&#x0A;返回:客户端类型 0=端游 1=页游 2=手游&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="on_system_start" func="yes">
<overload  retval="void" descr="&#x0A;系统启动回调. &#x0A;参数: ,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
</overload>
</keyword>
<keyword name="AcceptQuest" func="yes">
<overload  retval="bool" descr="&#x0A;玩家接受任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="NPCTalkDetailQuest" func="yes">
<overload  retval="void" descr="&#x0A;打开NPC的对话框和任务&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,&#x0A;返回:无返回值.&#x0A;参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
<param name="strTalk" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="GiveBindItem" func="yes">
<overload  retval="bool" descr="&#x0A;给予玩家绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="IO_AppendFile" func="yes">
<overload  retval="bool" descr="&#x0A;追加文本内容到文本文件中. &#x0A;参数:strFileName 文件名.,strContent 文本内容.,&#x0A;返回:成功失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="GetActiveCount" func="yes">
<overload  retval="int" descr="&#x0A;取得玩家的总共活跃点数&#x0A;参数:strPlayerName 玩家的名字.,&#x0A;返回:取得玩家的活跃点数,如果玩家找不到返回0.&#x0A;">
<param name="strPlayerName" />
</overload>
</keyword>
<keyword name="Item_GetRepairCharge" func="yes">
<overload  retval="int" descr="&#x0A;根据物品GUID查询该物品的修理价格. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iType 修理类型 1 = 普修 2 = 特修.,&#x0A;返回:物品修理价格.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iType" />
</overload>
</keyword>
<keyword name="Equip_SetExtProp" func="yes">
<overload  retval="bool" descr="&#x0A;设置装备的某条扩展属性&#x0A;参数:player_guid 该参数现已无意义,默认填''即可.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条.,attr_name 属性名.,attr_value 属性值.,&#x0A;返回:成功返回true，失败返回false.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="index" />
<param name="attr_name" />
<param name="attr_value" />
</overload>
</keyword>
<keyword name="SysMsg_SendCenterMsgByClientType" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端中部消息. &#x0A;参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,byClientType 客户端类型组合, 只有消息类型为1或4时才起作用, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),&#x0A;返回:无返回值.&#x0A;">
<param name="byType" />
<param name="strMsg" />
<param name="strPlayer" />
<param name="byClientType" />
</overload>
</keyword>
<keyword name="OnlineTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的本次登陆在线时间. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:本次登陆在线时间,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetPosY" func="yes">
<overload  retval="int16" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的Y坐标值. &#x0A;参数:strPlayer 角色的GUID.,&#x0A;返回:Y坐标值,出错返回-1.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:X,Y,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetAutoReply" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家自动回复. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 自动回复内容.,&#x0A;返回:异步调用,返回值忽略.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="IsFamilyAlly" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家的公会与指定的公会是否为同盟. &#x0A;参数:strPlayer 玩家的GUID.,strFamilyName 同盟公会的名字.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="IsInCollection" func="yes">
<overload  retval="bool" descr="&#x0A;字符串查找函数. &#x0A;参数:strMaster 被分割串.,strSplit 分割符.,strSubStr 子字符串.,&#x0A;返回:主字符串被分割后的列表中,是否存在子字符串.&#x0A;">
<param name="strMaster" />
<param name="strSplit" />
<param name="strSubStr" />
</overload>
</keyword>
<keyword name="SetFamilyRelation" func="yes">
<overload  retval="string" descr="&#x0A;设置行会关系&#x0A;参数:family_name1 行会名1,family_name2 行会名2,opt 1=结盟 2=敌对 3=解除,call_back_func 操作完成后回调的脚本函数名,param 当回调函数回调时返回的参数,&#x0A;返回:如果设置条件失败返回失败原因 成功返回''(成功只代表请求投递成功，是不是成功要看回调函数里的返回)&#x0A;备注:调用此接口后，不管设置关系成功或者失败都会回调设置的call_back_func函数 * 示例代码：&#x0A;* function ally_family(player, param)&#x0A;*     local ret = lualib:SetFamilyRelation(family_name1, family_name2, 1, 'set_family_result', 'abc')&#x0A;*     if ret ~= '' then&#x0A;*        lualib:SysWarnMsg(player, '设置行会关系出错:'..ret)&#x0A;*     end&#x0A;* end&#x0A;* function set_family_result(family_name1, family_name2, opt, err, param)&#x0A;*     if err ~= '' then&#x0A;*        lualib:SysWarnMsg(player, '设置行会关系出错:'..err)&#x0A;*     end&#x0A;* end&#x0A;* &#x0A;">
<param name="family_name1" />
<param name="family_name2" />
<param name="opt" />
<param name="call_back_func" />
<param name="param" />
</overload>
</keyword>
<keyword name="DisableScheduled" func="yes">
<overload  retval="void" descr="&#x0A;清除服务器计划任务. &#x0A;参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000.,&#x0A;返回:无返回值.&#x0A;">
<param name="dwScheduleID" />
</overload>
</keyword>
<keyword name="on_family_member_ntf" func="yes">
<overload  retval="void" descr="&#x0A;行会事件触发回调&#x0A;参数:family_guid 行会的GUID.,family_name 行会名称,player_guid 玩家的GUID,opt 事件类型 1=添加成员 2=删除成员 3=编辑成员Title,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="family_guid" />
<param name="family_name" />
<param name="player_guid" />
<param name="opt" />
</overload>
</keyword>
<keyword name="Map_IsDgnExist" func="yes">
<overload  retval="bool" descr="&#x0A;判断副本是否存在. &#x0A;参数:strMap 副本的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="Player_GetWarehouseItemCountBind" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Item_GetStack" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品KeyName取得该物品的最大堆叠数量. &#x0A;参数:strKey 物品的KeyName.,&#x0A;返回:返回最大堆叠数量.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="on_item_disappear" func="yes">
<overload  retval="void" descr="&#x0A;物品消失在地图时回调. &#x0A;参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="Player_Kill" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;立即杀死角色. &#x0A;参数:strPlayer 玩家的GUID.,bDropItem 该参数无效,没有使用.,bShowKiller 该参数无效,没有使用.,&#x0A;返回:成功或失败.&#x0A;参考:Kill,&#x0A;">
<param name="strPlayer" />
<param name="bDropItem" />
<param name="bShowKiller" />
</overload>
</keyword>
<keyword name="UserID" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的帐号ID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:帐号ID,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Kill" func="yes">
<overload  retval="bool" descr="&#x0A;立即杀死角色. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GetConstVar" func="yes">
<overload  retval="string" descr="&#x0A;读取系统常量表. &#x0A;参数:strKey 常量名.,&#x0A;返回:常量值,出错返回''.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="on_item_drop" func="yes">
<overload  retval="void" descr="&#x0A;角色扔道具时回调. &#x0A;参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="ToAttrName" func="yes">
<overload  retval="string" descr="&#x0A;获取属性名. &#x0A;参数:iAttrName 属性类型.,&#x0A;返回:属性类型名,出错返回未知属性.&#x0A;备注:将属性的数值类型转成字符串类型.&#x0A;参考:eRoleAttr,&#x0A;">
<param name="iAttrName" />
</overload>
</keyword>
<keyword name="GetDayStr" func="yes">
<overload  retval="string" descr="&#x0A;取得对象实体上设置的字符型天变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,&#x0A;返回:变量的值,如果变量已跨天返回''.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="TitleName" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家的称谓. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的称谓,如果玩家不存在返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="AddItem" func="yes">
<overload  retval="bool" descr="&#x0A;给予玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,bBind 绑定类型,false = 不绑定 true = 绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="DelayCall" func="yes">
<overload  retval="bool" descr="&#x0A;给对象添加延时回调. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,iElapse 延时时间 单位(毫秒).,strCallBack 触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParams 自定义参数.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="iElapse" />
<param name="strCallBack" />
<param name="strParams" />
</overload>
</keyword>
<keyword name="on_map_create" func="yes">
<overload  retval="void" descr="&#x0A;地图生成时回调. &#x0A;参数:strMap 地图的GUID.,strMapKey 地图的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="GenTimerId" func="yes">
<overload  retval="uint32" descr="&#x0A;根据对象,自动生成定时器ID. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,&#x0A;返回:定时器ID,无则返回0.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="GetAllTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的秒数. &#x0A;参数: ,&#x0A;返回:秒数.&#x0A;">
</overload>
</keyword>
<keyword name="Map_SetCustomVarStr" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在地图实体上存储字符型变量. &#x0A;参数:strMap 地图GUID.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetStr,&#x0A;">
<param name="strMap" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="GetExp" func="yes">
<overload  retval="double" descr="&#x0A;获取角色经验. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:当前经验值.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="RequestClientVer" func="yes">
<overload  retval="void" descr="&#x0A;请求客户端版本&#x0A;参数:player_guid 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="Player_IsCanTurn" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能转向. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="AddAvataBuff" func="yes">
<overload  retval="bool" descr="&#x0A;给角色添加变身BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iAvata 变身模型ID.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒.,&#x0A;返回:成功或失败.&#x0A;警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.&#x0A;">
<param name="strRole" />
<param name="iAvata" />
<param name="strBuffKey" />
<param name="strSkillKey" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="AddTimerEx" func="yes">
<overload  retval="bool" descr="&#x0A;给对象添加定时器. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="dwTimerID" />
<param name="iElapse" />
<param name="iCount" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Map_GenSingleMonster" func="yes">
<overload  retval="string" descr="&#x0A;在地图中指定范围刷单只怪. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活.,&#x0A;返回:怪物GUID.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="byDir" />
<param name="strMonsterKey" />
<param name="bCanRelive" />
</overload>
</keyword>
<keyword name="GetDBNum" func="yes">
<overload  retval="double" descr="&#x0A;取得数据库中存储的数值型变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:变量值.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="Monster_GetDropOwner" func="yes">
<overload  retval="string" descr="&#x0A;获得怪物掉落归属玩家. &#x0A;参数:strMonster 怪物GUID.,&#x0A;返回:掉落归属的玩家GUID.&#x0A;备注:如果怪物无归属返回''&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Player_SubIngot" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetHeroState" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家已经载入的英雄状态&#x0A;参数:player 玩家的GUID.,hero 英雄的GUID.,state 欲设置的状态.,&#x0A;返回:设置是否成功.&#x0A;备注:状态包括 0、发呆；1、客户端控制；2、跟随；3、战斗； 4、守护&#x0A;">
<param name="player" />
<param name="hero" />
<param name="state" />
</overload>
</keyword>
<keyword name="Map_GenItem" func="yes">
<overload  retval="string" descr="&#x0A;在地图上指定位置刷出物品. &#x0A;参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,&#x0A;返回:物品的GUID,失败返回''.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bMustEmpty" />
<param name="dwFreeze" />
</overload>
</keyword>
<keyword name="Player_GetGuildCtrb" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的行会贡献度. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:行会贡献度,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SetCustomVarInt" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在对象实体上存储整型数值变量. &#x0A;参数:strPlayer 玩家的GUID.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetInt,&#x0A;">
<param name="strPlayer" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="LastKeepPkgTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的最后心跳包时间&#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:最后心跳包时间.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetVipRemain" func="yes">
<overload  retval="uint32" descr="&#x0A;取得VIP功能剩余时间. &#x0A;参数:strPlayer 玩家的GUID.,iVipID VIP功能ID.,&#x0A;返回:剩余时间,单位:秒.&#x0A;">
<param name="strPlayer" />
<param name="iVipID" />
</overload>
</keyword>
<keyword name="Player_IsCanTalk" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能说话. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="AddIngot" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色非绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddIngot,AddBindIngot,&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="FlushPlayerData" func="yes">
<overload  retval="bool" descr="&#x0A;将玩家数据刷新到dbserver&#x0A;参数:player_guid 玩家或英雄的guid,&#x0A;返回:刷新成功或失败.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="GetAllFamilys" func="yes">
<overload  retval="table" descr="&#x0A;取得服务器上所有行会的名字列表. &#x0A;参数: ,&#x0A;返回:行会名列表,返回lua table.&#x0A;">
</overload>
</keyword>
<keyword name="AddDeposit" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色仓库金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 添加金币的原因.,strTarget 添加金币动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_IsGuildLeader" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否会长. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="DummyMove" func="yes">
<overload  retval="bool" descr="&#x0A;指定假人移动&#x0A;参数:dummy_guid 假人的guid.,x 坐标X.,y 坐标Y.,&#x0A;返回:true表示命令成功下达，false表示假人不存在.&#x0A;">
<param name="dummy_guid" />
<param name="x" />
<param name="y" />
</overload>
</keyword>
<keyword name="ApplyItemTarget" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家对某目标使用道具. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,strTarget 目标的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
<param name="bInstance" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GetGold" func="yes">
<overload  retval="double" descr="&#x0A;取得角色非绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家非绑定金币的数量.&#x0A;参考:GetGold,GetBindGold,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetDBNum" func="yes">
<overload  retval="bool" descr="&#x0A;在数据库中存储数值型变量. &#x0A;参数:strKey 变量名.,dbValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strKey" />
<param name="dbValue" />
</overload>
</keyword>
<keyword name="on_add_buff" func="yes">
<overload  retval="void" descr="&#x0A;角色添加BUFF时回调. &#x0A;参数:strRole 角色的GUID.,wBuffID BUFF的ID.,strHost 施放BUFF角色的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wBuffID" />
<param name="strHost" />
</overload>
</keyword>
<keyword name="Player_TeamRunScript" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家队伍里所有人执行一段脚本. &#x0A;参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:成功或失败.&#x0A;备注:该接口是异步的.接口返回成功并不代表脚本执行成功.&#x0A;">
<param name="strPlayer" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Equip_GetIdentifyProp" func="yes">
<overload  retval="table" descr="&#x0A;获取装备的某条鉴定属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-2],共三条.,&#x0A;返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="index" />
</overload>
</keyword>
<keyword name="TakeOnEx" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家穿装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或物品的KeyName.,iSite 装备位置,仅当物品为护腕或戒指时,该参数才生效.,&#x0A;返回:成功或失败.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
<param name="iSite" />
</overload>
</keyword>
<keyword name="X" func="yes">
<overload  retval="uint16" descr="&#x0A;取得对象的X坐标. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,&#x0A;返回:X坐标.&#x0A;参考:X,Y,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Monster_SpellTargetEx" func="yes">
<overload  retval="bool" descr="&#x0A;让怪物施放技能. &#x0A;参数:strMonster 怪物的GUID.,strSkillKey 技能的KeyName.,strTarget 技能目标,可以是怪物、玩家、英雄.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMonster" />
<param name="strSkillKey" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="InputDlg" func="yes">
<overload  retval="bool" descr="&#x0A;通知客户端显示输入框. &#x0A;参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,byMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwDlgID" />
<param name="strContent" />
<param name="dwTimeOut" />
<param name="byMaxLen" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="SysMsg_SendGuildMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部公会消息. &#x0A;参数:strFamily 行会的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strFamily" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Npc_SetCustomVar" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在NPC实体上存储字符型变量. &#x0A;参数:strNpc NPC的GUID.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetStr,&#x0A;">
<param name="strNpc" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="ItemDropFreezeTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得物品的掉落冻结时间&#x0A;参数:strItem 物品GUID.,&#x0A;返回:返回物品掉落冻结时间.&#x0A;备注:冻结时间:掉落后多久可以被别人拾取.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Item_GetLevel" func="yes">
<overload  retval="int32" descr="&#x0A;根据物品GUID取得该物品的使用等级. &#x0A;参数:strItem 物品的GUID.,&#x0A;返回:物品的使用等级,出错返回0.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="AddBindIngot" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddIngot,AddBindIngot,&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="ShowForm" func="yes">
<overload  retval="void" descr="&#x0A;通知客户端显示表单&#x0A;参数:strPlayer 玩家GUID.,strFormName 表单名字.,&#x0A;返回:无返回值.&#x0A;参考:ShowForm,ShowFormWithContent,&#x0A;">
<param name="strPlayer" />
<param name="strFormName" />
</overload>
</keyword>
<keyword name="CreateFamily" func="yes">
<overload  retval="int32" descr="&#x0A;验证是否能创建行会&#x0A;参数:strPlayer 玩家GUID.,strFamilyName 行会名字.,&#x0A;返回:返回0可以创建,返回-1代表失败.&#x0A;">
<param name="strPlayer" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="DelItem" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iCount" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="UrlEncode" func="yes">
<overload  retval="string" descr="&#x0A;将字符串进行URL编码. &#x0A;参数:strString 字符串.,&#x0A;返回:编码后的字符串.&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="on_family_ntf" func="yes">
<overload  retval="void" descr="&#x0A;行会创建和销毁触发回调&#x0A;参数:family_guid 行会的GUID.,family_name 行会名称,opt_type 事件类型 0=行会销毁 1=行会创建,player_guid 创建或销毁行会的玩家GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="family_guid" />
<param name="family_name" />
<param name="opt_type" />
<param name="player_guid" />
</overload>
</keyword>
<keyword name="on_timer_check" func="yes">
<overload  retval="void" descr="&#x0A;道具自检回调. &#x0A;参数:strItem 道具的GUID.,&#x0A;返回:无返回值.&#x0A;备注:只有属于玩家的道具才会触发自检回调.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Weapon" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的武器. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_catch" func="yes">
<overload  retval="void" descr="&#x0A;角色抓宝宝时回调. &#x0A;参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="GetStr" func="yes">
<overload  retval="string" descr="&#x0A;取得对象实体上存储的字符型变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;备注:GUID = ''或GUID = '0'则为系统GUID.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="Map_GetGridObjList" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的对象列表. &#x0A;参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,&#x0A;返回:区域内对象列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Monster_GetSpecial" func="yes">
<overload  retval="table" descr="&#x0A;取得相应等级的抽取类型怪. &#x0A;参数:wMaxLevel 最大等级.,wMinLevel 最小等级.,&#x0A;返回:符合条件的抽取怪KeyName列表,返回lua table.&#x0A;">
<param name="wMaxLevel" />
<param name="wMinLevel" />
</overload>
</keyword>
<keyword name="GetCopyWho" func="yes">
<overload  retval="string" descr="&#x0A;获得分身的真身&#x0A;参数:copy_guid 分身的guid,&#x0A;返回:真身的guid.&#x0A;">
<param name="copy_guid" />
</overload>
</keyword>
<keyword name="Base64Decode" func="yes">
<overload  retval="string" descr="&#x0A;将字符串进行BASE64解码. &#x0A;参数:strString 字符串.,&#x0A;返回:解编码后的字符串.&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="SetStr" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上存储字符型变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、英雄、怪物、NPC、物品、地图、系统、行会.,strKey 变量名,变量名不能以'__'开头(系统用).,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;备注:GUID = ''或GUID = '0'则为系统GUID. GUID为玩家、英雄、物品、行会的变量会永久保存，其他对象上的变量重启服务器消失&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="GetFamilyTitle" func="yes">
<overload  retval="string" descr="&#x0A;获取玩家的行会封号. &#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:行会封号,没有则返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetIngot" func="yes">
<overload  retval="double" descr="&#x0A;取得角色非绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家非绑定元宝的数量.&#x0A;参考:GetIngot,GetBindIngot,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_HasTeam" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否组队. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="eTriggerType" func="yes">
<overload  retval="void" descr="&#x0A;枚举类型:触发器类型定义&#x0A;参数:&#x0A;返回:无返回值.&#x0A;备注:&#x0A;lua_trigger_system_start 类型值=1 类型名=系统启动时回调.&#x0A;lua_trigger_first_in_game 类型值=2 类型名=第一次进游戏时回调.&#x0A;lua_trigger_login 类型值=3 类型名=登陆游戏时回调.&#x0A;lua_trigger_logout 类型值=4 类型名=退出游戏时回调.&#x0A;lua_trigger_castle_war_start 类型值=5 类型名=攻城战开始时回调.&#x0A;lua_trigger_castle_war_end 类型值=6 类型名=攻城战结束时回调.&#x0A;lua_trigger_castle_war_init 类型值=7 类型名=类型值=7 类型名=申请攻城战成功时回调.&#x0A;lua_trigger_gp 类型值=8 类型名=类型值=8 类型名=检测到平均超速时回调.&#x0A;lua_trigger_gp_one 类型值=9 类型名=类型值=9 类型名=检测到超速时回调.&#x0A;lua_trigger_map_create 类型值=200 类型名=地图建创时回调.&#x0A;lua_trigger_map_destroy 类型值=201 类型名=地图销毁时回调.&#x0A;lua_trigger_enter_map 类型值=202 类型名=进入地图时回调.&#x0A;lua_trigger_leave_map 类型值=203 类型名=离开地图时回调.&#x0A;lua_trigger_item_appear 类型值=204 类型名=物品在地图上出现时回调.&#x0A;lua_trigger_item_disappear 类型值=205 类型名=物品在地图上消失时回调.&#x0A;lua_trigger_monster_appear 类型值=206 类型名=怪物在地图上出现时回调.&#x0A;lua_trigger_monster_disappear 类型值=207 类型名=怪物在地图上消失时回调.&#x0A;lua_trigger_npc_appear 类型值=208 类型名=NPC在地图上出现时回调.&#x0A;lua_trigger_npc_disappear 类型值=209 类型名=NPC在地图上消失时回调.&#x0A;lua_trigger_level_up 类型值=300 类型名=升级时回调.&#x0A;lua_trigger_pre_equip 类型值=301 类型名=穿装备之前回调.&#x0A;lua_trigger_post_equip 类型值=302 类型名=穿装备之后回调.&#x0A;lua_trigger_pre_un_equip 类型值=303 类型名=脱装备之前回调.&#x0A;lua_trigger_post_un_equip 类型值=304 类型名=脱装备之后回调.&#x0A;lua_trigger_move 类型值=305 类型名=移动时回调.&#x0A;lua_trigger_pre_spell 类型值=306 类型名=使用技能之前回调.&#x0A;lua_trigger_spell 类型值=307 类型名=使用技能之后回调.&#x0A;lua_trigger_pre_mining 类型值=308 类型名=挖矿之前回调.&#x0A;lua_trigger_mining 类型值=309 类型名=挖矿之后回调.&#x0A;lua_trigger_pre_item_apply 类型值=310 类型名=使用物品之前回调.&#x0A;lua_trigger_item_apply 类型值=311 类型名=使用物品之后回调.&#x0A;lua_trigger_pre_item_pickup 类型值=312 类型名=拾取物品之前回调.&#x0A;lua_trigger_item_pickup 类型值=313 类型名=拾取物品之后回调.&#x0A;lua_trigger_pre_item_drop 类型值=314 类型名=主动扔物品之前回调.&#x0A;lua_trigger_item_drop 类型值=315 类型名=主动扔物品之后回调.&#x0A;lua_trigger_pre_die 类型值=316 类型名=死亡之前回调.&#x0A;lua_trigger_post_die 类型值=317 类型名=死亡之后回调.&#x0A;lua_trigger_kill 类型值=318 类型名=杀死角色时回调.&#x0A;lua_trigger_attack 类型值=319 类型名=受攻击时回调.&#x0A;lua_trigger_damage_process 类型值=322 类型名=走伤害处理流程时回调.&#x0A;lua_trigger_restore_process 类型值=323 类型名=走恢复处理流程时回调.&#x0A;lua_trigger_teleport 类型值=324 类型名=瞬移时回调.&#x0A;lua_trigger_pre_catch 类型值=325 类型名=捉宝宝之前回调.&#x0A;lua_trigger_catch 类型值=326 类型名=捉宝宝之后回调.&#x0A;lua_trigger_pre_dig_meat 类型值=327 类型名=挖肉之前回调.&#x0A;lua_trigger_dig_meat 类型值=328 类型名=挖肉之后回调.&#x0A;lua_trigger_add_buff 类型值=329 类型名=添加BUFF时回调.&#x0A;lua_trigger_remove_buff 类型值=330 类型名=删除BUFF时回调.&#x0A;lua_trigger_pre_drop 类型值=331 类型名=要爆东西之前回调.&#x0A;lua_trigger_post_drop 类型值=332 类型名=要爆东西之后回调.&#x0A;lua_trigger_pre_drop_one 类型值=333 类型名=爆某个具体物品之前回调.&#x0A;lua_trigger_post_drop_one 类型值=334 类型名=爆某个具体物品之后回调.&#x0A;lua_trigger_add_skill 类型值=335 类型名=添加技能时回调.&#x0A;lua_trigger_switch_skill 类型值=336 类型名=开关技能时回调.&#x0A;lua_trigger_summon 类型值=337 类型名=召唤宝宝时回调.&#x0A;lua_trigger_pre_process_pk 类型值=338 类型名=处理PK值之前回调.&#x0A;lua_trigger_post_process_pk 类型值=339 类型名=处理PK值之后回调.&#x0A;lua_trigger_create 类型值=340 类型名=怪物、物品、NPC创建时回调.&#x0A;lua_trigger_destroy 类型值=341 类型名=怪物、物品、NPC销毁时回调.&#x0A;lua_trigger_pre_enter_jump 类型值=343 类型名=进入跳转点之前回调.&#x0A;lua_trigger_equip_suit 类型值=344 类型名=装备套装时回调.&#x0A;lua_trigger_un_equip_suit 类型值=345 类型名=脱掉套装时回调.&#x0A;lua_trigger_item_amount_zero 类型值=346 类型名=物品堆叠数为0时回调.&#x0A;lua_trigger_item_use_zero 类型值=347 类型名=物品使用次数为0时回调.&#x0A;lua_trigger_item_dur_zero 类型值=348 类型名=物品耐久为0时回调.&#x0A;lua_trigger_item_timeup 类型值=349 类型名=物品时效过期时回调.&#x0A;lua_trigger_add_exp 类型值=350 类型名=杀怪得到经验时回调.&#x0A;lua_trigger_monster_born 类型值=351 类型名=怪物出生时回调.&#x0A;lua_trigger_player_relive 类型值=352 类型名=玩家复活时回调.&#x0A;lua_trigger_dungeon_end 类型值=353 类型名=副本结束时回调.&#x0A;lua_trigger_timer_check 类型值=354 类型名=道具自检时回调.&#x0A;lua_trigger_add_exp_all 类型值=355 类型名=任何原因得到经验时回调(已被删除,不当使用会造成服务器死循环).&#x0A;lua_trigger_player_pre_die 类型值=356 类型名=玩家死亡之前回调.&#x0A;lua_trigger_player_post_die 类型值=357 类型名=玩家死亡之后回调.&#x0A;lua_trigger_monster_pre_die 类型值=358 类型名=怪物死亡之前回调.&#x0A;lua_trigger_monster_post_die 类型值=359 类型名=怪物死亡之后回调.&#x0A;lua_trigger_attack_ex 类型值=360 类型名=受攻击时回调.on_attack加强版,多了扣血值与技能参数.&#x0A;lua_trigger_system_stop 类型值=361 类型名=系统停止时回调.&#x0A;lua_trigger_pre_logout 类型值=362 类型名=退出游戏之前回调.&#x0A;lua_trigger_ride_request 类型值=363 类型名=收到上马请求时回调.&#x0A;lua_trigger_unride_request 类型值=364 类型名=收到下马请求时回调.&#x0A;lua_trigger_billin 类型值=365 类型名=充值回调,只有玩家在线才会回调.&#x0A;lua_trigger_mall 类型值=366 类型名=商城消费之后回调.&#x0A;lua_trigger_pre_mall 类型值=367 类型名=商城消费之前回调.&#x0A;lua_trigger_escorter_fail 类型值=368 类型名=护送怪失败时回调.&#x0A;lua_trigger_escorter_far 类型值=369 类型名=护送怪过远时回调.&#x0A;lua_trigger_apply_buff 类型值=370 类型名=buff触发回调.&#x0A;lua_trigger_monster_in_fight 类型值=371 类型名=怪物进入战斗状态触发.&#x0A;lua_trigger_monster_out_fight 类型值=372 类型名=怪物退出战斗状态触发.&#x0A;lua_trigger_player_pre_curse 类型值=373 类型名=武器被诅咒前触发.&#x0A;lua_trigger_role_pre_harm 类型值=374 类型名=角色受到伤害时触发,返回固定伤害数值.&#x0A;lua_trigger_pre_npc_buy 类型值=375 类型名=玩家NPC处购买物品前触发,返回值决定是否可以购买物品.&#x0A;lua_trigger_npc_buy 类型值=376 类型名=玩家NPC处购买物品触发.&#x0A;lua_trigger_pre_stall 类型值=377 类型名=玩家摆摊前触发.&#x0A;lua_trigger_hack_check 类型值=378 类型名=外挂检测触发.&#x0A;lua_trigger_auto_add_gold 类型值=379 类型名=杀怪自动加金币&#x0A;lua_trigger_hack_check2 类型值=380 类型名=外挂检查&#x0A;lua_trigger_family_member_ntf 类型值=381 类型名=行会事件&#x0A;lua_trigger_pre_stall_buy 类型值=382 类型名=购买摆摊物品前触发&#x0A;lua_trigger_family_ntf 类型值=383 类型名=行会创建和销毁触发&#x0A;lua_trigger_item_dur_zero_ex 类型值=384 类型名=耐久为0删除扩展&#x0A;lua_trigger_dummy_pre_die 类型值=385 类型名=假人死亡前触发&#x0A;lua_trigger_dummy_post_die 类型值=386 类型名=假人死亡后触发&#x0A;lua_trigger_item_attr_zero 类型值=387 类型名=物品属性变为0触发&#x0A;lua_trigger_attacker_pre_harm 类型值=388 类型名=攻击者受到伤害时触发,返回固定伤害数值.&#x0A;lua_trigger_pre_level_up 类型值=389 类型名=角色升级前触发.&#x0A;lua_trigger_pre_add_gray 类型值=390 类型名=角色变灰名前触发.&#x0A;lua_trigger_pre_join_family 类型值=391 类型名=申请加入行会前触发.&#x0A;lua_trigger_pre_invite_family 类型值=392 类型名=邀请加入行会前触发.&#x0A;lua_trigger_pre_relate_family 类型值=393 类型名=行会敌对联盟前触发.&#x0A;lua_trigger_billin_ex 类型值=394 类型名=玩家充值回调,不管玩家是否在线.&#x0A;lua_trigger_player_change_name 类型值=395 类型名=玩家改名结果触发&#x0A;lua_trigger_sub_ingot 类型值=396 类型名=玩家扣元宝触发&#x0A;lua_trigger_servant_betry 类型值=397 类型名=宝宝叛变触发&#x0A;lua_trigger_captcha_result 类型值=398 类型名=验证码结果触发&#x0A;lua_trigger_pre_p2p_trade 类型值=399 类型名=p2p交易前触发&#x0A;lua_trigger_pre_market_delegate_sell 类型值=400 类型名=寄售行寄售前触发&#x0A;&#x0A;">
</overload>
</keyword>
<keyword name="DropItem" func="yes">
<overload  retval="bool" descr="&#x0A;玩家丢弃物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或KeyName.,bInstance strItemInfo的类型,true = GUID false = KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
<param name="bInstance" />
</overload>
</keyword>
<keyword name="Y" func="yes">
<overload  retval="uint16" descr="&#x0A;取得对象的Y坐标. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,&#x0A;返回:Y坐标.&#x0A;参考:X,Y,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="IO_GetCustomVarInt" func="yes">
<overload  retval="int" descr="&#x0A;[此函数过期, 禁用]&#x0A;从数据库中读取整型数值变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:变量值.&#x0A;参考:GetDBNum,&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetCurrentHero" func="yes">
<overload  retval="string" descr="&#x0A;获取玩家当前召唤出来的英雄&#x0A;参数:player 玩家的GUID.,&#x0A;返回:英雄的GUID,如果没有返回''&#x0A;">
<param name="player" />
</overload>
</keyword>
<keyword name="Map_GenGold" func="yes">
<overload  retval="string" descr="&#x0A;在地图上指定位置刷出金币. &#x0A;参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,iGold 金币数量.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,iDropType 1 = 玩家扔, 2 = 玩家爆, 3 = 怪物爆, 4 = 脚本刷, 5 = 地图刷, 6 = 背包满爆地图上.,strDropHost 根据掉落类型有不同的意思, 1/2/4/6 = 可以直接拾取者, 3/5 = 被忽略的参数.,&#x0A;返回:物品的GUID,失败返回''.&#x0A;参考:ModifyItemGold,GetItemGold,&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="iGold" />
<param name="bMustEmpty" />
<param name="dwFreeze" />
<param name="iDropType" />
<param name="strDropHost" />
</overload>
</keyword>
<keyword name="IsInFamily" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否在指定的公会中. &#x0A;参数:strPlayer 玩家的GUID.,strFamilyName 公会的名字.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="Player_GetDir" func="yes">
<overload  retval="int16" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的方向. &#x0A;参数:strPlayer 角色的GUID.,&#x0A;返回:方向值,出错返回-1.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:Dir,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_dummy_die" func="yes">
<overload  retval="bool" descr="&#x0A;英雄死亡之前回调. &#x0A;参数:strDummy 英雄的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许英雄死亡, false = 阻止英雄死亡.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strDummy" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="IO_CheckTextInFile" func="yes">
<overload  retval="bool" descr="&#x0A;检查文本内容是否等于文本文件中的某一行. &#x0A;参数:strFileName 文件名.,strContent 文本内容.,&#x0A;返回:是或否.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="Player_Catch" func="yes">
<overload  retval="string" descr="&#x0A;玩家捕捉宝宝. &#x0A;参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,&#x0A;返回:宝宝的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strServantKey" />
</overload>
</keyword>
<keyword name="SendRoleInnerForceNtf" func="yes">
<overload  retval="bool" descr="&#x0A;向周围通知角色内功数值&#x0A;参数:strRole 角色GUID,角色只能是玩家或怪物.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="SetServantState" func="yes">
<overload  retval="void" descr="&#x0A;设置宝宝AI状态&#x0A;参数:servant_guid 宝宝的guid.,state 跟随=7 休息=8 战斗=9 强制更随=11,&#x0A;返回:无返回值.&#x0A;">
<param name="servant_guid" />
<param name="state" />
</overload>
</keyword>
<keyword name="SetRemainPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色剩余属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="StopCastleWar" func="yes">
<overload  retval="bool" descr="&#x0A;停止城堡战. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="SetPhyDefPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色物理防御属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="NotifyVar" func="yes">
<overload  retval="void" descr="&#x0A;向客户端发送变量通知. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,strKey 变量名.,&#x0A;返回:无返回值.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="Map_DelJumpPoint" func="yes">
<overload  retval="bool" descr="&#x0A;删除地图上的跳转点. &#x0A;参数:strMap 地图的GUID.,wSourX 跳转点的源地图坐标X.,wSourY 跳转点的源地图坐标Y.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="wSourX" />
<param name="wSourY" />
</overload>
</keyword>
<keyword name="on_logout" func="yes">
<overload  retval="void" descr="&#x0A;玩家退出游戏时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="post_die" func="yes">
<overload  retval="void" descr="&#x0A;角色死亡时回调. &#x0A;参数:strRole 角色的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;备注:lua_trigger_post_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="Debug" func="yes">
<overload  retval="void" descr="&#x0A;打印调试日志. &#x0A;参数:strMsg 日志内容.,&#x0A;返回:无返回值.&#x0A;备注:若非必要,不要打印日志.&#x0A;警告:大量记录日志会对服务器性能带来些许影响.&#x0A;参考:Print,Debug,Warn,Error,&#x0A;">
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Item_IsExist" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID判断该物品是否存在. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetZoneName" func="yes">
<overload  retval="string" descr="&#x0A;获取区域名字. &#x0A;参数: ,&#x0A;返回:区域名字.&#x0A;">
</overload>
</keyword>
<keyword name="SysTriggerMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部触发消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="on_teleport" func="yes">
<overload  retval="void" descr="&#x0A;角色走瞬移流程时回调. &#x0A;参数:strRole 角色的GUID.,wSkillID 技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="HasQuest" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否拥有某个任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="AccomplishQuest" func="yes">
<overload  retval="bool" descr="&#x0A;玩家提交任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wSelect 选择项,默认填0.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
<param name="wSelect" />
</overload>
</keyword>
<keyword name="SetIsBrust" func="yes">
<overload  retval="void" descr="&#x0A;设置是否显示为暴击&#x0A;参数:actor_guid 释放技能对象的guid.,is_brust 是否暴击 false=否 true=是.,&#x0A;返回:无返回值.&#x0A;备注:注意每调用一次接口只对下次伤害显示生效一次&#x0A;">
<param name="actor_guid" />
<param name="is_brust" />
</overload>
</keyword>
<keyword name="ReloadGMList" func="yes">
<overload  retval="void" descr="&#x0A;重载GM表. &#x0A;参数: ,&#x0A;返回:无返回值.&#x0A;">
</overload>
</keyword>
<keyword name="KickByName" func="yes">
<overload  retval="bool" descr="&#x0A;通过玩家角色名或账号名踢除玩家&#x0A;参数:name 玩家的角色名或账号名由参数type决定.,type type=2按角色名踢,type=3按账号名踢,reason 踢人的原因用于日志服务器记录,&#x0A;返回:成功返回true 玩家不再返回false.&#x0A;">
<param name="name" />
<param name="type" />
<param name="reason" />
</overload>
</keyword>
<keyword name="Monster_SpellTarget" func="yes">
<overload  retval="bool" descr="&#x0A;让怪物施放技能. &#x0A;参数:strMonster 怪物的GUID.,wSkillID 技能ID.,strTarget 技能目标,可以是怪物、玩家、英雄.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMonster" />
<param name="wSkillID" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="CampCounts" func="yes">
<overload  retval="uint32" descr="&#x0A;取得该活动总计参与次数. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:总计参与活动次数.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="QueryCastleStart" func="yes">
<overload  retval="uint32" descr="&#x0A;查询攻城时间. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数.&#x0A;警告:申请过攻城以后再查询攻城时间才有意义.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="Item_GetKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据物品GUID取得KeyName. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的KeyName,如果物品不存在返回''.&#x0A;参考:KeyName,Name,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="MagDef" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的魔防. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:魔防.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="on_item_dur_zero_ex" func="yes">
<overload  retval="void" descr="&#x0A;角色装备耐久为0时回调扩展. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;备注:此回调和on_item_dur_zero的区别是此回调中增加装备耐久，装备不会销毁&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="IO_GetCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;从数据库中读取字符型变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:变量值.&#x0A;参考:GetDBStr,&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="Npc_Remove" func="yes">
<overload  retval="bool" descr="&#x0A;移除NPC. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="Player_IsCanMove" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否可以移动. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Item_GetSubType" func="yes">
<overload  retval="uint8" descr="&#x0A;取得物品的子类型. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品子类型,具体类型请参考策划Item表.出错返回0.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="AddExp" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GetSvrRunTime" func="yes">
<overload  retval="uint32" descr="&#x0A;获取服务器运行时间. &#x0A;参数: ,&#x0A;返回:运行的秒数.&#x0A;">
</overload>
</keyword>
<keyword name="LastMoveTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的最后移动时间TICK值. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:最后移动时的TICK.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetServantState" func="yes">
<overload  retval="uint32" descr="&#x0A;获取宝宝AI状态&#x0A;参数:servant_guid 宝宝的guid.,&#x0A;返回:宝宝现在处于的状态 跟随=7 休息=8 战斗=9 跳地图=10&#x0A;">
<param name="servant_guid" />
</overload>
</keyword>
<keyword name="Player_GetStrProp" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的字符型属性值. &#x0A;参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,&#x0A;返回:属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="wAttrType" />
</overload>
</keyword>
<keyword name="Player_SetServantLevel" func="yes">
<overload  retval="void" descr="&#x0A;设置召唤宝宝的等级. &#x0A;参数:strObject 为玩家的GUID,则修改玩家所有的宝宝等级.为宝宝GUID,则修改宝宝的等级.,byLevel 宝宝的等级.,&#x0A;返回:无返回值.&#x0A;">
<param name="strObject" />
<param name="byLevel" />
</overload>
</keyword>
<keyword name="GetBindGold" func="yes">
<overload  retval="double" descr="&#x0A;取得角色绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家绑定金币的数量.&#x0A;参考:GetGold,GetBindGold,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetTeamList" func="yes">
<overload  retval="table" descr="&#x0A;取得玩家所有队友的GUID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家队友的GUID列表,返回lua table.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="BuffKey2ID" func="yes">
<overload  retval="uint32" descr="&#x0A;根据BUFF的KeyName取得BUFF的ID. &#x0A;参数:strBuffKey BUFF的KeyName.,&#x0A;返回:BUFF的ID,出错返回0.&#x0A;">
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="Player_ClearBag" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;清空玩家包裹. &#x0A;参数:strPlayer 玩家的GUID.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:ClearBag,&#x0A;">
<param name="strPlayer" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetHair" func="yes">
<overload  retval="void" descr="&#x0A;设置角色的发型. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHair 发型编号.,&#x0A;返回:无返回值.&#x0A;参考:Hair,SetHair,&#x0A;">
<param name="strRole" />
<param name="iHair" />
</overload>
</keyword>
<keyword name="ScriptTextToPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;给某个player执行一段脚本&#x0A;参数:player_name 玩家姓名,script 脚本名称,scriptText 脚本内容,&#x0A;返回:true表示投递请求成功（不表示脚本已经执行）.&#x0A;备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.&#x0A;">
<param name="player_name" />
<param name="script" />
<param name="scriptText" />
</overload>
</keyword>
<keyword name="pre_die" func="yes">
<overload  retval="bool" descr="&#x0A;角色死亡之前回调. &#x0A;参数:strRole 角色的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许角色死亡, false = 阻止角色死亡.&#x0A;备注:lua_trigger_pre_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="Item_NotifyCustomParam" func="yes">
<overload  retval="void" descr="&#x0A;[此函数过期, 禁用]&#x0A;向物品的主人通知物品自定义变量更新. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strKey 变量名.,&#x0A;返回:无返回值.&#x0A;参考:NotifyVar,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="SubBindGold" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubGold,SubBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_GetDistance" func="yes">
<overload  retval="uint16" descr="&#x0A;[此函数过期, 禁用]&#x0A;计算玩家间的距离 计算玩家间的距离. &#x0A;参数:strPlayer1 玩家GUID.,strPlayer2 玩家GUID.,&#x0A;返回:成功返回距离,失败返回65535.&#x0A;参考:Distance,&#x0A;">
<param name="strPlayer1" />
<param name="strPlayer2" />
</overload>
</keyword>
<keyword name="Brawn" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的腕力. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:腕力.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="GetBuffTime" func="yes">
<overload  retval="int" descr="&#x0A;取得BUFF剩余时间. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,&#x0A;返回:剩余时间,单位秒.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="Player_GuildRunScript" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家行会里所有人执行一段脚本. &#x0A;参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:成功或失败.&#x0A;备注:该接口是异步的.接口返回成功并不代表脚本执行成功.&#x0A;">
<param name="strPlayer" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="CampCount" func="yes">
<overload  retval="uint32" descr="&#x0A;取得该活动当天参与次数. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:当天参与活动次数.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="GetWeek" func="yes">
<overload  retval="uint32" descr="&#x0A;取得指定时间值的周. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:周,范围: [0 - 6].&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Str2Zip" func="yes">
<overload  retval="string" descr="&#x0A;将指定文本进行ZIP压缩,然后再BASE64编码. &#x0A;参数:strText 文本串.,&#x0A;返回:ZIP压缩后BASE64编码串.&#x0A;">
<param name="strText" />
</overload>
</keyword>
<keyword name="Player_AddEffect" func="yes">
<overload  retval="void" descr="&#x0A;设置玩家特效&#x0A;参数:player_guid 角色的guid,effect_type 特效位置 1=武器 2=身体 3=坐骑,effect_id 特效Id,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="effect_type" />
<param name="effect_id" />
</overload>
</keyword>
<keyword name="SendRoleHPNtf" func="yes">
<overload  retval="bool" descr="&#x0A;向周围通知角色血量&#x0A;参数:strRole 角色GUID,角色只能是玩家或怪物.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Name2Guid" func="yes">
<overload  retval="string" descr="&#x0A;根据玩家的Name找到该玩家. &#x0A;参数:strPlayerName 玩家的Name.,&#x0A;返回:玩家的GUID,如果玩家不存在返回''.&#x0A;警告:玩家如果不在线就找不到.&#x0A;">
<param name="strPlayerName" />
</overload>
</keyword>
<keyword name="SysMsg_SendRoleTalk" func="yes">
<overload  retval="bool" descr="&#x0A;发送角色当前说话通知. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="on_npc_buy" func="yes">
<overload  retval="void" descr="&#x0A;玩家在NPC购买之后回调. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买总价.,type 购买货币类型 0经验 1元宝 2绑定元宝 3积分 4金币 5绑定金币,strNpc NPC的GUID,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iNum" />
<param name="iPrice" />
<param name="type" />
<param name="strNpc" />
</overload>
</keyword>
<keyword name="DummyLockTarget" func="yes">
<overload  retval="bool" descr="&#x0A;指定假人锁定敌人&#x0A;参数:dummy_guid 假人的guid.,target_guid 目标的guid.,&#x0A;返回:true表示命令成功下达，false表示假人不存在.&#x0A;">
<param name="dummy_guid" />
<param name="target_guid" />
</overload>
</keyword>
<keyword name="Player_CatchEx" func="yes">
<overload  retval="string" descr="&#x0A;玩家捕捉宝宝扩展. &#x0A;参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,need_relive 是否需要在捕捉后重新生成一个野怪,&#x0A;返回:宝宝的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strServantKey" />
<param name="need_relive" />
</overload>
</keyword>
<keyword name="Player_MapMove" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家跳转到指定地图随机坐标. &#x0A;参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳.,&#x0A;返回:成功或失败.&#x0A;警告:该接口是异步的,接口返回时玩家还没有切换地图.&#x0A;">
<param name="strPlayer" />
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="Item_GetType" func="yes">
<overload  retval="uint8" descr="&#x0A;取得物品的类型. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品类型,具体类型请参考策划Item表.出错返回0.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="ItemsByType" func="yes">
<overload  retval="table" descr="&#x0A;玩家根据道具类型找物品. &#x0A;参数:strPlayer 玩家的GUID.,iType 物品类型,具体类型请参考策划Item表.,iSubtype 物品子类型,具体类型请参考策划Item表.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库,&#x0A;返回:符合条件的物品列表,返回lua table.&#x0A;">
<param name="strPlayer" />
<param name="iType" />
<param name="iSubtype" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarehouse" />
<param name="bWarehouseAdv" />
</overload>
</keyword>
<keyword name="on_post_dummy_die" func="yes">
<overload  retval="void" descr="&#x0A;英雄死亡时回调. &#x0A;参数:strDummy 英雄的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strDummy" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="IsEscorterDied" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家镖车是否存活. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetNetCheckEx" func="yes">
<overload  retval="void" descr="&#x0A;客户端网络状态检查扩展&#x0A;参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查.,is_drop true表示丢弃 false表示不丢弃.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="is_check" />
<param name="is_drop" />
</overload>
</keyword>
<keyword name="Monster_SetAttackTarget" func="yes">
<overload  retval="bool" descr="&#x0A;设置怪物的攻击目标. &#x0A;参数:strMonster 怪物的GUID.,strTarget 怪物的目标如果为''表示清除上次调用此接口设定的目标.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMonster" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Warn" func="yes">
<overload  retval="void" descr="&#x0A;打印警告日志. &#x0A;参数:strMsg 日志内容.,&#x0A;返回:无返回值.&#x0A;备注:若非必要,不要打印日志.&#x0A;警告:大量记录日志会对服务器性能带来些许影响.&#x0A;参考:Print,Debug,Warn,Error,&#x0A;">
<param name="strMsg" />
</overload>
</keyword>
<keyword name="on_escorter_far" func="yes">
<overload  retval="void" descr="&#x0A;押送类怪物离得过远时回调. &#x0A;参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体.,&#x0A;返回:无返回值.&#x0A;备注:怪物与玩家一直处于过远状态时,该触发器每10秒只会触发一次.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strMaster" />
</overload>
</keyword>
<keyword name="Player_GetWarehouseItemCount" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GiveItem" func="yes">
<overload  retval="bool" descr="&#x0A;给予玩家非绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="AddBuffEx" func="yes">
<overload  retval="bool" descr="&#x0A;给角色添加BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写.,&#x0A;返回:成功或失败.&#x0A;警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
<param name="dwTimes" />
<param name="iAttr1" />
</overload>
</keyword>
<keyword name="on_pre_monster_die" func="yes">
<overload  retval="bool" descr="&#x0A;怪物死亡之前回调. &#x0A;参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许怪物死亡, false = 阻止怪物死亡.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="ClearBag" func="yes">
<overload  retval="bool" descr="&#x0A;清空玩家包裹. &#x0A;参数:strPlayer 玩家的GUID.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarehouse" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Item_Destroy" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID销毁该物品. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GetCastleAttackFamily" func="yes">
<overload  retval="string" descr="&#x0A;获取某城堡的所有攻击者行会. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:所有的攻击者行会,多个行会间用&amp;隔开.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="AddTimer" func="yes">
<overload  retval="bool" descr="&#x0A;给对象添加定时器. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="dwTimerID" />
<param name="iElapse" />
<param name="iCount" />
<param name="strCallBack" />
</overload>
</keyword>
<keyword name="Guid2Number" func="yes">
<overload  retval="string" descr="&#x0A;将引擎使用的GUID字符串转为纯阿拉伯数字表示的字符串&#x0A;参数:guid 引擎中使用的guid(32进制表示).,&#x0A;返回:纯阿拉伯数字表示的guid(10进制表示).&#x0A;">
<param name="guid" />
</overload>
</keyword>
<keyword name="BagItemList" func="yes">
<overload  retval="table" descr="&#x0A;取得玩家包裹所有物品的GUID列表. &#x0A;参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,&#x0A;返回:包裹所有物品的GUID列表,返回lua table.&#x0A;">
<param name="strPlayer" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarhouse" />
</overload>
</keyword>
<keyword name="PhyDef" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的物防. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:物防.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="on_post_drop_one" func="yes">
<overload  retval="void" descr="&#x0A;角色爆道具时回调(爆某具体的道具). &#x0A;参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
</overload>
</keyword>
<keyword name="UrlDecode" func="yes">
<overload  retval="string" descr="&#x0A;将字符串进行URL解码. &#x0A;参数:strString 字符串.,&#x0A;返回:解编码后的字符串.&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="Player_IsIngotEnough" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色的元宝是否足够. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="bBind" />
</overload>
</keyword>
<keyword name="Player_GetCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家实体上存储的字符型变量. &#x0A;参数:strPlayer 玩家的GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="on_player_relive" func="yes">
<overload  retval="string" descr="&#x0A;玩家复活之前&#x0A;参数:player_guid 玩家GUID,&#x0A;返回:&#x0A;备注:&#x0A;	lua_trigger_player_relive 玩家复活之前触发，回调函数:bool on_player_relive(const std::string&amp; player);&#x0A;&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="JoinCamp" func="yes">
<overload  retval="bool" descr="&#x0A;加入活动. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,dwIntegral 该活动的积分值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
<param name="dwIntegral" />
</overload>
</keyword>
<keyword name="GetBagSizeEx" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹大小. &#x0A;参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,&#x0A;返回:包裹大小,出错返回-1.&#x0A;参考:GetBagSize,GetBagSizeEx,BagSize,&#x0A;">
<param name="strPlayer" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarhouse" />
</overload>
</keyword>
<keyword name="OnGloryTrigger" func="yes">
<overload  retval="void" descr="&#x0A;产生一个成就的触发事件. &#x0A;参数:player_guid 玩家的guid.,action 触发类型.,item_guid 物品的guid（相关物品的guid，如果有的话）.,ref_value 参考值（相关的参考值，如果有的话）.,descript 描述.,target_name 相关目标名称(如果有的话).,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="action" />
<param name="item_guid" />
<param name="ref_value" />
<param name="descript" />
<param name="target_name" />
</overload>
</keyword>
<keyword name="SetMagDef" func="yes">
<overload  retval="void" descr="&#x0A;设置角色魔法防御. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="Hair" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的发型. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:发型编号.&#x0A;参考:Hair,SetHair,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="WebBrowser" func="yes">
<overload  retval="void" descr="&#x0A;发送打开网页页面通知&#x0A;参数:player_guid 玩家的GUID,url 弹出的IE框所使用的URL地址,&#x0A;返回:无返回值.&#x0A;备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K&#x0A;&#x0A;	param：由脚本作者来维护&#x0A;&#x0A;	暂时用不到这个功能&#x0A;参考:SysMsg_SendWebPage,&#x0A;">
<param name="player_guid" />
<param name="url" />
</overload>
</keyword>
<keyword name="OpenWarehouse" func="yes">
<overload  retval="void" descr="&#x0A;打开玩家仓库&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;参考:OpenWarehouse,OpenWarehouseAdv,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="LoginTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的登陆时间. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:登陆时间,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Item_IsTimeLimit" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID判断该物品是否时限道具. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="Player_IsAntiIndulge" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;判断是否防沉迷玩家. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;参考:IsAntiIndulge,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetPrestige" func="yes">
<overload  retval="void" descr="&#x0A;设置角色声望. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="GetMonsterDropOwner" func="yes">
<overload  retval="string" descr="&#x0A;获得怪物掉落归属&#x0A;参数:monster_guid 怪物guid.,&#x0A;返回:怪物掉落归属者的guid,如果没有就是'';&#x0A;">
<param name="monster_guid" />
</overload>
</keyword>
<keyword name="GetPlayerUUID" func="yes">
<overload  retval="string" descr="&#x0A;获得玩家或英雄的为一名标识&#x0A;参数:player_guid 玩家的GUID.,&#x0A;返回:玩家或英雄的为一名标识.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="GetBindGoldStr" func="yes">
<overload  retval="string" descr="&#x0A;取得角色绑定金币字符串格式. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家绑定金币的数量的字符串.&#x0A;参考:GetGold,GetBindGold,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetTempStr" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上存储字符型变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="AntiIndulgeExpire" func="yes">
<overload  retval="void" descr="&#x0A;强制让角色的沉迷状态过期. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetTempStr" func="yes">
<overload  retval="string" descr="&#x0A;取得对象实体上存储的字符型变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="IsAntiIndulge" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否为防沉迷帐号. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetWeekInt" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上设置数值型周变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="AddGold" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色非绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddGold,AddBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="ApplyEquip" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;让玩家穿装备. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,&#x0A;返回:成功或失败.&#x0A;警告:过期接口,不应再使用.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetGSVer" func="yes">
<overload  retval="string" descr="&#x0A;获得游戏服务器版本号&#x0A;参数: ,&#x0A;返回:获得游戏服务器版本号格式为 年-月-日 时:分:秒&#x0A;">
</overload>
</keyword>
<keyword name="Player_GiveItemUnbind" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给予玩家非绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:GiveItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetDBStrEx" func="yes">
<overload  retval="bool" descr="&#x0A;在数据库中存储字符型变量. &#x0A;参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,&#x0A;返回:成功或失败.&#x0A;">
<param name="strKey" />
<param name="dbValue" />
<param name="byType" />
</overload>
</keyword>
<keyword name="Map_SetOffTimer" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;取消地图定时器. &#x0A;参数:map_guid ,timer_id ,&#x0A;返回:&#x0A;参考:DisableTimer,&#x0A;">
<param name="map_guid" />
<param name="timer_id" />
</overload>
</keyword>
<keyword name="Item_GetName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据物品GUID取得Name. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品的Name,如果物品不存在返回''.&#x0A;参考:KeyName,Name,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="SetMp" func="yes">
<overload  retval="void" descr="&#x0A;设置角色MP. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="LeaveTeam" func="yes">
<overload  retval="void" descr="&#x0A;离开队伍. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;备注:玩家不存在或者玩家没有队伍也可以调用，但会提示一个错误.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SubExp" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="on_monster_out_fight" func="yes">
<overload  retval="void" descr="&#x0A;怪物退出战斗状态时回调&#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:无返回值.&#x0A;备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物退出战斗状态才回调.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Map_GetMapPlayers" func="yes">
<overload  retval="table" descr="&#x0A;获取地图内的玩家列表. &#x0A;参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色.,&#x0A;返回:区域内玩家列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="bIgnoreDied" />
</overload>
</keyword>
<keyword name="on_pre_drop" func="yes">
<overload  retval="bool" descr="&#x0A;角色爆道具之前回调(要不要爆东西). &#x0A;参数:strRole 角色的GUID.,&#x0A;返回:true = 允许角色爆装备, false = 阻止角色爆装备.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Zip2Str" func="yes">
<overload  retval="string" descr="&#x0A;将指定文本进行BASE64解码,然后再ZIP解压. &#x0A;参数:strZip 编码串.,&#x0A;返回:文本串.&#x0A;">
<param name="strZip" />
</overload>
</keyword>
<keyword name="GetBagFreeEx" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹空格子数量. &#x0A;参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,&#x0A;返回:包裹空格子数,出错返回-1.&#x0A;参考:GetBagFree,GetBagFreeEx,BagFree,&#x0A;">
<param name="strPlayer" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarhouse" />
</overload>
</keyword>
<keyword name="Ride" func="yes">
<overload  retval="void" descr="&#x0A;玩家骑上坐骑&#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;警告:玩家上马不能保证成功,必须遵循乘骑规则.系统功能的扩展,脚本不应使用.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetWeekInt" func="yes">
<overload  retval="uint32" descr="&#x0A;取得对象实体上设置的数值型周变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,&#x0A;返回:变量的值,如果变量已跨周返回0.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="NotifyRunningFamilyWar" func="yes">
<overload  retval="void" descr="&#x0A;将正在与玩家行会作战的行会列表知通给玩家. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;警告:服务器功能的扩展,脚本作者不应该使用.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetYear" func="yes">
<overload  retval="uint32" descr="&#x0A;取得指定时间值的年. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:年,范围:[1900 - ~].&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="SysMsg_SendBoardMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端面板消息. &#x0A;参数:strObject 对象的GUID.对象可以为系统、队伍、行会、地图、玩家.,strTitle 面板标题.,strMsg 消息内容.,dwTimeOut 持续时间,单位:秒.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strTitle" />
<param name="strMsg" />
<param name="dwTimeOut" />
</overload>
</keyword>
<keyword name="HasFamilyWar" func="yes">
<overload  retval="bool" descr="&#x0A;判断两个行会是否处于战争状态. &#x0A;参数:strFamilyName1 第一个行会的名字.,strFamilyName2 第二个行会的名字.,&#x0A;返回:是或否.&#x0A;">
<param name="strFamilyName1" />
<param name="strFamilyName2" />
</overload>
</keyword>
<keyword name="Monster_IsDie" func="yes">
<overload  retval="bool" descr="&#x0A;判断怪物是否死亡. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Equip_SetQualProp" func="yes">
<overload  retval="bool" descr="&#x0A;设置装备的某条品质属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条.,attr_name 属性名.,attr_value 属性值.,&#x0A;返回:成功返回true，失败返回false.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="index" />
<param name="attr_name" />
<param name="attr_value" />
</overload>
</keyword>
<keyword name="right" func="yes">
<overload  retval="string" descr="&#x0A;从字符串的右边第n个位置复制m个长度的字符.&#x0A;参数:strString 字符串.,iLen 复制字符的长度.,iOffset 字符串偏移长度.,&#x0A;返回:返回新字符串.&#x0A;备注:t_str=string. right (str, len, offset),从字符串str的右边第offset个位置复制len个长度的字符到目标串中，并返回目标串。比如:string.right(&ldquo;abcdef&rdquo;, 2, 1),执行的结果就是&rdquo;de&rdquo;。&#x0A;&#x0A;	复制的长度不能超过字符串长度-偏移长度&#x0A;">
<param name="strString" />
<param name="iLen" />
<param name="iOffset" />
</overload>
</keyword>
<keyword name="Player_IsGM" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否GM. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SubGold" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubGold,SubBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="ForceQuestReady" func="yes">
<overload  retval="bool" descr="&#x0A;强制玩家完成任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="Equip_SetRefineLevel" func="yes">
<overload  retval="bool" descr="&#x0A;设置装备的精炼等级&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,level 精炼等级.,&#x0A;返回:无.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="level" />
</overload>
</keyword>
<keyword name="NPCTalkDetail" func="yes">
<overload  retval="void" descr="&#x0A;打开物品的对话框&#x0A;参数:strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,&#x0A;返回:无返回值.&#x0A;参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,&#x0A;">
<param name="strPlayer" />
<param name="strTalk" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="Player_RunScript" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家执行一段脚本. &#x0A;参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:成功或失败.&#x0A;备注:该接口是异步的.接口返回成功并不代表脚本执行成功.&#x0A;">
<param name="strPlayer" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Player_DestroyItem" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;警告:无.&#x0A;参考:DelItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="HasSkill" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色是否拥有技能. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName.,bLinkage 是否判断技能链.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strSkillKey" />
<param name="bLinkage" />
</overload>
</keyword>
<keyword name="SkillKey2ID" func="yes">
<overload  retval="uint32" descr="&#x0A;根据技能的KeyName取得技能的ID. &#x0A;参数:strSkillKey 技能的KeyName.,&#x0A;返回:技能的ID,出错返回0.&#x0A;">
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="Monster_GetEscapePoint" func="yes">
<overload  retval="table" descr="&#x0A;计算怪物的逃跑点. &#x0A;参数:strMonster 怪物的GUID.,wActorX 攻击者的X坐标.,wActorY 攻击者的Y坐标.,wDistance 逃跑距离.,&#x0A;返回:逃跑点坐标,返回lua table. 例:tPos = lualib:Monster_GenEscapePoint(XXXXX, 10, 203, 16); local x, y = tPos['x'], tPos['y'];&#x0A;">
<param name="strMonster" />
<param name="wActorX" />
<param name="wActorY" />
<param name="wDistance" />
</overload>
</keyword>
<keyword name="GetAllMonths" func="yes">
<overload  retval="uint32" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的月数. &#x0A;参数:dwTimes 时间值,单位:秒.0 = 现在时间.,&#x0A;返回:月数.&#x0A;">
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="IO_ForceDir" func="yes">
<overload  retval="bool" descr="&#x0A;创建文件目录. &#x0A;参数:strDirName 文件目录名.支持多级,如:aa/bb/cc,会依次创建三个目录.,&#x0A;返回:是或否.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strDirName" />
</overload>
</keyword>
<keyword name="MapGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得对象当前地图的GUID. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品.,&#x0A;返回:对象当前地图的GUID,出错返回''.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Player_IsPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;判断GUID是不是玩家. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="IO_ClearCustomVarInt" func="yes">
<overload  retval="void" descr="&#x0A;[此函数过期, 禁用]&#x0A;从数据库中删除整型数值变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:无返回值.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="SetDummySkillAI" func="yes">
<overload  retval="bool" descr="&#x0A;设置假人的技能AI&#x0A;参数:dummy 假人或英雄的GUID.,AI_table 欲设置的技能优先级.,&#x0A;返回:设置是否成功.&#x0A;备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本&#x0A;">
<param name="dummy" />
<param name="AI_table" />
</overload>
</keyword>
<keyword name="Equip_SetLuckCurse" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的幸运诅咒值. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 幸运诅咒值.大于0为幸运,小于0为诅咒.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="MailEx" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,item_templates 附件物品,lua table格式描述,不超过5个.&#x0A;&#x0A; item_templates 格式:&#x0A;&#x0A; {&#x0A;&#x0A; 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)&#x0A;&#x0A; '强效金创药', 1, 1,&#x0A;&#x0A; '强效魔法药', 1, 1,&#x0A;&#x0A; '灵元珠', 10, 1,&#x0A;&#x0A; '新手之剑', 1, 1,&#x0A;&#x0A; '新手头盔', 1, 1,&#x0A;&#x0A; },&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_name" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="integral" />
<param name="item_templates" />
</overload>
</keyword>
<keyword name="SetAutoOpt" func="yes">
<overload  retval="void" descr="&#x0A;设置自动挂机选项. &#x0A;参数:player_guid 玩家guid.,is_auto_fight 是否开启自动打怪 false=不开启 true=开启.,is_auto_pick 是否开启自动捡东西 false=不开启 true=开启.,time 挂机开启时间 单位秒.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="is_auto_fight" />
<param name="is_auto_pick" />
<param name="time" />
</overload>
</keyword>
<keyword name="StartCastleWar" func="yes">
<overload  retval="bool" descr="&#x0A;开启城堡战. &#x0A;参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.,strStartTime 攻城时间.如:2012-10-20 20:30:00.,dwDuration 持续时间,单位:秒.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strCastleName" />
<param name="strFamilys" />
<param name="strStartTime" />
<param name="dwDuration" />
</overload>
</keyword>
<keyword name="Player_GetGuidProp" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的GUID型属性值. &#x0A;参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,&#x0A;返回:属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strPlayer" />
<param name="wAttrType" />
</overload>
</keyword>
<keyword name="on_hack_check2" func="yes">
<overload  retval="void" descr="&#x0A;客户端外挂检测回调2. &#x0A;参数:strPlayer 玩家的GUID.,c1 由客户端决定,c2 由客户端决定,c3 由客户端决定,c4 由客户端决定,c5 由客户端决定,c6 由客户端决定,c7 由客户端决定,c8 由客户端决定,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="c1" />
<param name="c2" />
<param name="c3" />
<param name="c4" />
<param name="c5" />
<param name="c6" />
<param name="c7" />
<param name="c8" />
</overload>
</keyword>
<keyword name="Player_AddExp" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="IO_SetFileText" func="yes">
<overload  retval="bool" descr="&#x0A;设置文本文件内容. &#x0A;参数:strFileName 文件名.,strContent 文本内容.,&#x0A;返回:成功失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="IO_TextFileDeleteLine" func="yes">
<overload  retval="bool" descr="&#x0A;从文本文件中删除指定行. &#x0A;参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="dwLine" />
</overload>
</keyword>
<keyword name="GetGroupName" func="yes">
<overload  retval="string" descr="&#x0A;获取组Name. &#x0A;参数: ,&#x0A;返回:组Name.&#x0A;">
</overload>
</keyword>
<keyword name="ItemDropTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得物品的掉落时间&#x0A;参数:strItem 物品GUID.,&#x0A;返回:返回物品掉落时间.&#x0A;参考:Time2Str,&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Player_SpellTarget" func="yes">
<overload  retval="bool" descr="&#x0A;玩家对目标施放技能. &#x0A;参数:strPlayer 玩家的GUID.,strSkill 技能的KeyName.,strTarget 目标的GUID.,&#x0A;返回:技能施放成功返回true失败返回false.&#x0A;备注:技能施放成功只表示发送消息通知客户端释放此技能.&#x0A;">
<param name="strPlayer" />
<param name="strSkill" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="ReliveMapGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家复活地图的GUID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:对象复活地图的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="OpenWarehouseAdvEx" func="yes">
<overload  retval="void" descr="&#x0A;打开随身高级仓库&#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:无返回值.&#x0A;参考:OpenWarehouse,OpenWarehouseAdv,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Print" func="yes">
<overload  retval="void" descr="&#x0A;打印信息日志. &#x0A;参数:strMsg 日志内容.,&#x0A;返回:无返回值.&#x0A;备注:若非必要,不要打印日志.&#x0A;警告:大量记录日志会对服务器性能带来些许影响.&#x0A;参考:Print,Debug,Warn,Error,&#x0A;">
<param name="strMsg" />
</overload>
</keyword>
<keyword name="HasTitle" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否拥有添加称号. &#x0A;参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,&#x0A;返回:无.&#x0A;">
<param name="strPlayer" />
<param name="wTitleID" />
</overload>
</keyword>
<keyword name="on_npc_disappear" func="yes">
<overload  retval="void" descr="&#x0A;NPC消失在地图时回调. &#x0A;参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strNPC" />
<param name="wNPCID" />
<param name="strNPCName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="GuildGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家所属行会的GUID. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家行会的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetItemCount" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="post_monster_die" func="yes">
<overload  retval="void" descr="&#x0A;怪物死亡时回调. &#x0A;参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;备注:lua_trigger_monster_post_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="on_add_skill" func="yes">
<overload  retval="void" descr="&#x0A;角色添加技能时触发. &#x0A;参数:strRole 角色的GUID.,wSkillID 技能的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="ChangeFamilyTitle" func="yes">
<overload  retval="bool" descr="&#x0A;指定行会中玩家的封号&#x0A;参数:player_guid 玩家的guid.,FamilyName 行会的名称,titile_id 封号ID, 0、行会成员；1、会长；2、副会长；3、精英、4以上为自定义,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:&#x0A;备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.&#x0A;">
<param name="player_guid" />
<param name="FamilyName" />
<param name="titile_id" />
<param name="func" />
<param name="param" />
</overload>
</keyword>
<keyword name="SetJob" func="yes">
<overload  retval="void" descr="&#x0A;设置角色职业. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="on_add_exp_all" func="yes">
<overload  retval="void" descr="&#x0A;角色得到经验时回调. &#x0A;参数:strRole 角色的GUID.,iExp 得到的经验值.,&#x0A;返回:无返回值.&#x0A;备注:lua_trigger_add_exp_all  任何原因得到经验时回调(已被删除,不当使用会造成服务器死循环).&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="iExp" />
</overload>
</keyword>
<keyword name="on_pre_mining" func="yes">
<overload  retval="bool" descr="&#x0A;角色挖矿前回调. &#x0A;参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y.,&#x0A;返回:true = 允许角色放挖矿技能, false = 阻止角色放挖矿技能.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strMapKey" />
<param name="wSkillID" />
<param name="strSkillName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="on_map_destroy" func="yes">
<overload  retval="void" descr="&#x0A;地图结束时回调. &#x0A;参数:strMap 地图的GUID.,strMapKey 地图的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="VerifyCampLevel" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否满足活动等级. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="BagSize" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家包裹大小. &#x0A;参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,&#x0A;返回:包裹大小,出错返回-1.&#x0A;参考:GetBagSize,GetBagSizeEx,BagSize,&#x0A;">
<param name="strPlayer" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarhouse" />
</overload>
</keyword>
<keyword name="Player_DisableForbidTalk" func="yes">
<overload  retval="bool" descr="&#x0A;取消玩家禁言. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;警告:该函数是异步的,返回成功并不代表解除禁言成功.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetClientDelay" func="yes">
<overload  retval="void" descr="&#x0A;设置客户端异常断线后延迟退出游戏时间&#x0A;参数:player_guid 角色guid.,delay 异常断线后客户端延迟退出游戏的毫秒数，注意最小不能小于5000毫秒,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="delay" />
</overload>
</keyword>
<keyword name="Player_GetCustomVarInt" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家实体上存储的整型数值变量. &#x0A;参数:strPlayer 玩家的GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回0.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:GetInt,&#x0A;">
<param name="strPlayer" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="pre_player_relive" func="yes">
<overload  retval="bool" descr="&#x0A;角色复活之前回调. &#x0A;参数:strRole 角色的GUID.,&#x0A;返回:true = 允许角色复活, false = 阻止角色复活.&#x0A;备注:lua_trigger_player_relive&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="InputDlgEx" func="yes">
<overload  retval="void" descr="&#x0A;发送显示通用输入框请求&#x0A;参数:player 玩家的GUID,dlg_id 输入框的标识符,content 输入框的内容,timeout 输入框超时时间,param_len 输入框输入长度限制,callback 回调函数,param 自定义参数,&#x0A;返回:无返回值.&#x0A;备注:param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回，&#x0A;&#x0A;	如果希望将多个参数传入，则可以以'#'等分割符链接多个参数为一个字符串作为param，然后再callback函数中调用lualib:StrSplit(param, '#')解析出多个参数&#x0A;&#x0A;	回调函数格式：void callback(UINT32 dlg_id, const std::string&amp; player, const std::string&amp; input_str, const std::string&amp; param)&#x0A;参考:SysMsg_SendInputDlg,&#x0A;">
<param name="player" />
<param name="dlg_id" />
<param name="content" />
<param name="timeout" />
<param name="param_len" />
<param name="callback" />
<param name="param" />
</overload>
</keyword>
<keyword name="GenHeroForPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;载入玩家的某个英雄&#x0A;参数:player 玩家guid.,hero 英雄的guid.,callback 载入完成后的回调.,params 回调参数.,&#x0A;返回:载入请求是否成功.&#x0A;备注:异步过程，是否成功会通过回调函数告知。 function(player, err, hero) player 玩家的guid err 错误码，0表示成功 hero 英雄的guid&#x0A;">
<param name="player" />
<param name="hero" />
<param name="callback" />
<param name="params" />
</overload>
</keyword>
<keyword name="QuestRemainCount" func="yes">
<overload  retval="int32" descr="&#x0A;查询玩家任务剩余次数. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:剩余次数.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="Player_GetEquipGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家装备栏装备着的物品GUID. &#x0A;参数:strPlayer 玩家的GUID.,wSite 装备栏位置,请参考引擎常量中的角色site位类型定义,&#x0A;返回:物品GUID.&#x0A;参考:eRoleSite,&#x0A;">
<param name="strPlayer" />
<param name="wSite" />
</overload>
</keyword>
<keyword name="DropQuest" func="yes">
<overload  retval="bool" descr="&#x0A;玩家放弃任务. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="GUIDType" func="yes">
<overload  retval="int32" descr="&#x0A;取得对象GUID的类型. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:GUID类型 0 = 玩家, 1 = 假人, 2 = 怪物, 3 = NPC, 4 = 物品, 5 = 地图, 6 = 队伍, 7 = 行会, 10 = 系统, 出错返回-1.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="SetServantPickList" func="yes">
<overload  retval="bool" descr="&#x0A;添加或删除某物品到宝宝的拾取列表中&#x0A;参数:servant_guid 宝宝的guid.,item_id 物品的Id,item_key_name 物品的KeyName如果id找不到则按keyname找,add_or_del true=添加到列表 false=从列表中删除,&#x0A;返回:true表示设置成功 false表示设置失败&#x0A;备注:如果拾取列表为空则默认拾取所有物品&#x0A;">
<param name="servant_guid" />
<param name="item_id" />
<param name="item_key_name" />
<param name="add_or_del" />
</overload>
</keyword>
<keyword name="CanAttack" func="yes">
<overload  retval="bool" descr="&#x0A;判断目标是否可攻击&#x0A;参数:actor_guid 攻击者guid.,target_guid 目标guid.,&#x0A;返回:true=表示可攻击， false=不可攻击&#x0A;">
<param name="actor_guid" />
<param name="target_guid" />
</overload>
</keyword>
<keyword name="GenRandom" func="yes">
<overload  retval="int32" descr="&#x0A;成生随机数. &#x0A;参数:iMin 最小值.,iMax 最大值.,&#x0A;返回:返回随机数iRnd,取值范围:(iMin &lt; iMax) (iMin &lt;= iRnd &lt;= iMax).&#x0A;">
<param name="iMin" />
<param name="iMax" />
</overload>
</keyword>
<keyword name="Monster_SetCustomVarStr" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在对象实体上存储字符型变量. &#x0A;参数:strMonster 怪物的GUID.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetStr,&#x0A;">
<param name="strMonster" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="JuJu" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的符咒. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GSTriggerScript" func="yes">
<overload  retval="void" descr="&#x0A;让所有GS去执行一段脚本. &#x0A;参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:无返回值.&#x0A;备注:该接口是异步的.接口返回成功并不代表脚本执行成功.&#x0A;">
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Player_IsGoldStrEnough" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色的金币是否足够字符串版. &#x0A;参数:strPlayer 玩家的GUID.,str_gold 金币数量字符串.,bBind 是否绑定.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="str_gold" />
<param name="bBind" />
</overload>
</keyword>
<keyword name="IO_TextFileTotalLine" func="yes">
<overload  retval="int32" descr="&#x0A;获得文本内容的总行数. &#x0A;参数:strFileName 文件名.,&#x0A;返回:行数,失败返回-1.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="SubBindIngot" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubIngot,SubBindIngot,&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetSkillExp" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家技能的熟练度&#x0A;参数:player_guid 玩家的guid.,skill_key_name 技能的关键字.,skill_exp 设置的技能熟练度.,&#x0A;返回:成功或失败.&#x0A;">
<param name="player_guid" />
<param name="skill_key_name" />
<param name="skill_exp" />
</overload>
</keyword>
<keyword name="GetHeroLord" func="yes">
<overload  retval="string" descr="&#x0A;获取英雄的主人guid&#x0A;参数:hero 英雄的GUID.,&#x0A;返回:英雄的主人GUID.&#x0A;备注:无&#x0A;">
<param name="hero" />
</overload>
</keyword>
<keyword name="OpenShop" func="yes">
<overload  retval="void" descr="&#x0A;打开与NPC关联过的商店&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,wShopId 商店ID.,&#x0A;返回:无返回值.&#x0A;备注:NPC必须与该商店关联过.&#x0A;参考:AddShop,OpenShop,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
<param name="wShopId" />
</overload>
</keyword>
<keyword name="TotalTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的总计在线时间. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:总计在线时间,出错返回0.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_p2p_trade" func="yes">
<overload  retval="bool" descr="&#x0A;玩家在P2P交易之前回调. &#x0A;参数:strRequestor 发起玩家的GUID.,strResponsor 接受玩家的GUID.,strRequestorItems 发起玩家交易的物品, 为类似'[keyname1, keyname2, ...]'的json数组.,strResponsorItems 接受玩家交易的物品, 格式同上.,iRequestorGold 发起玩家交易的金币数量.,iResponsorGold 接受玩家交易的金币数量.,&#x0A;返回:true = 允许玩家P2P交易, false = 阻止玩家P2P交易.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRequestor" />
<param name="strResponsor" />
<param name="strRequestorItems" />
<param name="strResponsorItems" />
<param name="iRequestorGold" />
<param name="iResponsorGold" />
</overload>
</keyword>
<keyword name="UTF8ToGBK" func="yes">
<overload  retval="string" descr="&#x0A;将UTF8编码的字符串转为GBK编码. &#x0A;参数:strUtf8 UTF8编码字符串.,&#x0A;返回:GBK编码字符串.&#x0A;">
<param name="strUtf8" />
</overload>
</keyword>
<keyword name="GBKToUTF8" func="yes">
<overload  retval="string" descr="&#x0A;将GBK编码的字符串转为UTF8编码. &#x0A;参数:strGbk GBK编码字符串.,&#x0A;返回:UTF8编码字符串.&#x0A;">
<param name="strGbk" />
</overload>
</keyword>
<keyword name="Player_GetItemCountBind" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="SysMsg_SendTopColorByClientType" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端顶部广播消息. &#x0A;参数:byCount 消息滚动次数.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,byClientType 客户端类型组合, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),&#x0A;返回:无返回值.&#x0A;备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.&#x0A;">
<param name="byCount" />
<param name="strMsg" />
<param name="iForeground" />
<param name="iBackground" />
<param name="byClientType" />
</overload>
</keyword>
<keyword name="SysMsg_SendBroadcastColorByClientType" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端底部广播消息. &#x0A;参数:strMsg 消息内容.,strName 广播标题.,iForeground 前景颜色.,iBackground 背景颜色.,byClientType 客户端类型组合, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),&#x0A;返回:无返回值.&#x0A;备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.&#x0A;">
<param name="strMsg" />
<param name="strName" />
<param name="iForeground" />
<param name="iBackground" />
<param name="byClientType" />
</overload>
</keyword>
<keyword name="GetAllTimeMs" func="yes">
<overload  retval="double" descr="&#x0A;取得1970年1月1日0时0分0到现在经过的毫秒数. &#x0A;参数: ,&#x0A;返回:毫秒数.&#x0A;">
</overload>
</keyword>
<keyword name="GetAllDBVars" func="yes">
<overload  retval="table" descr="&#x0A;获取所有的数据库变量. &#x0A;参数: ,&#x0A;返回:返回lua_table.&#x0A;备注:无. * 示例代码：&#x0A;* function test()&#x0A;*     local ret = lualib:GetAllDBVars()&#x0A;*     -- 打印所有DB变量&#x0A;*     for k,v in ipairs(ret) do&#x0A;*         local var_type = v[1]    --变量类型 0 num 1 str&#x0A;*         local var_key = v[2]     --变量key&#x0A;*         local var_value = v[3]   --变量的值&#x0A;*         local merge_type = v[4]  --变量合区类型, 参考接口SetDBNumEx和SetDBStrEx&#x0A;*     end&#x0A;* end&#x0A;* &#x0A;">
</overload>
</keyword>
<keyword name="SendCaptchaReq" func="yes">
<overload  retval="bool" descr="&#x0A;发送验证码请求&#x0A;参数:player_guid 角色guid.,type 验证码类型 0 找出两个相同的字 .,&#x0A;返回:是否成功&#x0A;警告:返回成功只代表验证码请求发送成功，具体结果请监听相应的触发.&#x0A;">
<param name="player_guid" />
<param name="type" />
</overload>
</keyword>
<keyword name="MailToPlayerEx" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_guid 收件人guid,即玩家的guid.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,item_templates 附件物品,lua table格式描述,不超过5个.&#x0A;&#x0A; item_templates 格式:&#x0A;&#x0A; {&#x0A;&#x0A; 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)&#x0A;&#x0A; '强效金创药', 1, 1,&#x0A;&#x0A; '强效魔法药', 1, 1,&#x0A;&#x0A; '灵元珠', 10, 1,&#x0A;&#x0A; '新手之剑', 1, 1,&#x0A;&#x0A; '新手头盔', 1, 1,&#x0A;&#x0A; },&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_guid" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="integral" />
<param name="item_templates" />
</overload>
</keyword>
<keyword name="Map_GenItemEx" func="yes">
<overload  retval="string" descr="&#x0A;在地图上指定位置刷出物品. &#x0A;参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,strPlayer 可以直接拾取的玩家.,&#x0A;返回:物品的GUID,失败返回''.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bMustEmpty" />
<param name="dwFreeze" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_servant_betry" func="yes">
<overload  retval="bool" descr="&#x0A;宝宝叛变回调 宝宝叛变回调. &#x0A;参数:strMonster 宝宝的GUID.,&#x0A;返回:true=允许叛变, false=阻止叛变.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="on_billin" func="yes">
<overload  retval="void" descr="&#x0A;玩家在线冲值时回调. &#x0A;参数:strPlayer 玩家的GUID.,iBillinIngot 当次充值元宝数.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="iBillinIngot" />
</overload>
</keyword>
<keyword name="LogDetail" func="yes">
<overload  retval="void" descr="&#x0A;向日志服务器上传角色的物品操作行程日志. &#x0A;参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节,&#x0A;返回:无返回值.&#x0A;">
<param name="strRoleName" />
<param name="strItemKey" />
<param name="strItem" />
<param name="iSrcValue" />
<param name="iRefValue" />
<param name="strDescript" />
<param name="strTarget" />
<param name="strDetail" />
</overload>
</keyword>
<keyword name="Item_SetBind" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品是否绑定. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,bBind 是否绑定.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="bBind" />
</overload>
</keyword>
<keyword name="Monster_GetCustomVarInt" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得对象实体上存储的整型数值变量. &#x0A;参数:strMonster 怪物的GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回0.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:GetInt,&#x0A;">
<param name="strMonster" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="on_captcha_result" func="yes">
<overload  retval="void" descr="&#x0A;验证码结果回调 验证吗结果回调. &#x0A;参数:strPlayer 玩家的GUID.,result 验证码结果 0 验证成功 1 验证失败.,reason 验证成功时指明额外信息 0 无 1 疑似外挂；验证失败时指明失败原因 0 验证码输入错误 1 验证超时 2 玩家要求重试.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="result" />
<param name="reason" />
</overload>
</keyword>
<keyword name="SubIngotEx" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色非绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,byTo 元宝去向(0给系统，1给玩家).,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubIngot,SubBindIngot,&#x0A;">
<param name="strPlayer" />
<param name="iIngot" />
<param name="byTo" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Npc_GetPosY" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据NPC的GUID取得Y坐标. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:NPC的Y坐标,如果NPC不存在返回-1.&#x0A;参考:X,Y,&#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="on_item_timeup" func="yes">
<overload  retval="void" descr="&#x0A;角色物品时效到期时回调. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Player_DisableForbidTalkType" func="yes">
<overload  retval="bool" descr="&#x0A;取消玩家禁言类型. &#x0A;参数:strPlayer 玩家的GUID.,dwType 取消禁言类型,1=文字禁言 2=语音禁言 3=文字和语音禁言.,&#x0A;返回:成功或失败.&#x0A;警告:该函数是异步的,返回成功并不代表解除禁言类型成功.&#x0A;">
<param name="strPlayer" />
<param name="dwType" />
</overload>
</keyword>
<keyword name="Player_IsCanAttack" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否能使用物理攻击. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GenItemRnd" func="yes">
<overload  retval="string" descr="&#x0A;在地图上随机位置刷出物品. &#x0A;参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,&#x0A;返回:物品的GUID,失败返回''.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bMustEmpty" />
<param name="dwFreeze" />
</overload>
</keyword>
<keyword name="on_sub_ingot" func="yes">
<overload  retval="void" descr="&#x0A;扣元宝回调. &#x0A;参数:strPlayer 玩家的GUID.,ingot 元宝数量.,to 元宝去向(0给系统，1给玩家).,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="ingot" />
<param name="to" />
</overload>
</keyword>
<keyword name="Player_GetWarehouseItemCountUnbind" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:ItemCountEx,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="CopyHero" func="yes">
<overload  retval="string" descr="&#x0A;生成英雄的分身&#x0A;参数:hero_guid 英雄原身的guid.,life 分身的生命时间，单位是秒 0表示永远存在,callback 分身生成成功后的回调.,params 回调参数.,&#x0A;返回:生成的英雄分身的guid.&#x0A;备注:如果分身生成成功会回调。 function(player, err, hero, param) player 英雄主人的guid err 错误码，永远为0 hero 英雄的guid param 用户传入的回调参数&#x0A;">
<param name="hero_guid" />
<param name="life" />
<param name="callback" />
<param name="params" />
</overload>
</keyword>
<keyword name="Wings" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的翅膀. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Monster_Kill" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;杀死怪物. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:成功或失败.&#x0A;参考:Kill,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="DelItemsBatch" func="yes">
<overload  retval="bool" descr="&#x0A;批量删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,guids 物品的guids.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;备注:无. * 示例代码：&#x0A;* function del_items(player)&#x0A;*     local guids = {'5432GH32', '7472GH51'}&#x0A;*     local ret = lualib:DelItemsBatch(player, guids, '回收', '脚本')&#x0A;*     if not ret then&#x0A;*         lualib:SysWarnMsg(player, '批量删除物品失败')&#x0A;*     end&#x0A;* end&#x0A;* &#x0A;">
<param name="strPlayer" />
<param name="guids" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GenEscorter" func="yes">
<overload  retval="bool" descr="&#x0A;生成需要护送的镖车. &#x0A;参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMonsterKey" />
<param name="dwLife" />
</overload>
</keyword>
<keyword name="on_monster_born" func="yes">
<overload  retval="void" descr="&#x0A;怪物出生时回调. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="AddBagSite" func="yes">
<overload  retval="bool" descr="&#x0A;增加背包格子数&#x0A;参数:player_guid 角色guid.,amount 增加的格子数,&#x0A;返回:是否成功&#x0A;警告:建议不要同时使用乾坤囊这类物品.&#x0A;">
<param name="player_guid" />
<param name="amount" />
</overload>
</keyword>
<keyword name="on_post_die" func="yes">
<overload  retval="void" descr="&#x0A;角色死亡时回调. &#x0A;参数:strRole 角色的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="AllItemList" func="yes">
<overload  retval="table" descr="&#x0A;取得玩家所有物品的GUID列表. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:所有物品的GUID列表,返回lua table.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="StartMigrate" func="yes">
<overload  retval="string" descr="&#x0A;启动玩家角色数据跨服&#x0A;参数:player_guid 准备跨服的角色guid,dst_zone_id 目标区的区id,call_back_func 跨服操作完成后回调的脚本函数名,param 当回调函数回调时返回的参数,&#x0A;返回:如果启动失败返回失败原因 成功返回''&#x0A;备注:调用此接口后，不管跨服成功或者失败都会回调设置的call_back_func函数 * 示例代码：&#x0A;* function qianyi(player, param)&#x0A;*     local ret = lualib:StartMigrate(player, 87373, 'migrate_result', 'abc')&#x0A;*     if ret ~= '' then&#x0A;*        lualib:SysWarnMsg(player, '数据迁移出错:'..ret)&#x0A;*     end&#x0A;* end&#x0A;* function migrate_result(player, err, param)&#x0A;*     lualib:SysWarnMsg(player, '数据迁移结果:'..err)&#x0A;* end&#x0A;* &#x0A;">
<param name="player_guid" />
<param name="dst_zone_id" />
<param name="call_back_func" />
<param name="param" />
</overload>
</keyword>
<keyword name="SysTipsMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端左上角消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="SetCastleCustomVarInt" func="yes">
<overload  retval="void" descr="&#x0A;设置某城堡的数值型自定义变量. &#x0A;参数:strCastleName 城堡名.,strKey 变量名.,iValue 变量值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strCastleName" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="pre_add_gray" func="yes">
<overload  retval="bool" descr="&#x0A;玩家变灰名前回调 玩家变灰名前回调. &#x0A;参数:actor_guid 要变灰名的玩家的guid.,target_guid 要变灰名玩家的目标玩家的guid.,&#x0A;返回:true=允许变灰名, false=阻止变灰名.&#x0A;参考:eTriggerType,&#x0A;">
<param name="actor_guid" />
<param name="target_guid" />
</overload>
</keyword>
<keyword name="HardwareCode" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家的硬件码. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的硬件码,出错返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="IsBanString" func="yes">
<overload  retval="bool" descr="&#x0A;判断字符串是不是敏感词. &#x0A;参数:strString 字符串.,&#x0A;返回:是或否.&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="on_pre_join_family" func="yes">
<overload  retval="bool" descr="&#x0A;玩家申请加入行会前触发 玩家申请加入行会前触发. &#x0A;参数:player_guid 要申请加入玩家的guid,family_guid 要加入行会的guid,&#x0A;返回:true=允许此协议发送给中央服务器处理, false=阻止此协议转发.&#x0A;参考:eTriggerType,&#x0A;">
<param name="player_guid" />
<param name="family_guid" />
</overload>
</keyword>
<keyword name="SetTaoAtk" func="yes">
<overload  retval="void" descr="&#x0A;设置角色道术攻击. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="Player_SubGoldStr" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色金币字符串版. &#x0A;参数:strPlayer 玩家的GUID.,str_gold 金币数量的字符串.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubGold,SubBindGold,&#x0A;">
<param name="strPlayer" />
<param name="str_gold" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_AddGoldStr" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色金币字符串版. &#x0A;参数:strPlayer 玩家的GUID.,str_gold 金币数量的字符串.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddGold,AddBindGold,&#x0A;">
<param name="strPlayer" />
<param name="str_gold" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_AddExpStr" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色经验字符串版. &#x0A;参数:strPlayer 玩家的GUID.,str_exp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="str_exp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="GetGoldStr" func="yes">
<overload  retval="string" descr="&#x0A;取得角色非绑定金币字符串格式. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家非绑定金币的数量的字符串.&#x0A;参考:GetGold,GetBindGold,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_Summon" func="yes">
<overload  retval="string" descr="&#x0A;玩家召唤宝宝. &#x0A;参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,byLevel 宝宝的等级.,&#x0A;返回:宝宝的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strServantKey" />
<param name="byLevel" />
</overload>
</keyword>
<keyword name="Player_RunGMCmd" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家执行GM指令. &#x0A;参数:strPlayer 玩家的GUID.,strAlias GM指令的名字.,strParam GM指令的参数.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strAlias" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="ProgressBarStart" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家开启进度条. &#x0A;参数:strPlayer 玩家的GUID.,dwDuration 进度条的持续时间.,strDesc 进度条的描述文字.,strCompleteCallBack 进度条完成时回调函数.,strAbortCallBack 进度条被打断时回调函数.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwDuration" />
<param name="strDesc" />
<param name="strCompleteCallBack" />
<param name="strAbortCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="GetHeroCopyNum" func="yes">
<overload  retval="uint32" descr="&#x0A;获得英雄的分身数量&#x0A;参数:hero_guid 英雄的guid.,&#x0A;返回:英雄的分身数量.&#x0A;">
<param name="hero_guid" />
</overload>
</keyword>
<keyword name="SetMD5CheckList" func="yes">
<overload  retval="void" descr="&#x0A;获得客户端的MD5码黑名单上报的数量&#x0A;参数:player_guid 目标客户端的角色guid,t_md5_list md5码黑名单列表,call_back 收到黑名单数量上报以后回调的函数名,param 当回调函数回调时返回的参数,time_out 获取黑名单的超时时间单位毫秒(建议设置在5分钟以上),&#x0A;返回:无返回值.&#x0A;备注:调用此接口后，当收到客户端回应或者设置 的超时时间已到时会回调设置call_back函数 void call_back(player, param, md5_num_table, is_timeout) player 玩家的guid param 调用此接口时预设的参数 md5_num_table 客户端返回的黑名单中每个md5码对应的数量 is_timeout 是否校验超时&#x0A;">
<param name="player_guid" />
<param name="t_md5_list" />
<param name="call_back" />
<param name="param" />
<param name="time_out" />
</overload>
</keyword>
<keyword name="Player_SetAttackModeLock" func="yes">
<overload  retval="void" descr="&#x0A;设置玩家是否可以改变攻击类型&#x0A;参数:player_guid 玩家的guid.,is_lock true=锁定不允许改变 false=解锁可以改变.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="is_lock" />
</overload>
</keyword>
<keyword name="Equip_GetExtNum" func="yes">
<overload  retval="int" descr="&#x0A;取得装备当前扩展条目数&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,&#x0A;返回:取得装备当前鉴定条目数, 取值范围[0, 10].&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
</overload>
</keyword>
<keyword name="Number2Guid" func="yes">
<overload  retval="string" descr="&#x0A;将纯阿拉伯数字表示的字符串转化为引擎使用的GUID字符串&#x0A;参数:number 纯阿拉伯数字表示的guid(10进制表示).,&#x0A;返回:引擎中使用的guid(32进制表示).&#x0A;">
<param name="number" />
</overload>
</keyword>
<keyword name="Map_ClearItem" func="yes">
<overload  retval="void" descr="&#x0A;清理地图指定范围中的物品. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetClientCheckInfo" func="yes">
<overload  retval="void" descr="&#x0A;获得客户端的校验信息&#x0A;参数:player_guid 目标客户端的角色guid,call_back 收到校验信息以后回调的函数名,param 回调函数时,time_out 获取校验信息的超时时间单位毫秒,&#x0A;返回:无返回值.&#x0A;备注:调用此接口后，当收到客户端回应或者设置 的超时时间已到时会回调设置call_back函数 void call_back(player, param, info_table, is_timeout) player 玩家的guid param 调用此接口时预设的参数 info_table 客户端返回的一个int数组 is_timeout 是否校验超时&#x0A;">
<param name="player_guid" />
<param name="call_back" />
<param name="param" />
<param name="time_out" />
</overload>
</keyword>
<keyword name="on_pre_attacker_harm" func="yes">
<overload  retval="int" descr="&#x0A;攻击者受到伤害即将损血前回调. &#x0A;参数:strRole 被攻击者的GUID,比如玩家、怪物、英雄.,strAttacker 攻击者的GUID,比如玩家、怪物、英雄.,iHp 攻击者即将损失的血量,负数表示损血.,strKillKey 本次攻击所使用的技能KeyName.,&#x0A;返回:如果返回负数则损血,返回正数则补血.数值对应损/补的血量.&#x0A;警告:注意返回正负数的区别.如果系统、地图、角色分别都挂了这类触发器,生效顺序为系统、地图、角色.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strAttacker" />
<param name="iHp" />
<param name="strKillKey" />
</overload>
</keyword>
<keyword name="IO_FileList" func="yes">
<overload  retval="table" descr="&#x0A;获得指定目录中所有txt文件名. &#x0A;参数:strDirName 文件目录名如果为''则获取整个data目录下的txt文件名.,&#x0A;返回:txt文件名组成的table.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strDirName" />
</overload>
</keyword>
<keyword name="GetClientVerEx" func="yes">
<overload  retval="uint32" descr="&#x0A;获得新的客户端版本号&#x0A;参数:player_guid 玩家的guid.,&#x0A;返回:客户端版本号&#x0A;备注:注意玩家刚上线时请用RequestClientVer请求版本号，然后添加delaycall，最后再delaycall的回调函数里调用此函数获得版本号&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="Map_ClearNpc" func="yes">
<overload  retval="bool" descr="&#x0A;清理地图指定范围中的NPC. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strNpcKey NPC的KeyName,如果为''则清所有NPC.,&#x0A;返回:无.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="LoadPlayerEx" func="yes">
<overload  retval="void" descr="&#x0A;引擎加载玩家&#x0A;参数:player_name 玩家的名字.,func 加载玩家成功时执行的函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(player, param) player 加载玩家的guid param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_name" />
<param name="func" />
<param name="param" />
</overload>
</keyword>
<keyword name="GetTickCount" func="yes">
<overload  retval="uint32" descr="&#x0A;返回系统的时钟嘀答数. &#x0A;参数: ,&#x0A;返回:嘀答数.&#x0A;">
</overload>
</keyword>
<keyword name="GetBuffList" func="yes">
<overload  retval="table" descr="&#x0A;获得指定角色的buff列表&#x0A;参数:role_guid 角色的guid,&#x0A;返回:返回角色的buff列表 {{'kye'=keyname, 'life'=life, 'att1'=att1_value}...}.&#x0A;">
<param name="role_guid" />
</overload>
</keyword>
<keyword name="number_logic" func="yes">
<overload  retval="bool" descr="&#x0A;增加对INT64类型数据的逻辑运算支持&#x0A;参数:value1 INT64类型数字的字符串格式,value2 INT64类型数字的字符串格式,opreate 支持的运算符 '==', '&gt;=', '&lt;=', '&gt;', '&lt;', '~=',&#x0A;返回:true或false;&#x0A;">
<param name="value1" />
<param name="value2" />
<param name="opreate" />
</overload>
</keyword>
<keyword name="KeyName2Name" func="yes">
<overload  retval="string" descr="&#x0A;更具对象KeyName获得Name&#x0A;参数:KeyName 对象KeyName.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,&#x0A;返回:对象配置表中的Name.&#x0A;">
<param name="KeyName" />
<param name="type" />
</overload>
</keyword>
<keyword name="Player_ChangeGender" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;设置角色性别. &#x0A;参数:strPlayer 玩家的GUID.,dwGender 性别.,&#x0A;返回:无.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:SetGender,&#x0A;">
<param name="strPlayer" />
<param name="dwGender" />
</overload>
</keyword>
<keyword name="Map_GetMapName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得地图的Name. &#x0A;参数:strMap 地图的GUID.,&#x0A;返回:地图的Name,出错返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:Name,&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="on_item_amount_zero" func="yes">
<overload  retval="void" descr="&#x0A;角色物品堆叠数为0时回调. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="SetServantMasterName" func="yes">
<overload  retval="void" descr="&#x0A;修改宝宝的主人名字&#x0A;参数:servant_guid 宝宝的guid.,master_name 主人的名字.,&#x0A;返回:无返回值.&#x0A;">
<param name="servant_guid" />
<param name="master_name" />
</overload>
</keyword>
<keyword name="on_fang_chen_mi" func="yes">
<overload  retval="void" descr="&#x0A;增加防沉迷通知事件&#x0A;参数:strPlayer 玩家的GUID.,type 防沉迷状态 0=无经验 1=一半经验 2=全经验,time 已进入防沉迷状态的时间 单位秒,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="type" />
<param name="time" />
</overload>
</keyword>
<keyword name="GetSkillExp" func="yes">
<overload  retval="uint16" descr="&#x0A;获得玩家技能的熟练度&#x0A;参数:player_guid 玩家的guid.,skill_key_name 技能的关键字.,&#x0A;返回:成功返回玩家的熟练度，失败返回0.&#x0A;">
<param name="player_guid" />
<param name="skill_key_name" />
</overload>
</keyword>
<keyword name="Map_AddJumpPointEx" func="yes">
<overload  retval="bool" descr="&#x0A;在地图上添加跳转点扩展. &#x0A;参数:strSourMap 源地图的GUID.,strDestMap 目标地图的GUID.,wSourX 源地图坐标X.,wSourY 源地图坐标Y.,wSourR 源地图范围,wDestX 目标地图坐标X.,wDestY 目标地图坐标Y.,wDestR 目标图范围,&#x0A;返回:成功或失败.&#x0A;">
<param name="strSourMap" />
<param name="strDestMap" />
<param name="wSourX" />
<param name="wSourY" />
<param name="wSourR" />
<param name="wDestX" />
<param name="wDestY" />
<param name="wDestR" />
</overload>
</keyword>
<keyword name="RoleRankTop" func="yes">
<overload  retval="string" descr="&#x0A;取得当前在线的、指定属性排名最高的那个角色的GUID. &#x0A;参数:iType 角色的类型 0 = 玩家, 1 = 英雄, 其它 = 出错.,iJob 角色的职业 0 = 所有职业, 1 = 战士, 2 = 法师, 3 = 道士.,iGender 角色的性别 0 = 所有性别, 1 = 男, 2 = 女.,iAttrName 要排名的属性类型.,&#x0A;返回:角色的GUID,如果没有角色返回''.&#x0A;参考:eRoleAttr,&#x0A;">
<param name="iType" />
<param name="iJob" />
<param name="iGender" />
<param name="iAttrName" />
</overload>
</keyword>
<keyword name="on_castle_war_end" func="yes">
<overload  retval="void" descr="&#x0A;攻城战关闭时回调. &#x0A;参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strCastleName" />
<param name="strCastle" />
<param name="strBasilica" />
</overload>
</keyword>
<keyword name="Player_SpellPosY" func="yes">
<overload  retval="uint16" descr="&#x0A;获得玩家或英雄释放技能的中心点坐标Y&#x0A;参数:player_guid 玩家的guid.,&#x0A;返回:技能释放中心点的Y坐标失败返回0&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="Player_SpellPosX" func="yes">
<overload  retval="uint16" descr="&#x0A;获得玩家或英雄释放技能的中心点坐标X&#x0A;参数:player_guid 玩家的guid.,&#x0A;返回:技能释放中心点的X坐标失败返回0&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="DelFamilyMember" func="yes">
<overload  retval="bool" descr="&#x0A;删除行会中的指定玩家&#x0A;参数:player_guid 玩家的guid.,FamilyName 行会的名称,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:&#x0A;备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.&#x0A;">
<param name="player_guid" />
<param name="FamilyName" />
<param name="func" />
<param name="param" />
</overload>
</keyword>
<keyword name="GetPlayerCount" func="yes">
<overload  retval="uint32" descr="&#x0A;取得服务器上所有玩家数量. &#x0A;参数:bOffline 是否只取离线玩家数量.,&#x0A;返回:服务器上玩家数量.&#x0A;">
<param name="bOffline" />
</overload>
</keyword>
<keyword name="AddFamilyMember" func="yes">
<overload  retval="bool" descr="&#x0A;指定玩家加入行会&#x0A;参数:player_guid 玩家的guid.,FamilyName 行会的名称,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:&#x0A;备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.&#x0A;">
<param name="player_guid" />
<param name="FamilyName" />
<param name="func" />
<param name="param" />
</overload>
</keyword>
<keyword name="on_pre_stall" func="yes">
<overload  retval="bool" descr="&#x0A;玩家在摆摊前回调 玩家在摆摊前回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:true=允许玩家摆摊, false=阻止玩家摆摊.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetTriggerFilters" func="yes">
<overload  retval="void" descr="&#x0A;SetTriggerFilters(对象GUID，触发器类型，过滤类型)&#x0A;参数:IDS 模板ID列表,&#x0A;返回:无返回值.&#x0A;备注:过滤时间&#x0A;">
<param name="IDS" />
</overload>
</keyword>
<keyword name="SetCastleTempFamily" func="yes">
<overload  retval="void" descr="&#x0A;设置某城堡的临时占有行会. &#x0A;参数:strCastleName 城堡名.,strFamilyName 临时占有行会名.,&#x0A;返回:无返回值.&#x0A;">
<param name="strCastleName" />
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="IO_TextFileCheckLine" func="yes">
<overload  retval="int32" descr="&#x0A;检查文本内容是否等于文本文件中的某一行,并返回行号. &#x0A;参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符.,&#x0A;返回:行号,返之-1.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="LoadPlayer" func="yes">
<overload  retval="void" descr="&#x0A;引擎加载玩家&#x0A;参数:player_guid 玩家的guid.,func 加载玩家成功时执行的函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(player, param) player 加载玩家的guid param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="func" />
<param name="param" />
</overload>
</keyword>
<keyword name="SetDummyState" func="yes">
<overload  retval="bool" descr="&#x0A;设置假人状态&#x0A;参数:dummy_guid 假人的guid,state 假人的状态 2=跟随 3=战斗 0=休息,&#x0A;返回:设置成功返回true&#x0A;">
<param name="dummy_guid" />
<param name="state" />
</overload>
</keyword>
<keyword name="KillEx" func="yes">
<overload  retval="bool" descr="&#x0A;立即杀死角色扩展. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strKiller 凶手的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="Mod" func="yes">
<overload  retval="int32" descr="&#x0A;求模运算. &#x0A;参数:iMaster 被除数.,iSlave 除数.,&#x0A;返回:求模值.&#x0A;">
<param name="iMaster" />
<param name="iSlave" />
</overload>
</keyword>
<keyword name="SysMsg_SendPromptMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部提示消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="SysSpeakMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端喇叭消息. &#x0A;参数:strMsg 消息内容.,strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMsg" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SpellGrid" func="yes">
<overload  retval="bool" descr="&#x0A;玩家对目标施放技能. &#x0A;参数:strPlayer 玩家的GUID.,strSkill 技能的KeyName.,x 目标逻辑格的x坐标.,y 目标逻辑格的y坐标.,&#x0A;返回:技能施放成功返回true失败返回false.&#x0A;备注:技能施放成功只表示发送消息通知客户端释放此技能.&#x0A;">
<param name="strPlayer" />
<param name="strSkill" />
<param name="x" />
<param name="y" />
</overload>
</keyword>
<keyword name="GetIntegral" func="yes">
<overload  retval="double" descr="&#x0A;获取角色积分. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:角色积分.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_SubInnerForceExp" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色内功经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetDayStr" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上设置字符型天变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="GetCastleTempFamily" func="yes">
<overload  retval="string" descr="&#x0A;获取某城堡的临时占有行会. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:临时占有行会的名字.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="ShowRoleHPRef" func="yes">
<overload  retval="bool" descr="&#x0A;向周围通知角色血量的变化&#x0A;参数:see 需要看到目标角色血量变化的玩家GUID.如果为''则周围所有玩家都会看到,target 血量发生变化的对象的GUID(即谁的头顶会冒血),target_hp_ref 血量的变化量(即头顶冒血的数字),&#x0A;返回:成功或失败.&#x0A;">
<param name="see" />
<param name="target" />
<param name="target_hp_ref" />
</overload>
</keyword>
<keyword name="SetHpPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色HP属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="on_apply_buff" func="yes">
<overload  retval="void" descr="&#x0A;角色触发BUFF效果时回调. &#x0A;参数:strRole 角色的GUID.,wBuffID BUFF的ID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wBuffID" />
</overload>
</keyword>
<keyword name="HasZhenshi" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否处于珍视状态. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:true = 是, false = 否.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Amulet" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的守护. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_ride_request" func="yes">
<overload  retval="void" descr="&#x0A;收到上马请求时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Monster_ClearHateList" func="yes">
<overload  retval="bool" descr="&#x0A;清除怪物的仇恨列表. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:true=成功,false=失败.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="SetDummyDefaultAIOption" func="yes">
<overload  retval="bool" descr="&#x0A;设置假人的AI配置&#x0A;参数:AI_table AI各项配置，INT32数组表示.,&#x0A;返回:设置是否成功.&#x0A;备注:可以参考system/dummy_AI.lua脚本&#x0A;">
<param name="AI_table" />
</overload>
</keyword>
<keyword name="Item_MapRemove" func="yes">
<overload  retval="bool" descr="&#x0A;清理地图上的某个物品. &#x0A;参数:strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strItem" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="God" func="yes">
<overload  retval="void" descr="&#x0A;开启上帝模式. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;备注:调用该接口会在日志服务器留下记录. lulib:God(strPlayer);&#x0A;警告:请慎重使用该接口,以避免GM权限混乱引起重大事故.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_player_relive" func="yes">
<overload  retval="bool" descr="&#x0A;角色复活之前回调. &#x0A;参数:strRole 角色的GUID.,iType 复活类型, 0 技能复活 1 原地复活 2 回城复活 3 副本复活,&#x0A;返回:true = 允许角色复活, false = 阻止角色复活.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="iType" />
</overload>
</keyword>
<keyword name="Player_GetAttackMode" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家的攻击模式. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:出错返回-1.攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_player_die" func="yes">
<overload  retval="bool" descr="&#x0A;玩家死亡之前回调. &#x0A;参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许玩家死亡, false = 阻止玩家死亡.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="on_post_monster_die" func="yes">
<overload  retval="void" descr="&#x0A;怪物死亡时回调. &#x0A;参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="on_monster_in_fight" func="yes">
<overload  retval="void" descr="&#x0A;怪物进入战斗状态时回调&#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:无返回值.&#x0A;备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物进入战斗状态才回调.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="GetHeroRage" func="yes">
<overload  retval="int32" descr="&#x0A;获得英雄的怒气值&#x0A;参数:hero 英雄的GUID.,&#x0A;返回:当前的怒气值. 如果英雄不存在返回-1&#x0A;备注:无&#x0A;">
<param name="hero" />
</overload>
</keyword>
<keyword name="ModifyCastleStart" func="yes">
<overload  retval="bool" descr="&#x0A;强制修改城堡攻城时间. &#x0A;参数:strCastleName 城堡名.,dwTimes 攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数.,dwDuration 攻城持继时间,单位:秒.,&#x0A;返回:成功或失败.&#x0A;警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.&#x0A;">
<param name="strCastleName" />
<param name="dwTimes" />
<param name="dwDuration" />
</overload>
</keyword>
<keyword name="Player_SetNameColor" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家名字的颜色. &#x0A;参数:strPlayer 玩家的GUID.,strColor 颜色值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strColor" />
</overload>
</keyword>
<keyword name="SetScriptTimeout" func="yes">
<overload  retval="void" descr="&#x0A;设置当前正在运行的脚本死循环判断时间. &#x0A;参数:dwTick ,&#x0A;返回:无返回值.&#x0A;警告:该接口不能在类似LoadString执行方式中调用.&#x0A;">
<param name="dwTick" />
</overload>
</keyword>
<keyword name="Monster_GetPosX" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据怪物的GUID取得X坐标. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:怪物的X坐标,如果怪物不存在返回-1.&#x0A;参考:X,Y,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Item_GetCustomVarStr" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得物品实体上存储的字符型变量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:GetStr,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetFamilyCastles" func="yes">
<overload  retval="string" descr="&#x0A;获取行会的占领城堡. &#x0A;参数:strFamily 行会的GUID.,&#x0A;返回:行会占领的城堡,多个用&amp;分隔,没有则返回''.&#x0A;">
<param name="strFamily" />
</overload>
</keyword>
<keyword name="GetCurScriptName" func="yes">
<overload  retval="string" descr="&#x0A;取得当前正在运行的脚本文件名. &#x0A;参数: ,&#x0A;返回:文件名,没有扩展名.&#x0A;警告:该接口不能在类似LoadString执行方式中调用.&#x0A;">
</overload>
</keyword>
<keyword name="on_escorter_fail" func="yes">
<overload  retval="void" descr="&#x0A;押送类怪物死亡时回调. &#x0A;参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="strMaster" />
</overload>
</keyword>
<keyword name="Item_SetAmount" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的堆叠数量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iAmount 堆叠数,不能超过该物品的最大堆叠数量.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iAmount" />
</overload>
</keyword>
<keyword name="HasFamily" func="yes">
<overload  retval="bool" descr="&#x0A;判断某个行会是否存在&#x0A;参数:strFamilyName 行会的名字.,&#x0A;返回:存在或不存在.&#x0A;">
<param name="strFamilyName" />
</overload>
</keyword>
<keyword name="on_pre_process_pk" func="yes">
<overload  retval="bool" descr="&#x0A;角色处理PK值之前回调. &#x0A;参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,&#x0A;返回:true = 允许角色得到PK值, false = 阻止角色得到PK值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strKiller" />
<param name="strVictim" />
</overload>
</keyword>
<keyword name="replace" func="yes">
<overload  retval="string" descr="&#x0A;在主字符串中查找子字符串,查找到后将找到的子字符串进行替换操作.&#x0A;参数:strMaster 主字符串.,strFinder 查找的字符串.,strReplace 替换的字符串.,&#x0A;返回:返回新字符串.&#x0A;备注:t_str=string.replace(strMaster, strFinder, strReplace)，在主字符串中查找子字符串，查找到后将找到的子字符串进行替换操作。返回替换后的新字符串。&#x0A;">
<param name="strMaster" />
<param name="strFinder" />
<param name="strReplace" />
</overload>
</keyword>
<keyword name="Monster_GetAttackTarget" func="yes">
<overload  retval="string" descr="&#x0A;取得怪物的攻击目标. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:攻击目标的GUID,出错返回''.&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="MonstersByKey" func="yes">
<overload  retval="table" descr="&#x0A;取得当前GS上符合条件的怪物GUID列表. &#x0A;参数:strMonsterKey 怪物的KeyName.,iLimit 获取最大数量上限.,bIgnoreDie 是否忽略死亡.,bIgnorePet 是否忽略随从.,&#x0A;返回:怪物GUID列表.&#x0A;">
<param name="strMonsterKey" />
<param name="iLimit" />
<param name="bIgnoreDie" />
<param name="bIgnorePet" />
</overload>
</keyword>
<keyword name="ord" func="yes">
<overload  retval="int" descr="&#x0A;返回字符的ascii码.&#x0A;参数:strChar 字符串.,&#x0A;返回:字符的ascii码.&#x0A;备注:i_asscii=string.ord(str),返回字符的ASSCII码,字符串str的长度必须为1.比如:string.ord(&ldquo;A&rdquo;),执行的结果就是65.&#x0A;">
<param name="strChar" />
</overload>
</keyword>
<keyword name="indexOf" func="yes">
<overload  retval="int" descr="&#x0A;在主字符串中从指定位置查找子字符串.&#x0A;参数:strMaster 主字符串.,strSub 子字符串.,iOffset 相对字符串开头的偏移位.,&#x0A;返回:返回查找到的位置(数组下标),出错返回-1.&#x0A;备注:t_pos=string.indexOf(master, sub, offset) ,在主串master中从offset位置开始查找sub。返回查找到的位置（数组下标），出错返回-1。比如：string.indexOf(&ldquo;abcdef&rdquo;, &ldquo;de&rdquo;, 1)，执行的结果就是3。&#x0A;">
<param name="strMaster" />
<param name="strSub" />
<param name="iOffset" />
</overload>
</keyword>
<keyword name="Map_BatchGenCampMonster" func="yes">
<overload  retval="bool" descr="&#x0A;在地图中随机刷怪. &#x0A;参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="wCount" />
<param name="bCanRelive" />
<param name="iCamp" />
</overload>
</keyword>
<keyword name="split" func="yes">
<overload  retval="table" descr="&#x0A;对字符串以指定分隔符进行分隔.&#x0A;参数:strMaster 主字符串.,strSub 分隔字符串.,&#x0A;返回:分隔后的串列表.&#x0A;备注:table=string.split(master, sub)，以子串sub为分隔符，对主串进行分隔。分隔后的串放入table中，并返回这个table。比如：string.split('ABC#DE', '#')，执行的结果就是{'ABC', 'DE'}。&#x0A;&#x0A;	与接口StrSplit效果一致。&#x0A;">
<param name="strMaster" />
<param name="strSub" />
</overload>
</keyword>
<keyword name="trim" func="yes">
<overload  retval="string" descr="&#x0A;去掉字符串首尾多余的空白字符.&#x0A;参数:strString 待处理的字符串,&#x0A;返回:去掉字符串首尾所有的空白字符后的新串.&#x0A;备注:t_str=string.trim(str)，去掉str字符串首尾所有的空白字符（不包括中间），返回新字符串t_str。空白字符包括：换行符(&#x0A;)、制表符(	)、回车符()、回退符()、换页符 ()，空格符( )。&#x0A;">
<param name="strString" />
</overload>
</keyword>
<keyword name="eRoleSite" func="yes">
<overload  retval="void" descr="&#x0A;枚举类型:角色site位类型定义&#x0A;参数:&#x0A;返回:无返回值.&#x0A;备注:&#x0A;lua_site_weapon 类型值=1 类型名=武器的site.&#x0A;lua_site_helmet 类型值=2 类型名=头盔的site.&#x0A;lua_site_wrist_0 类型值=3 类型名=护腕0的site.&#x0A;lua_site_wrist_1 类型值=4 类型名=护腕1site.&#x0A;lua_site_armor 类型值=5 类型名=衣服的site.&#x0A;lua_site_juju 类型值=6 类型名=符咒的site.&#x0A;lua_site_shoes 类型值=7 类型名=鞋子的site.&#x0A;lua_site_shoulder 类型值=8 类型名=护肩的site.&#x0A;lua_site_necklace 类型值=9 类型名=项链的site.&#x0A;lua_site_ring_0 类型值=10 类型名=戒指0的site.&#x0A;lua_site_ring_1 类型值=11 类型名=戒指1的site.&#x0A;lua_site_medal 类型值=12 类型名=勋章的site.&#x0A;lua_site_gem 类型值=13 类型名=宝石的site.&#x0A;lua_site_wings 类型值=14 类型名=翅膀的site.&#x0A;lua_site_amulet 类型值=15 类型名=守护的site.&#x0A;lua_site_mount 类型值=16 类型名=坐骑的site.&#x0A;lua_site_shield 类型值=17 类型名=盾牌的site.&#x0A;lua_site_fashion 类型值=18 类型名=时装的site.&#x0A;lua_site_hat 类型值=19 类型名=斗笠的site.&#x0A;lua_site_gloves 类型值=20 类型名=手套的site.&#x0A;lua_site_jewelry 类型值=21 类型名=珠宝的site.&#x0A;lua_site_bag_0 类型值=22 类型名=背包0第一个格子的site.&#x0A;lua_site_bag_1 类型值=62 类型名=背包1第一个格子的site.&#x0A;lua_site_bag_2 类型值=102 类型名=背包2第一个格子的site.&#x0A;lua_site_bag_3 类型值=142 类型名=背包3第一个格子的site.&#x0A;lua_site_bag_4 类型值=182 类型名=背包4第一个格子的site.&#x0A;lua_site_warehouse 类型值=222 类型名=仓库第一个格子的site.&#x0A;lua_site_warehouse_adv 类型值=262 类型名=高级仓库第一个格子的site.&#x0A;lua_site_expand_0 类型值=406 类型名=背包0扩充位置的site.&#x0A;lua_site_expand_1 类型值=407 类型名=背包1扩充位置的site.&#x0A;lua_site_expand_2 类型值=408 类型名=背包2扩充位置的site.&#x0A;lua_site_expand_3 类型值=409 类型名=背包3扩充位置的site.&#x0A;lua_site_expand_4 类型值=410 类型名=背包4扩充位置的site.&#x0A;lua_site_glasses 类型值=411 类型名=眼镜的site.&#x0A;lua_site_bracelet_0 类型值=412 类型名=手镯0的site.&#x0A;lua_site_bracelet_1 类型值=413 类型名=手镯1的site.&#x0A;lua_site_mask 类型值=414 类型名=面甲的site.&#x0A;lua_site_kneelet 类型值=415 类型名=护膝的site.&#x0A;lua_site_chestplate 类型值=416 类型名=护胸的site.&#x0A;lua_site_cloak 类型值=417 类型名=披风的site.&#x0A;lua_site_earrings 类型值=418 类型名=耳环的site.&#x0A;lua_site_headwear 类型值=419 类型名=头饰的site.&#x0A;lua_site_legguard 类型值=420 类型名=护腿的site.&#x0A;lua_site_jade 类型值=421 类型名=玉佩的site.&#x0A;lua_site_instrument 类型值=422 类型名=乐器的site.&#x0A;lua_site_hangings 类型值=423 类型名=挂饰的site.&#x0A;lua_site_fashion_weapon 类型值=424 类型名=时装武器的site.&#x0A;lua_site_equip_custom_0 类型值=434 类型名=用户自定义装备位0.&#x0A;lua_site_equip_custom_1 类型值=435 类型名=用户自定义装备位1.&#x0A;lua_site_equip_custom_2 类型值=436 类型名=用户自定义装备位2.&#x0A;lua_site_equip_custom_3 类型值=437 类型名=用户自定义装备位3.&#x0A;lua_site_equip_custom_4 类型值=438 类型名=用户自定义装备位4.&#x0A;lua_site_equip_custom_5 类型值=439 类型名=用户自定义装备位5.&#x0A;lua_site_equip_custom_6 类型值=440 类型名=用户自定义装备位6.&#x0A;lua_site_equip_custom_7 类型值=441 类型名=用户自定义装备位7.&#x0A;lua_site_equip_custom_8 类型值=442 类型名=用户自定义装备位8.&#x0A;lua_site_equip_custom_9 类型值=443 类型名=用户自定义装备位9.&#x0A;lua_site_equip_custom_10 类型值=444 类型名=用户自定义装备位10.&#x0A;lua_site_equip_custom_11 类型值=445 类型名=用户自定义装备位11.&#x0A;lua_site_equip_custom_12 类型值=446 类型名=用户自定义装备位12.&#x0A;lua_site_equip_custom_13 类型值=447 类型名=用户自定义装备位13.&#x0A;lua_site_equip_custom_14 类型值=448 类型名=用户自定义装备位14.&#x0A;lua_site_equip_custom_15 类型值=449 类型名=用户自定义装备位15.&#x0A;lua_site_equip_custom_16 类型值=450 类型名=用户自定义装备位16.&#x0A;lua_site_equip_custom_17 类型值=451 类型名=用户自定义装备位17.&#x0A;lua_site_equip_custom_18 类型值=452 类型名=用户自定义装备位18.&#x0A;lua_site_equip_custom_19 类型值=453 类型名=用户自定义装备位19.&#x0A;&#x0A;">
</overload>
</keyword>
<keyword name="SendSpeakerMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送喇叭消息. &#x0A;参数:strPlayer 玩家的GUID.该接口是异步的,发送结果未知.,strMsg 喇叭消息的内容.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Map_GetRegionPlayersEx" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的玩家列表. &#x0A;参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,&#x0A;返回:区域内玩家列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="tRange" />
<param name="bIgnoreDied" />
</overload>
</keyword>
<keyword name="Map_GetRegionItemsEx" func="yes">
<overload  retval="table" descr="&#x0A;获取地图区域内的物品列表. &#x0A;参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,&#x0A;返回:区域内物品列表,返回lua table.&#x0A;">
<param name="strMap" />
<param name="strItemKey" />
<param name="tRange" />
</overload>
</keyword>
<keyword name="InWarehouse" func="yes">
<overload  retval="bool" descr="&#x0A;判断道具是否在玩家仓库里. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:true = 是, false = 否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetSvrId" func="yes">
<overload  retval="uint32" descr="&#x0A;获取服务器ID. &#x0A;参数: ,&#x0A;返回:服务器ID.&#x0A;">
</overload>
</keyword>
<keyword name="InEquip" func="yes">
<overload  retval="bool" descr="&#x0A;判断道具是否在玩家装备栏里. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:true = 是, false = 否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="InBag" func="yes">
<overload  retval="bool" descr="&#x0A;判断道具是否在玩家包裹里. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:true = 是, false = 否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="InAdvWarehouse" func="yes">
<overload  retval="bool" descr="&#x0A;判断道具是否在玩家高级仓库里. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:true = 是, false = 否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="HasItem" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否拥有道具. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:true = 拥有, false = 没有.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetTempInt" func="yes">
<overload  retval="int32" descr="&#x0A;取得对象实体上存储的整型数值变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回0.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetRegionFreeEx" func="yes">
<overload  retval="table" descr="&#x0A;返回地图区域中空坐标列表. &#x0A;参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.&#x0A;&#x0A; tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,&#x0A;返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeEx(...); local x, y = tGrids[1].X, tGrids[1].Y;&#x0A;">
<param name="strMap" />
<param name="tRange" />
</overload>
</keyword>
<keyword name="pre_player_die" func="yes">
<overload  retval="bool" descr="&#x0A;玩家死亡之前回调. &#x0A;参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,&#x0A;返回:true = 允许玩家死亡, false = 阻止玩家死亡.&#x0A;备注:lua_trigger_player_post_die&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strKiller" />
</overload>
</keyword>
<keyword name="SetInt" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上存储整型数值变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;备注:GUID = ''或GUID = '0'则为系统GUID.GUID为玩家、英雄、物品、行会的变量会永久保存，其他对象上的变量重启服务器消失&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="HairColor" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的头发颜色. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:头发颜色.&#x0A;参考:HairColor,SetHairColor,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="on_pre_mall" func="yes">
<overload  retval="bool" descr="&#x0A;玩家在商城消费之前回调. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买单价.,byBind 绑定类型. 1 = 绑定, 2 = 不绑定.,&#x0A;返回:true = 允许玩家购买, false = 阻止玩家购买.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="iNum" />
<param name="iPrice" />
<param name="byBind" />
</overload>
</keyword>
<keyword name="on_attack_ex" func="yes">
<overload  retval="void" descr="&#x0A;受攻击时回调. &#x0A;参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID.,iHp 损失的血量.,strSkillKey 攻击技能的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strAttacker" />
<param name="iHp" />
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="Item_SetMaxDurability" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID设置该物品的最大耐久. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="iDura" />
</overload>
</keyword>
<keyword name="SetAchievement" func="yes">
<overload  retval="void" descr="&#x0A;设置角色成就. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SetFormAllowFunc" func="yes">
<overload  retval="bool" descr="&#x0A;设置表单的允许回调函数列表. &#x0A;参数:tFuncList 函数名列表的lua table.,&#x0A;返回:成功或失败.&#x0A;">
<param name="tFuncList" />
</overload>
</keyword>
<keyword name="SubDeposit" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色仓库金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 扣除金币的原因.,strTarget 扣除金币动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="SetTaoAtkPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色道术攻击属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="TimeDiff" func="yes">
<overload  retval="int32" descr="&#x0A;取得字符串时间的差值. &#x0A;参数:strDateTime1 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,strDateTime2 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,&#x0A;返回:时间差值单位秒.&#x0A;">
<param name="strDateTime1" />
<param name="strDateTime2" />
</overload>
</keyword>
<keyword name="LastTalkTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的最后聊天时间TICK值. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:最后聊天时的TICK.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetCastleMapGuid" func="yes">
<overload  retval="string" descr="&#x0A;取得某城堡的攻城地图GUID. &#x0A;参数:strCastleName 城堡名.,&#x0A;返回:攻城地图的GUID.&#x0A;">
<param name="strCastleName" />
</overload>
</keyword>
<keyword name="SysGuildMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部公会消息. &#x0A;参数:strFamily 行会的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strFamily" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="SubGold" func="yes">
<overload  retval="bool" descr="&#x0A;扣除角色非绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:SubGold,SubBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="StopStall" func="yes">
<overload  retval="bool" descr="&#x0A;让假人结束摆摊&#x0A;参数:dummy 假人的GUID.,&#x0A;返回:摆摊是否成功.&#x0A;备注:无&#x0A;">
<param name="dummy" />
</overload>
</keyword>
<keyword name="StopAutoRun" func="yes">
<overload  retval="void" descr="&#x0A;关闭指定玩家挂机选项&#x0A;参数:player_guid 玩家guid.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="StartStall" func="yes">
<overload  retval="bool" descr="&#x0A;让假人摆摊&#x0A;参数:dummy 假人的GUID.,stall_name 摊位名称.,goods 商品的guid，必须在假人包裹里.,price_type 商品的价格类型.,price 商品的价格.,&#x0A;返回:摆摊是否成功.&#x0A;备注:无&#x0A;">
<param name="dummy" />
<param name="stall_name" />
<param name="goods" />
<param name="price_type" />
<param name="price" />
</overload>
</keyword>
<keyword name="StartAutoRun" func="yes">
<overload  retval="void" descr="&#x0A;开启指定玩家挂机选项. &#x0A;参数:player_guid 玩家guid.,opt 挂机选项字符串.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="opt" />
</overload>
</keyword>
<keyword name="Shoes" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的靴子. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetWeekStr" func="yes">
<overload  retval="bool" descr="&#x0A;在对象实体上设置字符型周变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="GetInt" func="yes">
<overload  retval="int32" descr="&#x0A;取得对象实体上存储的整型数值变量. &#x0A;参数:strObject 对象的GUID,可以是玩家、英雄、怪物、NPC、物品、地图、系统、行会.,strKey 变量名,变量名不能以'__'开头(系统用).,&#x0A;返回:变量的值,如果变量不存在返回0.&#x0A;备注:GUID = ''或GUID = '0'则为系统GUID.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetVipLevelRemain" func="yes">
<overload  retval="uint32" descr="&#x0A;取得VIP等级剩余时间. &#x0A;参数:strPlayer 玩家的GUID.,iVipLevel VIP等级.,&#x0A;返回:剩余时间,单位:秒.&#x0A;">
<param name="strPlayer" />
<param name="iVipLevel" />
</overload>
</keyword>
<keyword name="StrSplit" func="yes">
<overload  retval="table" descr="&#x0A;字符串分割函数. &#x0A;参数:strMaster 被分割串.,strSplit 分割符.,&#x0A;返回:分割后的子串列表,返回lua table.如: tSubStr = lualib:StrSplit('aa##bb##cc#d', '##'); tSubStr = {'aa', 'bb', 'cc#d'};&#x0A;">
<param name="strMaster" />
<param name="strSplit" />
</overload>
</keyword>
<keyword name="VarList" func="yes">
<overload  retval="table" descr="&#x0A;返回对象的所有自定义变量列表. &#x0A;参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,&#x0A;返回:对象的自定义变量列表,返回lua table.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Json2Item" func="yes">
<overload  retval="string" descr="&#x0A;根据物品的JSON信息生成物品的实体. &#x0A;参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息.,&#x0A;返回:物品的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strJson" />
</overload>
</keyword>
<keyword name="on_pre_invite_family" func="yes">
<overload  retval="bool" descr="&#x0A;邀请玩家加入行会前触发 邀请玩家加入行会前触发. &#x0A;参数:player_guid 邀请玩家的guid,invite_name 被邀请玩家的名字,&#x0A;返回:true=允许此协议发送给中央服务器处理, false=阻止此协议转发.&#x0A;参考:eTriggerType,&#x0A;">
<param name="player_guid" />
<param name="invite_name" />
</overload>
</keyword>
<keyword name="SetPhyAtkPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色物理攻击属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SetNetCheck" func="yes">
<overload  retval="void" descr="&#x0A;客户端网络状态检查&#x0A;参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查.,&#x0A;返回:无返回值.&#x0A;">
<param name="player_guid" />
<param name="is_check" />
</overload>
</keyword>
<keyword name="Player_HasDgnTicket" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否拥有副本门票. &#x0A;参数:strPlayer 玩家的GUID.,strMap 副本KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMap" />
</overload>
</keyword>
<keyword name="SetMagAtkPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色魔法攻击属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="MD5" func="yes">
<overload  retval="string" descr="&#x0A;将字符串进行MD5加密. &#x0A;参数:strCode 源字符串.,&#x0A;返回:32字节MD码.&#x0A;">
<param name="strCode" />
</overload>
</keyword>
<keyword name="SetLockSwitch" func="yes">
<overload  retval="void" descr="&#x0A;设置角色的安全锁开关状态. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iLockStatus 安全锁开关状态,0: 未解锁 1: 已解锁.,&#x0A;返回:无返回值.&#x0A;参考:LockSwitch,SetLockSwitch,&#x0A;">
<param name="strRole" />
<param name="iLockStatus" />
</overload>
</keyword>
<keyword name="SetLevel" func="yes">
<overload  retval="void" descr="&#x0A;设置角色等级. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Monster_Type" func="yes">
<overload  retval="int32" descr="&#x0A;取得怪物的类型. &#x0A;参数:strMonsterKey 怪物的KeyName.,&#x0A;返回:怪物的类型,1 = 普通怪 2 = 精英怪 3 = 头目 4 = BOSS 5 = 守卫 6 = 守城怪 7 = 镖车.&#x0A;">
<param name="strMonsterKey" />
</overload>
</keyword>
<keyword name="FindFirstBagFreeSlot" func="yes">
<overload  retval="int32" descr="&#x0A;获取玩家背包第一个空格位. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:背包空格位,没有空格则返回-1.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SetGender" func="yes">
<overload  retval="void" descr="&#x0A;设置角色性别. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SetEquipWeight" func="yes">
<overload  retval="void" descr="&#x0A;设置角色装备负重. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="SetDynamicAttr" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家动态属性. &#x0A;参数:strGUID 玩家或者物品的GUID.,iAttrSite 动态属性编号0-99.,iAttrType 属性类型,具体设置类型请咨询策划.,iAttrValue 属性值.,&#x0A;返回:成功或失败.&#x0A;参考:eRoleAttr,&#x0A;">
<param name="strGUID" />
<param name="iAttrSite" />
<param name="iAttrType" />
<param name="iAttrValue" />
</overload>
</keyword>
<keyword name="IsBagLock" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家包裹是否锁定&#x0A;参数:player_guid 玩家的GUID.,&#x0A;返回:true表示玩家包裹被锁定false表示未锁定&#x0A;">
<param name="player_guid" />
</overload>
</keyword>
<keyword name="SetBrawn" func="yes">
<overload  retval="void" descr="&#x0A;设置角色腕力. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
<param name="bIsLimit" />
</overload>
</keyword>
<keyword name="GetRegionFreeRnd" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;返回地图区域中空坐标列表. &#x0A;参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标.,&#x0A;返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRnd(strMap, wX, wY, wR, wLimit); local x, y = tGrids[1].X, tGrids[1].Y;&#x0A;参考:GetRegionFreeRndEx,&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="wLimit" />
</overload>
</keyword>
<keyword name="DelBuff" func="yes">
<overload  retval="bool" descr="&#x0A;删除角色BUFF. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="GenTraveler" func="yes">
<overload  retval="bool" descr="&#x0A;生成自动行走的镖车. &#x0A;参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒.,strPaths 镖车的路径字符串.详情请参考镖车脚本写法.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMonsterKey" />
<param name="dwLife" />
<param name="strPaths" />
</overload>
</keyword>
<keyword name="Player_UseItemByID" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;让玩家使用道具. &#x0A;参数:strPlayer 玩家的GUID.,wID 物品的ID.,&#x0A;返回:成功或失败.&#x0A;参考:ApplyItem,&#x0A;">
<param name="strPlayer" />
<param name="wID" />
</overload>
</keyword>
<keyword name="Player_ItemRequest" func="yes">
<overload  retval="bool" descr="&#x0A;批量操作(添加/删除)玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,tName 物品的KeyName表. 如:{'吼天兽(未开光)', '开光印', '吼天兽*绝'},tCount 与KeyName对应的数量表. 如:{1, 1, 1},tBind 与KeyName对应的绑定类型表.绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.&#x0A;&#x0A; 如:{2, 2, 1},tOpr 与KeyName对应的操作表.操作类型, 0 = 添加 1 = 删除.&#x0A;&#x0A; 如:{1, 1, 0},strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="tName" />
<param name="tCount" />
<param name="tBind" />
<param name="tOpr" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Player_SetCustomVarStr" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在对象实体上存储字符型变量. &#x0A;参数:strPlayer 玩家的GUID.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetStr,&#x0A;">
<param name="strPlayer" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="Player_SetAlias" func="yes">
<overload  retval="bool" descr="&#x0A;设置玩家的称谓. &#x0A;参数:strPlayer 玩家的GUID.,strAlias 称谓.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strAlias" />
</overload>
</keyword>
<keyword name="Player_NotifyCustomParam" func="yes">
<overload  retval="void" descr="&#x0A;[此函数过期, 禁用]&#x0A;向客户端发送变量通知. &#x0A;参数:strPlayer 玩家的GUID.,strKey 变量名.,&#x0A;返回:无返回值.&#x0A;警告:该接口属于服务器代码扩展,脚本作者无权使用.&#x0A;参考:NotifyVar,&#x0A;">
<param name="strPlayer" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="Player_IsHasSkill" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;判断玩家是否拥有某个技能. &#x0A;参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,&#x0A;返回:是或否.&#x0A;参考:HasSkill,&#x0A;">
<param name="strPlayer" />
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="Player_IsHasBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;判断玩家是否拥有某个BUFF. &#x0A;参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName.,&#x0A;返回:是或否.&#x0A;参考:HasBuff,&#x0A;">
<param name="strPlayer" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="Player_GoHome" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家回城. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;警告:该接口是异步的,接口返回时玩家还没有切换地图.&#x0A;参考:AddBuff,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="IO_CreateTextFile" func="yes">
<overload  retval="bool" descr="&#x0A;创建文本文件. &#x0A;参数:strFileName 文件名.,bOverlap 是否覆盖. false = 文件存在时创建失败.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="bOverlap" />
</overload>
</keyword>
<keyword name="Player_GiveSingleItem" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;给予玩家单个物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:新物品的GUID,出错返回''.&#x0A;参考:AddSingleItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="LastAtkTime" func="yes">
<overload  retval="uint32" descr="&#x0A;取得玩家的最后攻击时间TICK值. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:最后攻击时的TICK.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Player_GetPosX" func="yes">
<overload  retval="int16" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家的X坐标值. &#x0A;参数:strPlayer 角色的GUID.,&#x0A;返回:X坐标值,出错返回-1.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:X,Y,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="DelUnmatchedSkill" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家非本职业技能. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Map_GenMonster" func="yes">
<overload  retval="bool" descr="&#x0A;在地图中指定范围刷怪. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="byDir" />
<param name="strMonsterKey" />
<param name="wCount" />
<param name="bCanRelive" />
</overload>
</keyword>
<keyword name="Player_ChangeName" func="yes">
<overload  retval="bool" descr="&#x0A;玩家改名. &#x0A;参数:strPlayer 玩家的GUID.,strNewName 新名字.,&#x0A;返回:返回true时只代表发出改名请求，不代表改名成功，要等待事件触发.&#x0A;备注:无. * 示例代码：&#x0A;*先注册改名结果触发的监听，比如下面注册全局触发&#x0A;*function on_change_name_result(player, result, new_name)&#x0A;*    if 0 == result then&#x0A;*        成功&#x0A;*    else&#x0A;*        失败，可能是重名或者名字包含屏蔽字&#x0A;*    end&#x0A;*end&#x0A;*lualib:AddTrigger('0',  lua_trigger_player_change_name, 'on_change_name_result')&#x0A;*然后脚本调用&#x0A;*function change_name(player, new_name)&#x0A;*    if lualib:Player_ChangeName(player, new_name) then&#x0A;*        改名请求已经提交&#x0A;*    else&#x0A;*        改名请求失败&#x0A;*    end&#x0A;*end&#x0A;*等待改名结果触发，如果改名成功，可以将玩家踢下线，重新上线后新名字生效&#x0A;* &#x0A;">
<param name="strPlayer" />
<param name="strNewName" />
</overload>
</keyword>
<keyword name="Player_GetGuid" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据玩家的Name找到该玩家. &#x0A;参数:strPlayerName 玩家的Name.,&#x0A;返回:玩家的GUID,如果玩家不存在返回''.&#x0A;警告:玩家如果不在线就找不到.&#x0A;参考:Name2Guid,&#x0A;">
<param name="strPlayerName" />
</overload>
</keyword>
<keyword name="AddTitle" func="yes">
<overload  retval="void" descr="&#x0A;给玩家添加称号. &#x0A;参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="wTitleID" />
</overload>
</keyword>
<keyword name="Player_DropItem" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;玩家丢弃物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:成功或失败.&#x0A;参考:DropItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Player_ChangeJob" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;设置角色职业. &#x0A;参数:strPlayer 玩家的GUID.,dwJob 职业.,&#x0A;返回:无.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;参考:SetJob,&#x0A;">
<param name="strPlayer" />
<param name="dwJob" />
</overload>
</keyword>
<keyword name="Player_EnterDgn" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家进入副本. &#x0A;参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName.,wX 副本的X坐标.,wY 副本的Y坐标.,wRange 坐标范围.,&#x0A;返回:成功或失败.&#x0A;警告:多GS情况下,调用该接口后不能再对玩家进行任何操作.&#x0A;">
<param name="strPlayer" />
<param name="strMapKey" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Id2KeyName" func="yes">
<overload  retval="string" descr="&#x0A;更具对象Id获得KeyName&#x0A;参数:id 对象Id.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,&#x0A;返回:对象配置表中的KeyName.&#x0A;">
<param name="id" />
<param name="type" />
</overload>
</keyword>
<keyword name="Player_AddBuff" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给角色添加BUFF. &#x0A;参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,dwTimes BUFF的持继时间,单位为秒.,&#x0A;返回:成功或失败.&#x0A;参考:AddBuff,&#x0A;">
<param name="strPlayer" />
<param name="strBuffKey" />
<param name="dwTimes" />
</overload>
</keyword>
<keyword name="Monster_Escape" func="yes">
<overload  retval="bool" descr="&#x0A;让怪物行走到某点. &#x0A;参数:strMonster 怪物的GUID.,wX 目标X坐标.,wY 目标Y坐标.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMonster" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="PhyDefPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的物防属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:物防属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="PhyAtkPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的物攻属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:物攻属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Monster_SetSeeker" func="yes">
<overload  retval="bool" descr="&#x0A;将该怪物设为自动行走怪. &#x0A;参数:strMonster 怪物的GUID.,tPath 路径表,按X坐标,Y坐标顺序填写.如:{1, 1, 1, 3},第一步坐标(1, 1),第二步坐标(1, 3).,byType 行走类型, 0 = 普通行走 1 = 反复寻走.,bForce true = 强制寻路,不主动攻击也不回击 false = 根据怪物类型决定.,&#x0A;返回:属性值.&#x0A;警告:早期接口,不再提供技术支持.&#x0A;">
<param name="strMonster" />
<param name="tPath" />
<param name="byType" />
<param name="bForce" />
</overload>
</keyword>
<keyword name="Npc_SetPanelSize" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;设置NPC面板的size. &#x0A;参数:strNpc NPC的GUID.,wWidth 面板的宽度.,wHeight 面板的高度.,&#x0A;返回:成功或失败.&#x0A;参考:SetPanelSize,&#x0A;">
<param name="strNpc" />
<param name="wWidth" />
<param name="wHeight" />
</overload>
</keyword>
<keyword name="SetBagLock" func="yes">
<overload  retval="void" descr="&#x0A;锁定或解锁玩家或英雄的包裹&#x0A;参数:player_guid 玩家的GUID.,lock lock=true表示锁定包裹 lock=false表示解锁包裹,&#x0A;返回:无返回值.&#x0A;备注:玩家包裹被锁定后将无法移动物品 使用物品.&#x0A;">
<param name="player_guid" />
<param name="lock" />
</overload>
</keyword>
<keyword name="Npc_GetPosX" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据NPC的GUID取得X坐标. &#x0A;参数:strNpc NPC的GUID.,&#x0A;返回:NPC的X坐标,如果NPC不存在返回-1.&#x0A;参考:X,Y,&#x0A;">
<param name="strNpc" />
</overload>
</keyword>
<keyword name="Npc_GetCustomVar" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得NPC实体上存储的字符型变量. &#x0A;参数:strNpc NPC的GUID.,strKey 变量名.,&#x0A;返回:变量的值,如果变量不存在返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:GetStr,&#x0A;">
<param name="strNpc" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="GetDBStr" func="yes">
<overload  retval="string" descr="&#x0A;取得数据库中存储的字符型变量. &#x0A;参数:strKey 变量名.,&#x0A;返回:变量值.&#x0A;">
<param name="strKey" />
</overload>
</keyword>
<keyword name="Now" func="yes">
<overload  retval="string" descr="&#x0A;取得当前时间的年-月-日 时:分:秒. &#x0A;参数: ,&#x0A;返回:当前时间的年-月-日 时:分:秒.&#x0A;">
</overload>
</keyword>
<keyword name="GetItemGold" func="yes">
<overload  retval="int32" descr="&#x0A;取得金币类型物品的金币&#x0A;参数:strItem 物品GUID.,&#x0A;返回:物品的金币数量,返败返回0.&#x0A;参考:Map_GenGold,ModifyItemGold,&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Mount" func="yes">
<overload  retval="string" descr="&#x0A;取得玩家当前装备的坐骑. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:装备的GUID,出错或没有装备返回''.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Monster_SetAttackType" func="yes">
<overload  retval="bool" descr="&#x0A;设置怪物(包括宝宝和守卫)允许攻击角色类型. &#x0A;参数:monster_guid 怪物GUID.,target_type 目标的类型支持0 = 玩家, 1 = 假人, 2 = 怪物, 3 = NPC,is_attack true=允许攻击 false=不允许攻击,&#x0A;返回:设置成功返回true.&#x0A;备注:如果怪物无归属返回''&#x0A;">
<param name="monster_guid" />
<param name="target_type" />
<param name="is_attack" />
</overload>
</keyword>
<keyword name="Monster_JumpXY" func="yes">
<overload  retval="void" descr="&#x0A;让怪物跳转到某地图. &#x0A;参数:strMap 地图的GUID.,strMonster 怪物的GUID.,wX 跳转点的X坐标.,wY 跳转点的Y坐标.,wRange 跳转点的范围.,&#x0A;返回:无返回值.&#x0A;">
<param name="strMap" />
<param name="strMonster" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
</overload>
</keyword>
<keyword name="Monster_GetCurTarget" func="yes">
<overload  retval="string" descr="&#x0A;取得怪物的攻击目标. &#x0A;参数:strMonster 怪物的GUID.,&#x0A;返回:攻击目标的GUID,出错返回''.&#x0A;参考:Monster_GetAttackTarget,&#x0A;">
<param name="strMonster" />
</overload>
</keyword>
<keyword name="Meritor" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的功勋. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:功勋.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="SetLuckCurse" func="yes">
<overload  retval="void" descr="&#x0A;设置角色幸运诅咒. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="MailToPlayer" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_guid 收件人guid,即玩家的guid.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.&#x0A;&#x0A; item_templates 格式:&#x0A;&#x0A; {&#x0A;&#x0A; 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)&#x0A;&#x0A; '强效金创药', 1, 1,&#x0A;&#x0A; '强效魔法药', 1, 1,&#x0A;&#x0A; '灵元珠', 10, 1,&#x0A;&#x0A; '新手之剑', 1, 1,&#x0A;&#x0A; '新手头盔', 1, 1,&#x0A;&#x0A; },&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_guid" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="item_templates" />
</overload>
</keyword>
<keyword name="MapKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据角色GUID取得角色当前地图的KeyName. &#x0A;参数:strRole 角色的GUID,角色可以是玩家、怪物、NPC.,&#x0A;返回:角色当前地图的KeyName,如果角色不存在返回''.&#x0A;备注:已过期的接口,不再提供技术支持.&#x0A;参考:KeyName,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Map_GetMapNpc" func="yes">
<overload  retval="string" descr="&#x0A;获取地图中某个NPC的GUID. &#x0A;参数:strMap 地图的GUID.,strNpcKey NPC的KeyName.,&#x0A;返回:NPC的GUID,出错返回''.&#x0A;">
<param name="strMap" />
<param name="strNpcKey" />
</overload>
</keyword>
<keyword name="SetDBStr" func="yes">
<overload  retval="bool" descr="&#x0A;在数据库中存储字符型变量. &#x0A;参数:strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="DelItemEx" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bBind" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarhouse" />
<param name="bAdvWarehouse" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="on_enter_map" func="yes">
<overload  retval="void" descr="&#x0A;玩家进入地图时回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetQuestAccomplishing" func="yes">
<overload  retval="string" descr="&#x0A;取得任务完成时的追踪文本&#x0A;参数:wQuestID 任务ID.,&#x0A;返回:任务追踪文本,如果任务找不到返回''.&#x0A;">
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="Map_RemoveMonster" func="yes">
<overload  retval="bool" descr="&#x0A;清理地图中的怪物. &#x0A;参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
</overload>
</keyword>
<keyword name="DisableTimer" func="yes">
<overload  retval="bool" descr="&#x0A;取消对象的定时器. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strObject" />
<param name="dwTimerID" />
</overload>
</keyword>
<keyword name="Map_GetDistance" func="yes">
<overload  retval="uint16" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得地图上二点间的距离. &#x0A;参数:wSourX 源坐标X点.,wSourY 源坐标Y点.,wDestX 目标坐标X点.,wDestY 目标坐标Y点.,&#x0A;返回:返回二点间距离.&#x0A;">
<param name="wSourX" />
<param name="wSourY" />
<param name="wDestX" />
<param name="wDestY" />
</overload>
</keyword>
<keyword name="MailJsonItemEx" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,json_item 附件物品实体,json格式描述.,&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_name" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="integral" />
<param name="json_item" />
</overload>
</keyword>
<keyword name="MailJsonItem" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,json_item 附件物品实体,json格式描述.,&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_name" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="json_item" />
</overload>
</keyword>
<keyword name="Mail" func="yes">
<overload  retval="bool" descr="&#x0A;给某个玩家发送一封文本邮件. &#x0A;参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.&#x0A;&#x0A; item_templates 格式:&#x0A;&#x0A; {&#x0A;&#x0A; 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)&#x0A;&#x0A; '强效金创药', 1, 1,&#x0A;&#x0A; '强效魔法药', 1, 1,&#x0A;&#x0A; '灵元珠', 10, 1,&#x0A;&#x0A; '新手之剑', 1, 1,&#x0A;&#x0A; '新手头盔', 1, 1,&#x0A;&#x0A; },&#x0A;返回:true表示投递成功,false表示失败.&#x0A;">
<param name="sender_name" />
<param name="receiver_name" />
<param name="text" />
<param name="gold" />
<param name="yuanbao" />
<param name="item_templates" />
</overload>
</keyword>
<keyword name="LuckCurse" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的幸运诅咒. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:幸运诅咒.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="LogDetailWithId" func="yes">
<overload  retval="void" descr="&#x0A;向日志服务器上传角色的物品操作行程日志. &#x0A;参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节,&#x0A;返回:无返回值.&#x0A;">
<param name="strRoleName" />
<param name="iAction" />
<param name="strItemKey" />
<param name="strItem" />
<param name="iSrcValue" />
<param name="iRefValue" />
<param name="strDescript" />
<param name="strTarget" />
<param name="strDetail" />
</overload>
</keyword>
<keyword name="SetFamilyMaxMember" func="yes">
<overload  retval="void" descr="&#x0A;设置行会最大成员数&#x0A;参数:family 行会的名称或者GUID.,max_num 行会的最大人数.,&#x0A;返回:无返回值.&#x0A;备注:设置行会的最大人数不能小于当前的行会人数,设置后会通知CS修改最大人数&#x0A;">
<param name="family" />
<param name="max_num" />
</overload>
</keyword>
<keyword name="SysTopMsg" func="yes">
<overload  retval="void" descr="&#x0A;发送客户端顶部消息. &#x0A;参数:byCount 消息滚动次数.,strMsg 消息内容.,&#x0A;返回:无返回值.&#x0A;">
<param name="byCount" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="Player_GiveItemBind" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给予玩家绑定物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:GiveBindItem,&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Job" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的职业. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:职业.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="ItemKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据物品的GUID取得物品的KeyName. &#x0A;参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,&#x0A;返回:物品的KeyName,如果物品或玩家不存在返回''.&#x0A;备注:已过期的接口,不再提供技术支持.&#x0A;参考:KeyName,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="ItemDropType" func="yes">
<overload  retval="int" descr="&#x0A;取得物品的掉落类型&#x0A;参数:strItem 物品GUID.,&#x0A;返回:返回物品掉落类型,参考lua_logic_define.lua.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="GetVipLevel" func="yes">
<overload  retval="uint32" descr="&#x0A;取得VIP等级. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的VIP等级.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="ItemCount" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家的物品数量. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,&#x0A;返回:符合条件的物品数量,出错返回-1.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Item_SetCustomVarStr" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在物品实体上存储字符型变量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,strValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetStr,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strKey" />
<param name="strValue" />
</overload>
</keyword>
<keyword name="Item_SetCustomVarInt" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在物品实体上存储整型数值变量. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,iValue 变量值.,&#x0A;返回:成功或失败.&#x0A;参考:SetInt,&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Item_GetPosX" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;根据物品GUID取得X坐标. &#x0A;参数:strMap 物品所属地图GUID.,strItem 物品的GUID.,&#x0A;返回:物品的X坐标,如果物品不存在返回0.&#x0A;参考:X,Y,&#x0A;">
<param name="strMap" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="NPCTalk" func="yes">
<overload  retval="void" descr="&#x0A;打开物品的对话框&#x0A;参数:strPlayer 玩家GUID.,strTalk 对话框的内容.,&#x0A;返回:无返回值.&#x0A;参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,&#x0A;">
<param name="strPlayer" />
<param name="strTalk" />
</overload>
</keyword>
<keyword name="Item_GetID" func="yes">
<overload  retval="uint16" descr="&#x0A;取得物品的模版ID. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:物品模版ID,具体类型请参考策划Item表.出错返回0.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="SetDBMerge" func="yes">
<overload  retval="bool" descr="&#x0A;设置数据表合区类型&#x0A;参数:strDatabaseName 数据库表必须以DATA_***的形式定义.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名.,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来.,&#x0A;返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功.&#x0A;备注:回调函数格式:&#x0A; void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_table&amp; tRecordSets, const char* strParam);&#x0A; bResult:执行结果 &#x0A; dwError:错误码 &#x0A; strError:错误信息 &#x0A; iResultNum:没有结果集的语句影响的结果数 &#x0A; tRecordSets:有结果集的语句产生的结果集 &#x0A; strParam:自定义参数&#x0A;警告:对性能还是有影响的,不要轻易使用.&#x0A;">
<param name="strDatabaseName" />
<param name="byType" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="IsInRegion" func="yes">
<overload  retval="bool" descr="&#x0A;判断坐标是否在区域中. &#x0A;参数:tObject tObject[1] = 0时,tObject[2]为区域中心点X坐标,tObject[3]为区域中心点Y坐标,tObject[4]为区域中心X半径,tObject[5]为区域中心Y半径. tObject[1] = 1时,tObject[2]为区域左上角X坐标,tObject[3]为区域左上角Y坐标,tObject[4]为区域宽度,tObject[5]为区域高度.,wX 判断点的X坐标.,wY 判断点的Y坐标.,&#x0A;返回:是或否.&#x0A;">
<param name="tObject" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="IO_DeleteFile" func="yes">
<overload  retval="bool" descr="&#x0A;删除文件. &#x0A;参数:strFileName 文件名.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
</overload>
</keyword>
<keyword name="IO_DeleteDir" func="yes">
<overload  retval="bool" descr="&#x0A;删除目录. &#x0A;参数:strDirName 文件目录名.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strDirName" />
</overload>
</keyword>
<keyword name="NPCTalkEx" func="yes">
<overload  retval="void" descr="&#x0A;打开NPC的对话框&#x0A;参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,&#x0A;返回:无返回值.&#x0A;参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,&#x0A;">
<param name="strNpc" />
<param name="strPlayer" />
<param name="strTalk" />
</overload>
</keyword>
<keyword name="SetVipLevel" func="yes">
<overload  retval="void" descr="&#x0A;设置VIP等级. &#x0A;参数:strPlayer 玩家的GUID.,iVipLevel VIP等级.,&#x0A;返回:无返回值.&#x0A;">
<param name="strPlayer" />
<param name="iVipLevel" />
</overload>
</keyword>
<keyword name="HpPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的HP属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:HP属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Head" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的头像. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:头像编号.&#x0A;参考:Head,SetHead,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="MpPoint" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的MP属性点. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:MP属性点.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="on_system_stop" func="yes">
<overload  retval="void" descr="&#x0A;系统关闭回调. &#x0A;参数: ,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
</overload>
</keyword>
<keyword name="on_post_drop" func="yes">
<overload  retval="void" descr="&#x0A;角色爆道具时回调. &#x0A;参数:strRole 角色的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GMLevel" func="yes">
<overload  retval="int32" descr="&#x0A;获取玩家的GM等级. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家的GM等级.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="GetWeekStr" func="yes">
<overload  retval="string" descr="&#x0A;取得对象实体上设置的字符型周变量. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,&#x0A;返回:变量的值,如果变量已跨周返回''.&#x0A;">
<param name="strObject" />
<param name="strKey" />
</overload>
</keyword>
<keyword name="on_create" func="yes">
<overload  retval="void" descr="&#x0A;物品、NPC、怪物创建时回调. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Map_GetWidth" func="yes">
<overload  retval="uint16" descr="&#x0A;取得地图的宽度. &#x0A;参数:strMap 地图的GUID.,&#x0A;返回:地图宽度,出错返回0.&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="GetLocalTime" func="yes">
<overload  retval="uint32" descr="&#x0A;[此函数过期, 禁用]&#x0A;从1970年1月1日0时0分0到现在经过的秒数. &#x0A;参数: ,&#x0A;返回:时间秒数.&#x0A;参考:GetTime,GetLocalTime,GetAllTime,&#x0A;">
</overload>
</keyword>
<keyword name="Map_JumpRnd" func="yes">
<overload  retval="bool" descr="&#x0A;玩家随机跳地图. &#x0A;参数:strMap 副本的GUID.,strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="AddIntegral" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色积分. &#x0A;参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iIntegral" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="LockSwitch" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的安全锁开关状态. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:安全锁开关状态,0: 未解锁 1: 已解锁.&#x0A;参考:LockSwitch,SetLockSwitch,&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="GetDynamicAttr" func="yes">
<overload  retval="table" descr="&#x0A;获取玩家动态属性. &#x0A;参数:strGUID 玩家或者物品的GUID.,iAttrSite 动态属性编号0-99.,&#x0A;返回:动态属性信息,返回lua table.如: local tAttrPair = lualib:GetDynamicAttr(strPlayer, 0); local iAttrType, iAttrVale = tAttrPair['attr_name'], tAttrPair['attr_value'];&#x0A;参考:eRoleAttr,&#x0A;">
<param name="strGUID" />
<param name="iAttrSite" />
</overload>
</keyword>
<keyword name="GetBindIngot" func="yes">
<overload  retval="double" descr="&#x0A;取得角色绑定元宝. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家绑定元宝的数量.&#x0A;参考:GetIngot,GetBindIngot,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="EquipWeight" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的装备负重. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:装备负重.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="Energy" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的活力. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:活力.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="ApplyItemXY" func="yes">
<overload  retval="bool" descr="&#x0A;让玩家对附近某坐标使用道具. &#x0A;参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,wX 当前地图X坐标.,wY 当前地图Y坐标.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strItemInfo" />
<param name="bInstance" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="SysMsg_SendInputDlg" func="yes">
<overload  retval="bool" descr="&#x0A;通知客户端显示输入框. &#x0A;参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,dwMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="dwDlgID" />
<param name="strContent" />
<param name="dwTimeOut" />
<param name="dwMaxLen" />
<param name="strCallBack" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="ClearTimer" func="yes">
<overload  retval="void" descr="&#x0A;清除对象的所有定时器. &#x0A;参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,&#x0A;返回:无返回值.&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Player_GetCastleList" func="yes">
<overload  retval="table" descr="&#x0A;取得玩家所属行会占领的所有城堡列表. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:玩家队伍的GUID.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_pre_curse" func="yes">
<overload  retval="bool" descr="&#x0A;玩家的武器被诅咒前回调. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:true=允许武器被诅咒, false=阻止武器被诅咒.&#x0A;备注:武器被诅咒是有概率的,所有并不是每次杀死目标都会触发.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_item_dur_zero" func="yes">
<overload  retval="void" descr="&#x0A;角色装备耐久为0时回调. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;备注:只有物品类型为装备才会触发此回调&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="GetItemsByKeys" func="yes">
<overload  retval="table" descr="&#x0A;根据KeyName取得玩家物品的GUID列表&#x0A;参数:strPlayer 玩家GUID.,strKeys 物品的KeyName,使用多个KeyName时使用Key1#Key2....#Keyn的方式.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库,&#x0A;返回:返回符合条件的物品GUID列表,结果存放在lua table中.&#x0A;">
<param name="strPlayer" />
<param name="strKeys" />
<param name="bEquip" />
<param name="bBag" />
<param name="bWarehouse" />
<param name="bWarehouseAdv" />
</overload>
</keyword>
<keyword name="AddBindGold" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色绑定金币. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;参考:AddGold,AddBindGold,&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Achievement" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的成就. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,&#x0A;返回:成就.&#x0A;">
<param name="strRole" />
</overload>
</keyword>
<keyword name="Map_GenSingleCampMonster" func="yes">
<overload  retval="string" descr="&#x0A;在地图中指定范围刷单只怪. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活.,iCamp 阵营.,&#x0A;返回:怪物GUID.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="byDir" />
<param name="strMonsterKey" />
<param name="bCanRelive" />
<param name="iCamp" />
</overload>
</keyword>
<keyword name="Map_GenCampMonster" func="yes">
<overload  retval="bool" descr="&#x0A;在地图中指定范围刷怪. &#x0A;参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strMap" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="byDir" />
<param name="strMonsterKey" />
<param name="wCount" />
<param name="bCanRelive" />
<param name="iCamp" />
</overload>
</keyword>
<keyword name="DelAllSkill" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家所有技能. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="DelSkill" func="yes">
<overload  retval="bool" descr="&#x0A;删除玩家技能. &#x0A;参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="on_mall" func="yes">
<overload  retval="void" descr="&#x0A;玩家在商城消费时回调. &#x0A;参数:strPlayer 玩家的GUID.,iBilloutIngot 当次消费的元宝数.,CostType 消费类型. 1 = 绑定, 2 = 不绑定.,strItem 购买物品的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="iBilloutIngot" />
<param name="CostType" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="AddSingleItem" func="yes">
<overload  retval="string" descr="&#x0A;给予玩家单个物品. &#x0A;参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:新物品的GUID,出错返回''.&#x0A;">
<param name="strPlayer" />
<param name="strItemKey" />
<param name="wCount" />
<param name="bBind" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="on_item_use_zero" func="yes">
<overload  retval="void" descr="&#x0A;角色物品使用次数为0时回调. &#x0A;参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Player_GetExpLimit" func="yes">
<overload  retval="double" descr="&#x0A;获得玩家当前等级经验上限. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:当前等级经验上限.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="Guid2Id" func="yes">
<overload  retval="uint16" descr="&#x0A;更具Guid获得配置表中的ID&#x0A;参数:guid 对象的guid.,&#x0A;返回:对象的Id.&#x0A;备注:传入guid的对象只能是怪物、NPC、道具、地图.&#x0A;">
<param name="guid" />
</overload>
</keyword>
<keyword name="on_un_equip_suit" func="yes">
<overload  retval="void" descr="&#x0A;角色脱下套装时回调. &#x0A;参数:strRole 角色的GUID.,wSuitID 套装ID.,&#x0A;返回:无返回值.&#x0A;警告:服务器上没有调用过该触发器,功能未实现.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSuitID" />
</overload>
</keyword>
<keyword name="on_monster_disappear" func="yes">
<overload  retval="void" descr="&#x0A;怪物消失在地图时回调. &#x0A;参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMonster" />
<param name="wMonsterID" />
<param name="strMonsterName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="on_pre_enter_jump" func="yes">
<overload  retval="bool" descr="&#x0A;角色进入跳转点之前回调. &#x0A;参数:strRole 角色的GUID.,strFromMap 源地图的GUID.,strDestMap 目标地图的GUID.,&#x0A;返回:true = 允许角色通过跳转点跳图, false = 阻止角色通过跳转点跳图.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strFromMap" />
<param name="strDestMap" />
</overload>
</keyword>
<keyword name="on_post_process_pk" func="yes">
<overload  retval="void" descr="&#x0A;角色处理PK值时回调. &#x0A;参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strKiller" />
<param name="strVictim" />
<param name="iPKRef" />
</overload>
</keyword>
<keyword name="decode" func="yes">
<overload  retval="object" descr="&#x0A;将json格式的字符串转换成lua对象.&#x0A;参数:strJson lua对象对应的json格式串.,&#x0A;返回:返回任意lua对象.&#x0A;备注:object=json.decode(json_text) 将json字符串转换成对应的对象，根据json字符串的描述，可能转换成数字、字符串、table.&#x0A;">
<param name="strJson" />
</overload>
</keyword>
<keyword name="on_pre_drop_one" func="yes">
<overload  retval="bool" descr="&#x0A;角色爆道具之前回调(爆某具体的道具). &#x0A;参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,&#x0A;返回:true = 允许角色爆装备, false = 阻止角色爆装备.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strMap" />
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
</overload>
</keyword>
<keyword name="on_pre_dig_meat" func="yes">
<overload  retval="bool" descr="&#x0A;角色挖肉之前回调. &#x0A;参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID.,&#x0A;返回:true = 允许角色挖肉, false = 阻止角色挖肉.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strTarget" />
<param name="wSkillID" />
</overload>
</keyword>
<keyword name="on_pre_item_apply" func="yes">
<overload  retval="bool" descr="&#x0A;角色使用道具前回调. &#x0A;参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,&#x0A;返回:true = 允许角色使用道具, false = 阻止角色使用道具.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strItem" />
<param name="wItemID" />
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="on_pre_spell" func="yes">
<overload  retval="bool" descr="&#x0A;角色放技能前回调. &#x0A;参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name.,wX 技能施放坐标X.,wY 技能施放坐标Y.,strTarget 技能施放目标.,strSkillKeyName 技能的KeyName.,&#x0A;返回:true = 允许角色放技能, false = 阻止角色放技能.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSkillID" />
<param name="strSkillName" />
<param name="wX" />
<param name="wY" />
<param name="strTarget" />
<param name="strSkillKeyName" />
</overload>
</keyword>
<keyword name="Player_GetAntiIndulge" func="yes">
<overload  retval="int32" descr="&#x0A;取得玩家的防沉迷状态. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:0 = 无收益 1 = 经验减半 2 = 全收益.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="StartFamilyWar" func="yes">
<overload  retval="bool" descr="&#x0A;通知CS二个行会开始交战&#x0A;参数:strFamily1 行会的名字.,strFamily2 行会的名字.,&#x0A;返回:成功或失败.&#x0A;警告:该接口用来扩展服务器的功能,脚本作者不要使用.&#x0A;">
<param name="strFamily1" />
<param name="strFamily2" />
</overload>
</keyword>
<keyword name="on_post_un_equip" func="yes">
<overload  retval="void" descr="&#x0A;角色脱装备时回调. &#x0A;参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strEquip" />
<param name="wEquipID" />
<param name="strEquipKey" />
</overload>
</keyword>
<keyword name="on_pre_un_equip" func="yes">
<overload  retval="bool" descr="&#x0A;角色脱装备之前回调. &#x0A;参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,&#x0A;返回:true = 允许玩家脱装备, false = 阻止玩家脱装备.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="strEquip" />
<param name="wEquipID" />
<param name="strEquipKey" />
</overload>
</keyword>
<keyword name="on_npc_appear" func="yes">
<overload  retval="void" descr="&#x0A;NPC出现在地图时回调. &#x0A;参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strNPC" />
<param name="wNPCID" />
<param name="strNPCName" />
<param name="wX" />
<param name="wY" />
</overload>
</keyword>
<keyword name="MagAtk" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的魔攻. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:魔攻.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="PhyAtk" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的物攻. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:物攻.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="Mp" func="yes">
<overload  retval="int32" descr="&#x0A;取得角色的蓝量. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,&#x0A;返回:蓝量.&#x0A;">
<param name="strRole" />
<param name="bLimit" />
</overload>
</keyword>
<keyword name="SysMsg_SendWebMsg" func="yes">
<overload  retval="bool" descr="&#x0A;通知客户端显示Web页面框. &#x0A;参数:strPlayer 玩家的GUID.,strTitle 页面框标题.,strURL 网页URL路径.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strTitle" />
<param name="strURL" />
<param name="strParam" />
</overload>
</keyword>
<keyword name="Player_JumpToRole" func="yes">
<overload  retval="bool" descr="&#x0A;跳转到目标玩家面前. &#x0A;参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strDestPlayerName" />
</overload>
</keyword>
<keyword name="GetFamilyMembersByTitleId" func="yes">
<overload  retval="table" descr="&#x0A;通过称号ID返回玩家所属行会成员的列表&#x0A;参数:family 行会GUID.,title_id 封号ID, 0、行会成员；1、会长；2、副会长；3、精英、4以上为自定义,&#x0A;返回:行会成员GUID列表的lua table.&#x0A;">
<param name="family" />
<param name="title_id" />
</overload>
</keyword>
<keyword name="IO_DirExists" func="yes">
<overload  retval="bool" descr="&#x0A;判断文件目录是否存在. &#x0A;参数:strDirName 文件目录名.,&#x0A;返回:是或否.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strDirName" />
</overload>
</keyword>
<keyword name="SysMsg_SendWarnMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部警告消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="GetURL" func="yes">
<overload  retval="bool" descr="&#x0A;获取一个URL的内容&#x0A;参数:Url http链接地址.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间.,&#x0A;返回:true表示投递请求成功（不表示获取内容成功）.&#x0A;">
<param name="Url" />
<param name="callback" />
<param name="param_list" />
<param name="timeout" />
</overload>
</keyword>
<keyword name="MapRndPos" func="yes">
<overload  retval="table" descr="&#x0A;取得地图随机点. &#x0A;参数:strMapKey 地图的KeyName.,&#x0A;返回:随机点坐标,返回lua table. 如:local tPos = lualib:MapRndPos('龙城'); local x, y = tPos['x'], tPos['y'];&#x0A;">
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="GetBuffAtt1" func="yes">
<overload  retval="int32" descr="&#x0A;取得BUFF的Att1属性值. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,&#x0A;返回:Att1属性值.&#x0A;">
<param name="strRole" />
<param name="strBuffKey" />
</overload>
</keyword>
<keyword name="GetAgentId" func="yes">
<overload  retval="uint32" descr="&#x0A;获取代理ID. &#x0A;参数: ,&#x0A;返回:代理ID.&#x0A;">
</overload>
</keyword>
<keyword name="ReloadConfig" func="yes">
<overload  retval="bool" descr="&#x0A;重载系统表. &#x0A;参数:strTableKey 配置表名.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strTableKey" />
</overload>
</keyword>
<keyword name="Map_GetMapKeyName" func="yes">
<overload  retval="string" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得地图的KeyName. &#x0A;参数:strMap 地图的GUID.,&#x0A;返回:地图的KeyName,出错返回''.&#x0A;警告:该接口已过期,不再提供技术支持.&#x0A;参考:KeyName,&#x0A;">
<param name="strMap" />
</overload>
</keyword>
<keyword name="HasTrigger" func="yes">
<overload  retval="bool" descr="&#x0A;判断对象是否拥有某触发器. &#x0A;参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,&#x0A;返回:是或否.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strObject" />
<param name="iType" />
<param name="strCallBack" />
</overload>
</keyword>
<keyword name="on_first_in_game" func="yes">
<overload  retval="void" descr="&#x0A;新玩家第一次进入游戏时回调. &#x0A;参数:strPlayer 新人玩家的GUID.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="on_auto_add_gold" func="yes">
<overload  retval="void" descr="&#x0A;玩家杀怪自动加金币触发回调&#x0A;参数:strPlayer 玩家的GUID.,monster_KeyName 被杀怪物的KeyName,add_gold 增加的金币数,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strPlayer" />
<param name="monster_KeyName" />
<param name="add_gold" />
</overload>
</keyword>
<keyword name="on_equip_suit" func="yes">
<overload  retval="void" descr="&#x0A;角色穿上套装时回调. &#x0A;参数:strRole 角色的GUID.,wSuitID 套装ID.,&#x0A;返回:无返回值.&#x0A;警告:服务器上没有调用过该触发器,功能未实现.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wSuitID" />
</overload>
</keyword>
<keyword name="IO_SetCustomVarStr" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;在数据库中存储字符型变量. &#x0A;参数:strKey 变量名.,iValue 变量值,&#x0A;返回:成功或失败.&#x0A;参考:SetDBStr,&#x0A;">
<param name="strKey" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="SysWarnMsg" func="yes">
<overload  retval="bool" descr="&#x0A;发送客户端底部警告消息. &#x0A;参数:strPlayer 玩家的GUID.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="IO_TextFileDeleteLineStr" func="yes">
<overload  retval="bool" descr="&#x0A;从文本文件中删除行内容为指定字符串的行. &#x0A;参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符.,&#x0A;返回:成功或失败.&#x0A;备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.&#x0A;警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.&#x0A;">
<param name="strFileName" />
<param name="strContent" />
</overload>
</keyword>
<keyword name="VerifyCampCount" func="yes">
<overload  retval="bool" descr="&#x0A;判断玩家是否被活动次数限制所允许. &#x0A;参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="dwCampID" />
</overload>
</keyword>
<keyword name="SetMpPoint" func="yes">
<overload  retval="void" descr="&#x0A;设置角色MP属性点数. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,&#x0A;返回:无返回值.&#x0A;">
<param name="strRole" />
<param name="iValue" />
</overload>
</keyword>
<keyword name="Player_GetBagSize" func="yes">
<overload  retval="int32" descr="&#x0A;[此函数过期, 禁用]&#x0A;取得玩家包裹大小. &#x0A;参数:strPlayer 玩家的GUID.,&#x0A;返回:包裹大小,出错返回-1.&#x0A;参考:GetBagSize,GetBagSizeEx,BagSize,&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="SysRoleTalk" func="yes">
<overload  retval="bool" descr="&#x0A;发送角色当前说话通知. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strMsg" />
</overload>
</keyword>
<keyword name="on_pre_relate_family" func="yes">
<overload  retval="bool" descr="&#x0A;行会建立联盟或者敌对关系前触发 行会建立联盟或者敌对关系前触发. &#x0A;参数:my_family_name 自己行会名称,other_family_name 要联盟或者敌对的行会名称,relationship 关系 1=联盟 2=敌对,&#x0A;返回:true=允许行会联盟或者敌对 false=不允许&#x0A;参考:eTriggerType,&#x0A;">
<param name="my_family_name" />
<param name="other_family_name" />
<param name="relationship" />
</overload>
</keyword>
<keyword name="GetAllCastle" func="yes">
<overload  retval="table" descr="&#x0A;取得服务器里的所有城堡. &#x0A;参数: ,&#x0A;返回:服务器城堡列表,返回lua table.&#x0A;">
</overload>
</keyword>
<keyword name="on_move" func="yes">
<overload  retval="void" descr="&#x0A;角色移动时回调. &#x0A;参数:strRole 角色的GUID.,wX 移动的X坐标.,wY 移动的Y坐标.,wType 移动类型. 0 = 走, 1 = 跑.,&#x0A;返回:无返回值.&#x0A;参考:eTriggerType,&#x0A;">
<param name="strRole" />
<param name="wX" />
<param name="wY" />
<param name="wType" />
</overload>
</keyword>
<keyword name="GetFamilyJoinList" func="yes">
<overload  retval="int32" descr="&#x0A;发送行会列表到客户端&#x0A;参数:strPlayer 玩家GUID.,&#x0A;返回:返回0成功,返回-1代表失败.&#x0A;">
<param name="strPlayer" />
</overload>
</keyword>
<keyword name="CanAccomplishQuest" func="yes">
<overload  retval="bool" descr="&#x0A;判断某任务是否可提交. &#x0A;参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="wQuestID" />
</overload>
</keyword>
<keyword name="Map_SetOnTimer" func="yes">
<overload  retval="bool" descr="&#x0A;[此函数过期, 禁用]&#x0A;给地图添加定时器. &#x0A;参数:strMap ,dwTimerID ,dwTimes ,dwCount ,&#x0A;返回:&#x0A;参考:AddTimer,&#x0A;">
<param name="strMap" />
<param name="dwTimerID" />
<param name="dwTimes" />
<param name="dwCount" />
</overload>
</keyword>
<keyword name="Name" func="yes">
<overload  retval="string" descr="&#x0A;根据GUID取得Name. &#x0A;参数:strObject 对象的GUID.,&#x0A;返回:对象的Name,如果对象不存在返回''.&#x0A;参考:KeyName,Name,&#x0A;">
<param name="strObject" />
</overload>
</keyword>
<keyword name="Map_AddJumpPoint" func="yes">
<overload  retval="bool" descr="&#x0A;在地图上添加跳转点. &#x0A;参数:strSourMap 源地图的GUID.,strDestMap 目标地图的GUID.,wSourX 源地图坐标X.,wSourY 源地图坐标Y.,wDestX 目标地图坐标X.,wDestY 目标地图坐标Y.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strSourMap" />
<param name="strDestMap" />
<param name="wSourX" />
<param name="wSourY" />
<param name="wDestX" />
<param name="wDestY" />
</overload>
</keyword>
<keyword name="Player_AddInnerForceExp" func="yes">
<overload  retval="bool" descr="&#x0A;添加角色内功经验. &#x0A;参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strPlayer" />
<param name="iExp" />
<param name="strDesc" />
<param name="strTarget" />
</overload>
</keyword>
<keyword name="Map_GetRegionMonsters" func="yes">
<overload  retval="table" descr="&#x0A;[此函数过期, 禁用]&#x0A;获取地图区域内的怪物列表. &#x0A;参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,&#x0A;返回:区域内怪物列表,返回lua table.&#x0A;参考:Map_GetRegionMonstersEx,&#x0A;">
<param name="strMap" />
<param name="strMonsterKey" />
<param name="wX" />
<param name="wY" />
<param name="wRange" />
<param name="bIgnoreDied" />
<param name="bIgnoreServant" />
</overload>
</keyword>
<keyword name="MapKey2ID" func="yes">
<overload  retval="uint32" descr="&#x0A;根据地图的KeyName取得地图的ID. &#x0A;参数:strMapKey 地图的KeyName.,&#x0A;返回:地图的ID,出错返回0.&#x0A;">
<param name="strMapKey" />
</overload>
</keyword>
<keyword name="Item_DataRow" func="yes">
<overload  retval="table" descr="&#x0A;根据物品KeyName取得该物品的配置表结构. &#x0A;参数:strItemKey 物品的KeyName.,&#x0A;返回:物品的配置表结构.&#x0A;">
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="ItemKey2ID" func="yes">
<overload  retval="uint32" descr="&#x0A;根据物品的KeyName取得物品的ID. &#x0A;参数:strItemKey 物品的KeyName.,&#x0A;返回:物品的ID,出错返回0.&#x0A;">
<param name="strItemKey" />
</overload>
</keyword>
<keyword name="Item_GetIcon" func="yes">
<overload  retval="uint32" descr="&#x0A;根据物品GUID取得该物品的图标. &#x0A;参数:strItem 物品的GUID.,&#x0A;返回:物品的图标ID,出错返回0.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="Equip_SetIdentifyProp" func="yes">
<overload  retval="bool" descr="&#x0A;设置装备的鉴定属性&#x0A;参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,att0 属性名0.,v0 属性值0.,att1 属性名1.,v1 属性值1.,att2 属性名2.,v2 属性值2.,&#x0A;返回:成功返回true，失败返回false.&#x0A;备注:只有装备由此属性.&#x0A;">
<param name="player_guid" />
<param name="item_guid" />
<param name="att0" />
<param name="v0" />
<param name="att1" />
<param name="v1" />
<param name="att2" />
<param name="v2" />
</overload>
</keyword>
<keyword name="SetDummyDefaultSkillAI" func="yes">
<overload  retval="bool" descr="&#x0A;设置假人的默认技能AI&#x0A;参数:job 职业 1、战士 2、法师 3、道士.,AI_table 欲设置的技能优先级.,&#x0A;返回:设置是否成功.&#x0A;备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本&#x0A;">
<param name="job" />
<param name="AI_table" />
</overload>
</keyword>
<keyword name="Item_IsBind" func="yes">
<overload  retval="bool" descr="&#x0A;根据物品GUID判断该物品是否绑定. &#x0A;参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="strItem" />
</overload>
</keyword>
<keyword name="Npc_ChangeName" func="yes">
<overload  retval="bool" descr="&#x0A;改变NPC的名字. &#x0A;参数:strNpc NPC的GUID.,strName NPC的Name.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strNpc" />
<param name="strName" />
</overload>
</keyword>
<keyword name="Item_GetRole" func="yes">
<overload  retval="string" descr="&#x0A;取得物品所在包裹的玩家GUID. &#x0A;参数:strItem 物品的GUID.,&#x0A;返回:拥有者的GUID,出错返回''.&#x0A;备注:如果物品不在包裹中则返回''.&#x0A;">
<param name="strItem" />
</overload>
</keyword>
<keyword name="left" func="yes">
<overload  retval="string" descr="&#x0A;从字符串的左边第n个位置复制m个长度的字符.&#x0A;参数:strString 字符串.,iLen 要复制的长度.,iOffset 字符串左起偏移长度.,&#x0A;返回:返回新字符串.&#x0A;备注:t_str=string.left(str, len, offset),从字符串str的左边第offset个位置复制len个长度的字符到目标串中，并返回目标串。比如:string.left(&ldquo;abcdef&rdquo;, 2, 1)，执行的结果就是&rdquo;bc&rdquo;。&#x0A;&#x0A;	复制的长度不能超过字符串长度-偏移长度&#x0A;">
<param name="strString" />
<param name="iLen" />
<param name="iOffset" />
</overload>
</keyword>
<keyword name="Player_IsGoldEnough" func="yes">
<overload  retval="bool" descr="&#x0A;判断角色的金币是否足够. &#x0A;参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,&#x0A;返回:是或否.&#x0A;">
<param name="strPlayer" />
<param name="iGold" />
<param name="bBind" />
</overload>
</keyword>
<keyword name="Player_ChangeAttackMode" func="yes">
<overload  retval="bool" descr="&#x0A;设置角色攻击模式. &#x0A;参数:strPlayer 玩家的GUID.,byMode 攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营.,&#x0A;返回:无.&#x0A;参考:Player_GetAttackMode,&#x0A;">
<param name="strPlayer" />
<param name="byMode" />
</overload>
</keyword>
<keyword name="AddSkill" func="yes">
<overload  retval="bool" descr="&#x0A;给角色添加技能. &#x0A;参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName.,&#x0A;返回:成功或失败.&#x0A;">
<param name="strRole" />
<param name="strSkillKey" />
</overload>
</keyword>
<keyword name="Random" func="yes">
<overload  retval="int32" descr="&#x0A;成生随机数. &#x0A;参数:iMin 最小值.,iMax 最大值.,&#x0A;返回:返回随机数iRnd,取值范围:(iMin &lt; iMax) (iMin &lt;= iRnd &lt;= iMax).&#x0A;">
<param name="iMin" />
<param name="iMax" />
</overload>
</keyword>
</autoc>
