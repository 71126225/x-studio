--[[  LUA脚本的关键字配置表  ]]--



--语法关键字
Lua_SyntaxWord=
{
	"and", 
	"break", 
	"do", 
	"else", 
	"elseif",
	"end", 
	"false",
	"for",
	"function",
	"if",
	"in",
	"local",
	"nil",
	"not",
	"or",
	"repeat",
	"return",
	"then",
	"true",
	"until",
	"while",
	"__index",
	"__newindex",
	"self",
	"lualib",
}


--保留函数关键字
Lua_GlobleFuncWord=
{
	"assert",
	"tostring",
	"tonumber",
	"rawget",
	"xpcall",
	"ipairs",
	"print",
	"pcall",
	"gcinfo",
	"module",
	"setfenv",
	"rawset",
	"error",
	"loadfile",
	"rawequal",
	"load",
	"unpack",
	"pairs",
	"require",
	"_VERSION",
	"newproxy",
	"collectgarbage",
	"dofile",
	"next",
	"loadstring",
	"select",
	"type",
	"getmetatable",
	"getfenv",
	"setmetatable"
}

--保留函数关键字
Lua_BaseLibFuncWord=
{
	table = 
	{
		"foreach", 
		"sort",
		"remove",
		"foreachi",
		"maxn",
		"getn",
		"setn",
		"concat",
		"insert"
	},
	string = 
	{
		"find",
		"lower",
		"format",
		"rep",
		"gsub",
		"len",
		"gmatch",
		"dump",
		"match",
		"reverse",
		"byte",
		"char",
		"upper",
		"gfind",
		"sub", 
		"trim", 
		"split", 
		"indexOf", 
		"left", 
		"right", 
		"mid", 
		"ord", 
		"chr", 
		"replace", 
	},
	package = 
	{
		"preload",
		"loadlib",
		"loaded",
		"loaders",
		"cpath",
		"config",
		"path",
		"seeall"
	},
	os = 
	{
		"exit",
		"setlocale",
		"date",
		"getenv",
		"difftime",
		"remove",
		"time",
		"clock",
		"tmpname",
		"rename",
		"execute"
	},
	io = 
	{
		"lines",
		"write",
		"close",
		"flush",
		"open",
		"output",
		"type",
		"read",
		"stderr",
		"stdin",
		"input",
		"stdout",
		"popen",
		"tmpfile"
	},
	debug = 
	{
		"getupvalue",
		"debug",
		"sethook",
		"getmetatable",
		"gethook",
		"setmetatable",
		"setlocal",
		"traceback",
		"setfenv",
		"getinfo",
		"setupvalue",
		"getlocal",
		"getregistry",
		"getfenv"
	},
	math = 
	{
		"log",
		"max",
		"acos",
		"huge",
		"ldexp",
		"pi",
		"cos",
		"tanh",
		"pow",
		"deg",
		"tan",
		"cosh",
		"sinh",
		"random",
		"randomseed",
		"frexp",
		"ceil",
		"floor",
		"rad",
		"abs",
		"sqrt",
		"modf",
		"asin",
		"min",
		"mod",
		"fmod",
		"log10",
		"atan2",
		"atan",
		"exp",
		"sin"
	},
	coroutine = 
	{
		"resume",
		"yield",
		"status",
		"wrap",
		"create",
		"running"
	},
	json = 
	{
		"encode", 
		"decode"
	},
	shentu =
	{
		"Print",
		"Debug",
		"Warn",
		"Error",
		"Time2Str",
		"GetAllDays",
		"GetAllWeeks",
		"GetAllMonths",
		"GetAllYears",
		"GetAllTime",
		"GetYear",
		"GetMonth",
		"GetDay",
		"GetWeek",
		"SetInt",
		"GetInt",
		"SetStr",
		"GetStr",
		"NotifyVar",
		"SysMsg_SendTopMsg",
		"SysMsg_SendCenterMsg",
		"SysMsg_SendBroadcastMsg",
		"SysMsg_SendRoleTalk",
		"SysMsg_SendGuildMsg",
		"SysMsg_SendMapMsg",
		"InputDlg",
		"MsgBox",
		"WebBox",
		"SysMsg_SendBroadcastColor",
		"SysMsg_SendBottomColor",
		"SysMsg_SendTopColor",
		"Name",
		"KeyName",
		"X",
		"Y",
		"Distance",
		"MapGuid",
		"AddBuff",
		"AddBuff2",
		"AddBuffEx",
		"DelBuff",
		"HasBuff",
		"Kill",
		"AddSkill",
		"HasSkill",
		"SetPanelSize",
		"SendRoleHPNtf",
		"Camp",
		"SetCamp",
		"Player_GetAccountID",
		"Player_GetServantCount",
		"Player_GetServantList",
		"Player_IsServantNear",
		"Player_GetAttackMode",
		"ItemCountByKey",
		"BagSize",
		"BagFree",
		"AccountName",
		"Ip",
		"Name2Guid",
		"GuildGuid",
		"ReliveMapGuid",
		"Player_GetGuildCtrb",
		"Player_ReCalGuildCtrb",
		"Player_GetTeamGuid",
		"Player_GetTeamList",
		"Player_GetCastleList",
		"BagItemList",
		"Player_HasTeam",
		"Player_IsTeamLeader",
		"Player_IsGuildLeader",
		"Player_IsViceGuildLeader",
		"Player_IsGM",
		"Player_ChangeAttackMode",
		"Player_AddGold",
		"Player_SubGold",
		"Player_IsGoldEnough",
		"Player_AddIngot",
		"Player_SubIngot",
		"Player_IsIngotEnough",
		"Player_AddExp",
		"Player_SubExp",
		"Player_AddIntegral",
		"Player_SubIntegral",
		"Player_IsIntegralEnough",
		"Player_Relive",
		"Player_JumpToRole",
		"Player_DragFromRole",
		"Player_FixEquip",
		"Player_FixSingleEquip",
		"AddItem",
		"DelItem",
		"DelItemEx",
		"ClearBag",
		"ApplyEquip",
		"ApplyEquipEx",
		"DisableEquip",
		"Player_MapMove",
		"Player_MapMoveXY",
		"ApplyItem",
		"ApplyItemXY",
		"ApplyItemTarget",
		"DropItem",
		"Player_RunScript",
		"Player_TeamRunScript",
		"Player_GuildRunScript",
		"Player_IsPlayer",
		"Player_GetItemGuid",
		"Player_GetExpLimit",
		"Player_GetAntiIndulge",
		"Player_SetForbidTalk",
		"Player_DisableForbidTalk",
		"Player_Kick",
		"Player_Catch",
		"Player_Summon",
		"Player_SetGhost",
		"Player_SetInvincible",
		"Player_RunGMCmd",
		"ProgressBarStart",
		"LoginTime",
		"OnlineTime",
		"OnlineTimeEx",
		"LastLogoutTime",
		"TotalTime",
		"GenTeam",
		"SetAutoReply",
		"DisableAutoReply",
		"SetOffline",
		"IsOffline",
		"HardwareCode",
		"DelayCall",
		"GiveItem",
		"GiveBindItem",
		"TakeItem",
		"TakeItemEx",
		"TakeOff",
		"TakeOffEx",
		"TakeOn",
		"TakeOnEx",
		"GiveOneItem",
		"GiveOneBindItem",
		"Monster_SetSeeker",
		"Monster_GetMaster",
		"MonsterKey2ID",
		"Monster_IsExist",
		"Monster_IsMonster",
		"Monster_IsDie",
		"Monster_Remove",
		"Monster_GetEscapePoint",
		"Monster_Escape",
		"Monster_SpellTarget",
		"Monster_GetAttackTarget",
		"Monster_SetAttackTarget",
		"Monster_GetSpecial",
		"Npc_Remove",
		"Npc_ChangeName",
		"Npc_IsExist",
		"AddShop",
		"OpenShop",
		"OpenWarehouse",
		"OpenWarehouseAdv",
		"NPCTalk",
		"NPCTalkEx",
		"NPCTalkDetail",
		"NPCTalkDetailEx",
		"Item_GetRole",
		"Item_GetType",
		"Item_GetSubType",
		"Item_GetSite",
		"Item_GetAmount",
		"Item_SetAmount",
		"Item_GetStack",
		"Item_GetDurability",
		"Item_GetMaxDurability",
		"Item_SetDurability",
		"Item_SetMaxDurability",
		"Item_GetRepairCharge",
		"Item_GetUsesCount",
		"Item_SetUsesCount",
		"Item_IsBind",
		"Item_SetBind",
		"Item_NotifyUpdate",
		"Equip_GetIdentifyNum",
		"Equip_GetIdentifyProp",
		"Equip_SetIdentifyProp",
		"Equip_GetRefineLevel",
		"Equip_SetRefineLevel",
		"Equip_GetRefineProp",
		"Equip_SetRefineProp",
		"Equip_GetLuckCurse",
		"Equip_SetLuckCurse",
		"Item_ChangeName",
		"Item_Destroy",
		"Equip_GetExtNum",
		"Equip_GetExtProp",
		"Equip_SetExtProp",
		"Equip_SetQualProp",
		"Equip_GetQualProp",
		"ItemsByType",
		"Item_GetLife",
		"Item_SetLife",
		"Item2Json",
		"Json2Item",
		"Json2ItemEx",
		"CanFixEquip",
		"Item_GetLevel",
		"Item_GetIcon",
		"ItemKey2ID",
		"Item_DataRow",
		"SendMail",
		"Map_GetMapGuid",
		"MapKey2ID",
		"Map_GetWidth",
		"Map_GetHeight",
		"Map_GetPlayerCount",
		"Map_GetMonsterCount",
		"Map_GetRegionPlayers",
		"Map_GetRegionMonsters",
		"Map_GetRegionItems",
		"Map_GenItem",
		"Map_GenItemRnd",
		"Map_BatchGenMonster",
		"Map_GenMonster",
		"Map_GenSingleMonster",
		"Map_GenNpc",
		"Map_GenNpcRnd",
		"Map_ClearMonster",
		"Map_ClearItem",
		"Map_ClearNpc",
		"Map_AddEffect",
		"Map_IsInGS",
		"Map_AddJumpPoint",
		"Map_DelJumpPoint",
		"Map_GetRegionNpcs",
		"Map_GetMapNpc",
		"Map_JumpXY",
		"Map_JumpRnd",
		"Map_CreateDgn",
		"Map_DestroyDgn",
		"Player_SetDgnTicket",
		"Player_HasDgnTicket",
		"Player_EnterDgn",
		"Player_GetDgnByTicket",
		"Map_ClearDgnPlayer",
		"Map_ClearDgnMonster",
		"Map_ClearDgnItem",
		"Map_ClearDgnNpc",
		"Map_IsDgnExist",
		"IsFamilyAlly",
		"IsInFamily",
		"HasFamilyWar",
		"GetRunningFamilyWar",
		"NotifyRunningFamilyWar",
		"CreateFamily",
		"GetAllFamilys",
		"GetFamilyJoinList",
		"GetFamilyName",
		"GetFamilyTitle",
		"StartFamilyWar",
		"GetAllCastle",
		"HasCastle",
		"IsCastleWarStart",
		"StartCastleWar",
		"StopCastleWar",
		"HasCastleWar",
		"GetCastleOwnFamily",
		"SetCastleOwnFamily",
		"GetCastleAttackFamily",
		"GetCastleTempFamily",
		"SetCastleTempFamily",
		"SetCastleCustomVarInt",
		"GetCastleCustomVarInt",
		"SetCastleCustomVarStr",
		"GetCastleCustomVarStr",
		"GetCastleMapGuid",
		"GetCastleBasiGuid",
		"AddTitle",
		"HasTitle",
		"RemoveTitle",
		"ApplyTitle",
		"CanAcceptQuest",
		"CanAccomplishQuest",
		"AcceptQuest",
		"AccomplishQuest",
		"HasQuest",
		"DropQuest",
		"ForceAcceptQuest",
		"ForceQuestReady",
		"QuestRemainCount",
		"GenEscorter",
		"GenTraveler",
		"IsEscorterDied",
		"RemoveEscorter",
		"GetEscorter",
		"AddScheduled",
		"DisableScheduled",
		"JoinCamp",
		"CampCount",
		"CampCounts",
		"CampInteg",
		"CampIntegs",
		"VerifyCampLevel",
		"VerifyCampCount",
		"IO_FileExists",
		"IO_FileCTime",
		"IO_FileMTime",
		"IO_CreateTextFile",
		"IO_EmptyTextFile",
		"IO_GetFileText",
		"IO_SetFileText",
		"IO_AppendFile",
		"IO_CheckTextInFile",
		"IO_TextFileDeleteLineStr",
		"IO_TextFileInsertLine",
		"IO_TextFileDeleteLine",
		"IO_TextFileGetLine",
		"IO_TextFileRndGetLine",
		"IO_TextFileCheckLine",
		"IO_DirExists",
		"IO_ForceDir",
		"IO_GetLuaPath",
		"IO_SetCustomVarInt",
		"IO_GetCustomVarInt",
		"IO_ClearCustomVarInt",
		"IO_SetCustomVarStr",
		"IO_GetCustomVarStr",
		"IO_ClearCustomVarStr",
		"on_item_appear",
		"on_leave_map",
		"on_enter_map",
		"on_monster_disappear",
		"on_monster_appear",
		"on_map_destroy",
		"on_map_create",
		"on_gp",
		"on_castle_war_init",
		"on_castle_war_end",
		"on_castle_war_start",
		"on_logout",
		"on_login",
		"on_first_in_game",
		"on_system_start",
		"AddTrigger",
		"HasTrigger",
		"RemoveTrigger",
		"ClearTrigger",
		"SetTriggerFilters",
		"AddTimerEx",
		"DisableTimer",
		"GSRunScript",
		"GSTriggerScript",
		"GenRandom",
		"GetConstVar",
		"ReloadConfig",
		"ReloadGMList",
		"ReloadScript",
		"StrSplit",
		"IsInCollection",
		"GetSvrId",
		"GetZoneId",
		"GetGroupId",
		"GetAgentId",
		"GetZoneName",
		"SkillKey2ID",
		"BuffKey2ID",
		"Mod",
		"GetAllPlayerCount",
		"RunClientScript",
		"MapRndPos",
		"GetTotalBill",
		"SetFbdLogin",
		"DisaFbdLogin",
		"IsBanString",
		"IsBanItem",
		"MonstersByKey",
		"GetURL",
		"Base64Encode",
		"Base64Decode",
		"UrlEncode",
		"UrlDecode",
		"GenUniqueID",
		"GetPlayerCount",
		"GetVipRemain",
		"GetVipLevelRemain",
		"GetVipLevel",
		"SetVipLevel",
		"ShowFormWithContent",
		"Str2Time",
		"SysMsg_SendWarnMsg",
		"SysWarnMsg",
		"SysMsg_SendPromptMsg",
		"SysPromptMsg",
		"SysMsg_SendTriggerMsg",
		"SysTriggerMsg",
		"SysMsg_SendInputDlg",
		"InputDlgEx",
		"SysMsg_SendMsgDlg",
		"SysMsg_SendWebMsg",
		"WebBoxEx",
		"SysMsg_SendWebPage",
		"WebBrowser",
		"Hp",
		"GUID",
		"Mp",
		"PhyAtk",
		"TaoAtk",
		"MagAtk",
		"on_item_disappear",
		"on_npc_appear",
		"on_npc_disappear",
		"on_level_up",
		"on_pre_equip",
		"on_post_equip",
		"on_pre_un_equip",
		"on_post_un_equip",
		"on_move",
		"on_pre_spell",
		"on_spell",
		"on_pre_mining",
		"on_mining",
		"on_pre_item_apply",
		"on_item_apply",
		"on_pre_item_pickup",
		"on_item_pickup",
		"on_pre_item_drop",
		"on_item_drop",
		"on_pre_die",
		"on_post_die",
		"on_kill",
		"on_attack",
		"on_damage_process",
		"on_restore_process",
		"on_teleport",
		"on_pre_catch",
		"on_catch",
		"on_pre_dig_meat",
		"on_add_buff",
		"on_remove_buff",
		"on_pre_drop",
		"on_post_drop",
		"on_pre_drop_one",
		"on_post_drop_one",
		"on_add_skill",
		"on_switch_skill",
		"on_summon",
		"on_pre_process_pk",
		"on_post_process_pk",
		"on_create",
		"on_destroy",
		"on_pre_enter_jump",
		"on_equip_suit",
		"on_un_equip_suit",
		"on_item_amount_zero",
		"on_item_use_zero",
		"on_item_dur_zero",
		"on_item_timeup",
		"on_add_exp",
		"on_player_relive",
		"on_dungeon_end",
		"SetDBNum",
		"GetDBNum",
		"SetDBStr",
		"GetDBStr",
		"SetDBNumEx",
		"SetDBStrEx",
		"GridAttr",
		"Player_SetServantLevel",
		"Player_IsAntiIndulge",
		"on_billin",
		"on_mall",
		"DelSkill",
		"DelAllSkill",
		"GenTimerId",
		"Map_BatchGenCampMonster",
		"Map_GenCampMonster",
		"Map_GenSingleCampMonster",
		"KickByName",
		"Achievement",
		"AddAvataBuff",
		"AddBindGold",
		"AddBindIngot",
		"AddExp",
		"AddGold",
		"AddIngot",
		"AddIntegral",
		"AddSingleItem",
		"AddTimer",
		"Amulet",
		"AntiIndulgeExpire",
		"Armor",
		"Attr",
		"Brawn",
		"ClearTimer",
		"CreateHeroForPlayer",
		"DeleteHeroForPlayer",
		"DelUnmatchedSkill",
		"DestroyDummy",
		"Dir",
		"Energy",
		"EquipWeight",
		"FindFirstBagFreeSlot",
		"Gem",
		"Gender",
		"GenDummy",
		"GenHeroForPlayer",
		"GetActiveCount",
		"GetActiveCountToday",
		"GetBagFree",
		"GetBagFreeEx",
		"GetBagSize",
		"GetBagSizeEx",
		"GetBindGold",
		"GetBindIngot",
		"GetBuffTime",
		"GetDayInt",
		"GetDayStr",
		"GetDynamicAttr",
		"GetExp",
		"GetFamilyCastles",
		"GetFamilyMembers",
		"GetGold",
		"GetIngot",
		"GetIntegral",
		"GetItemsByKeys",
		"GetLocalTime",
		"GetLuaPerformance",
		"GetPlayerCurrentHeroList",
		"GetPlayerHeroList",
		"GetQuestAccomplishing",
		"GetQuestProgressing",
		"GetTickCount",
		"GetTime",
		"GetTitle",
		"GetWeekInt",
		"GetWeekStr",
		"GMLevel",
		"God",
		"Hair",
		"HairColor",
		"HasFamily",
		"Head",
		"Helmet",
		"HpPoint",
		"IO_DeleteDir",
		"IO_DeleteFile",
		"IO_GetFileString",
		"IsAntiIndulge",
		"IsCastleWarNull",
		"IsInRegion",
		"Item_GetBySite",
		"Item_GetCustomVarInt",
		"Item_GetCustomVarStr",
		"Item_GetID",
		"Item_GetKeyName",
		"Item_GetName",
		"Item_GetPosX",
		"Item_GetPosY",
		"Item_IsTimeLimit",
		"Item_NotifyCustomParam",
		"Item_SetCustomVarInt",
		"Item_SetCustomVarStr",
		"ItemCount",
		"ItemCountEx",
		"ItemDropFreezeTime",
		"ItemDropHost",
		"ItemDropTime",
		"ItemDropType",
		"ItemKeyName",
		"ItemRole",
		"Job",
		"JuJu",
		"LastAtkTime",
		"LastMoveTime",
		"LastTalkTime",
		"LeaveTeam",
		"Level",
		"LockSwitch",
		"Log",
		"LogDetail",
		"LogDetailWithId",
		"LogWithId",
		"LuckCurse",
		"MagAtkPoint",
		"MagDef",
		"MagDefPoint",
		"Mail",
		"MailJsonItem",
		"MailToPlayer",
		"Map_GenGold",
		"Map_GenItemEx",
		"Map_GetCustomVarInt",
		"Map_GetCustomVarStr",
		"Map_GetDistance",
		"Map_GetGridObjList",
		"Map_GetMapKeyName",
		"Map_GetMapName",
		"Map_GetMapPlayers",
		"Map_RemoveMonster",
		"Map_RemoveNpc",
		"Map_SetCustomVarInt",
		"Map_SetCustomVarStr",
		"Map_SetOffTimer",
		"Map_SetOnTimer",
		"MapCanRide",
		"MapKeyName",
		"MD5",
		"Medal",
		"Meritor",
		"ModifyItemGold",
		"Monster_AddBuff",
		"Monster_DataRow",
		"Monster_DelBuff",
		"Monster_GetCurTarget",
		"Monster_GetCustomVarInt",
		"Monster_GetCustomVarStr",
		"Monster_GetDropOwner",
		"Monster_GetHateList",
		"Monster_GetIntProp",
		"Monster_GetKeyName",
		"Monster_GetMap",
		"Monster_GetPosX",
		"Monster_GetPosY",
		"Monster_IsHasBuff",
		"Monster_JumpXY",
		"Monster_Kill",
		"Monster_SetCustomVarInt",
		"Monster_SetCustomVarStr",
		"Monster_SetPanelSize",
		"Monster_SpellTargetEx",
		"Monster_Type",
		"Mount",
		"MpPoint",
		"Necklace",
		"Now",
		"Npc_GetCustomVar",
		"Npc_GetKeyName",
		"Npc_GetPosX",
		"Npc_GetPosY",
		"Npc_SetCustomVar",
		"Npc_SetPanelSize",
		"OnGloryTrigger",
		"PhyAtkPoint",
		"PhyDef",
		"PhyDefPoint",
		"Pk",
		"Player_AddBuff",
		"Player_AddSkill",
		"Player_ChangeGender",
		"Player_ChangeJob",
		"Player_ClearBag",
		"Player_DelBuff",
		"Player_DestroyItem",
		"Player_DestroyItemBind",
		"Player_DestroyItemUnbind",
		"Player_DropItem",
		"Player_DropItemEx",
		"Player_GetBagFree",
		"Player_GetBagItemList",
		"Player_GetBagSize",
		"Player_GetCustomVarInt",
		"Player_GetCustomVarStr",
		"Player_GetDir",
		"Player_GetDistance",
		"Player_GetEquipGuid",
		"Player_GetEquipName",
		"Player_GetGuid",
		"Player_GetGuidProp",
		"Player_GetIntProp",
		"Player_GetItemCount",
		"Player_GetItemCountBind",
		"Player_GetItemCountUnbind",
		"Player_GetPosX",
		"Player_GetPosY",
		"Player_GetStrProp",
		"Player_GetTimeProp",
		"Player_GetWarehouseFree",
		"Player_GetWarehouseItemCount",
		"Player_GetWarehouseItemCountBind",
		"Player_GetWarehouseItemCountUnbind",
		"Player_GetWarehouseSize",
		"Player_GiveItemBind",
		"Player_GiveItemUnbind",
		"Player_GiveSingleItem",
		"Player_GoHome",
		"Player_IsCanAttack",
		"Player_IsCanMove",
		"Player_IsCanNpcTalk",
		"Player_IsCanSpell",
		"Player_IsCanTalk",
		"Player_IsCanTurn",
		"Player_IsCanUseItem",
		"Player_IsDie",
		"Player_IsHasBuff",
		"Player_IsHasSkill",
		"Player_IsInGS",
		"Player_IsOnline",
		"Player_ItemRequest",
		"Player_Kill",
		"Player_KillServant",
		"Player_NotifyCustomParam",
		"Player_NpcMove",
		"Player_SetAlias",
		"Player_SetCustomVarInt",
		"Player_SetCustomVarStr",
		"Player_SetIntProp",
		"Player_UseItem",
		"Player_UseItemByID",
		"PostDBEvt",
		"PostURL",
		"Prestige",
		"Random",
		"RemainPoint",
		"Ride",
		"Ring",
		"ScriptFuncToPlayer",
		"ScriptTextToPlayer",
		"SetAchievement",
		"SetAutoOpt",
		"SetBrawn",
		"SetDayInt",
		"SetDayStr",
		"SetDir",
		"SetDynamicAttr",
		"SetEnergy",
		"SetEquipWeight",
		"SetGender",
		"SetHair",
		"SetHairColor",
		"SetHead",
		"SetHeroState",
		"SetHp",
		"SetHpPoint",
		"SetJob",
		"SetLevel",
		"SetLockSwitch",
		"SetLuckCurse",
		"SetMagAtk",
		"SetMagAtkPoint",
		"SetMagDef",
		"SetMagDefPoint",
		"SetMeritor",
		"SetMp",
		"SetMpPoint",
		"SetNetCheck",
		"SetPhyAtk",
		"SetPhyAtkPoint",
		"SetPhyDef",
		"SetPhyDefPoint",
		"SetPk",
		"SetPrestige",
		"SetRemainPoint",
		"SetTaoAtk",
		"SetTaoAtkPoint",
		"SetWeekInt",
		"SetWeekStr",
		"SetWeight",
		"Shoes",
		"Shoulder",
		"ShowForm",
		"StartAutoRun",
		"StartCastleWarEx",
		"StartStall",
		"StopAutoRun",
		"StopStall",
		"SubBindGold",
		"SubBindIngot",
		"SubExp",
		"SubGold",
		"SubIngot",
		"SubIntegral",
		"SysCenterMsg",
		"SysGuildMsg",
		"SysMapMsg",
		"SysMsg_SendBoardMsg",
		"SysMsg_SendTipsMsg",
		"SysRoleTalk",
		"SysTipsMsg",
		"SysTopMsg",
		"TaoAtkPoint",
		"TimeDiff",
		"TitleName",
		"ToAttrName",
		"UnRide",
		"UserID",
		"VarList",
		"Weapon",
		"Weight",
		"Wings",
		"Wrist",
		"GetDeposit",
		"GUIDType",
		"ModifyCastleAttacks",
		"ModifyCastleStart",
		"QueryCastleStart",
		"AddDeposit",
		"SubDeposit",
		"SetFormAllowFunc",
		"GetRegionFree",
		"NotifyCSChannelMsg",
		"GetRegionFreeRnd",
		"on_add_exp_all",
		"on_attack_ex",
		"on_dig_meat",
		"on_monster_born",
		"on_pre_logout",
		"on_pre_mall",
		"on_ride_request",
		"on_system_stop",
		"on_timer_check",
		"on_unride_request",
		"post_die",
		"post_monster_die",
		"post_player_die",
		"post_process_pk",
		"pre_die",
		"pre_monster_die",
		"pre_player_die",
		"pre_player_relive",
		"pre_process_pk",
		"AllServantBetry",
		"GetRegionFreeEx",
		"GetRegionFreeRndEx",
		"GetTempInt",
		"GetTempStr",
		"HasItem",
		"InAdvWarehouse",
		"InBag",
		"InEquip",
		"InWarehouse",
		"Map_GetRegionItemsEx",
		"Map_GetRegionMonstersEx",
		"Map_GetRegionNpcsEx",
		"Map_GetRegionPlayersEx",
		"MoveItem",
		"SendSpeakerMsg",
		"ServantBetry",
		"SetTempInt",
		"SetTempStr",
		"eRoleAttr",
		"eRoleSite",
		"eTriggerType",
		"GetItemGold",
		"SetDummyDefaultSkillAI",
		"SetDummySkillAI",
		"GetZoneKey",
		"SetLog",
		"on_escorter_fail",
		"on_escorter_far",
		"GetCurScriptName",
		"GetSvrRunTime",
		"SetDBMerge",
		"SetScriptTimeout",
		"Player_SetNameColor",
		"AddTitleEx",
		"GetHeroRage",
		"MapOwnerFamily",
		"Player_GetServantLevel",
		"SetHeroRage",
		"on_monster_in_fight",
		"on_monster_out_fight",
		"on_post_monster_die",
		"on_post_player_die",
		"on_pre_monster_die",
		"on_pre_player_die",
		"on_pre_player_relive",
		"Item_IsExist",
		"Item_MapRemove",
		"Map_GetRegionDummys",
		"SetDummyAIOption",
		"SetDummyDefaultAIOption",
		"Str2Zip",
		"Zip2Str",
		"GetHeroLord",
		"Monster_ClearHateList",
		"Monster_SetHateList",
		"on_pre_curse",
		"on_pre_harm",
		"GetGroupName",
		"HasZhenshi",
		"RoleRankTop",
		"on_apply_buff",
		"SetNetCheckEx",
		"on_npc_buy",
		"on_pre_npc_buy",
		"GetPlayerUUID",
		"UUIDToGUID",
		"GetCurrentHero",
		"ShowRoleHPRef",
		"GetFamilyByName",
		"Map_GetRegionMonstersCount",
		"IsBagLock",
		"SetBagLock",
		"SetFamilyMaxMember",
		"CopyHero",
		"Player_SpellGrid",
		"Player_SpellTarget",
		"SysSpeakMsg",
		"GetFamilyLeader",
		"GetFamilyMembersByTitleId",
		"GetBuffAtt1",
		"GetHeroCopyNum",
		"IsHeroCopy",
		"ShowRoleHPRefEx",
		"FlushPlayerData",
		"GetCopyWho",
		"KillEx",
		"SetDummyState",
		"HasTimer",
		"GetJoinHitTarget",
		"CancelStall",
		"LoadPlayer",
		"on_hack_check",
		"on_pre_stall",
		"AddFamilyMember",
		"ChangeFamilyTitle",
		"DelFamilyMember",
		"Player_SpellPosX",
		"Player_SpellPosY",
		"on_auto_add_gold",
		"GetClientVer",
		"Map_AddJumpPointEx",
		"on_hack_check2",
		"GetSkillExp",
		"SetSkillExp",
		"on_fang_chen_mi",
		"SetServantMasterName",
		"Guid2Id",
		"Id2KeyName",
		"KeyName2Id",
		"KeyName2Name",
		"Player_SetAttackModeLock",
		"on_family_member_ntf",
		"Guid2Name",
		"DummyLockTarget",
		"DummyMove",
		"GetBuffList",
		"LastKeepPkgTime",
		"GetFamilyMemberAttr",
		"Player_AddEffect",
		"LoadPlayerEx",
		"on_pre_stall_buy",
		"TeamInvite",
		"NPCTalkDetailQuest",
		"Player_IsAttackModeLock",
		"GetGSClientVer",
		"GetClientVerEx",
		"RequestClientVer",
		"IO_TextFileTotalLine",
		"Player_CatchEx",
		"on_family_ntf",
		"CanAttack",
		"SetIsBrust",
		"IO_FileList",
		"IO_FileSize",
		"on_item_dur_zero_ex",
		"on_post_dummy_die",
		"on_pre_dummy_die",
		"GetEquipSuitCount",
		"on_item_attr_zero",
		"SetServantPickItem",
		"SetServantPickList",
		"GetClientType",
		"on_pre_attacker_harm",
		"on_pre_level_up",
		"GetServantState",
		"SetServantState",
		"GetClientCheckInfo",
		"Guid2Number",
		"Number2Guid",
		"number_arithmetic",
		"number_logic",
		"GetGSVer",
		"SetMD5CheckList",
		"SetClientDelay",
		"GetBindGoldStr",
		"GetExpStr",
		"GetGoldStr",
		"Player_AddExpStr",
		"Player_AddGoldStr",
		"Player_IsGoldStrEnough",
		"Player_SubExpStr",
		"Player_SubGoldStr",
		"on_pre_invite_family",
		"on_pre_join_family",
		"pre_add_gray",
		"on_pre_relate_family",
		"StartMigrate",
		"Npc_GetBindQuests",
		"Map_IsDgn",
		"AllItemList",
		"AddBagSite",
		"GetQuestGroupHuntingsCount",
		"SetFamilyRelation",
		"SetQuestGroupHuntingsCount",
		"OpenShopEx",
		"OpenWarehouseAdvEx",
		"OpenWarehouseEx",
		"on_billinex",
		"DelItemsBatch",
		"GetAllPlayerNames",
		"GetMonsterDropOwner",
		"Monster_SetAttackType",
		"Player_ChangeName",
		"on_player_change_name",
		"on_sub_ingot",
		"Player_AddInnerForceExp",
		"Player_DisableForbidTalkType",
		"Player_SetAntiIndulge",
		"Player_SetForbidTalkType",
		"Player_SubInnerForceExp",
		"SubIngotEx",
		"on_captcha_result",
		"on_servant_betry",
		"GetPlayerGloryState",
		"MailEx",
		"MailJsonItemEx",
		"MailToPlayerEx",
		"SendCaptchaReq",
		"GetPlatformInfo",
		"Player_GetAllTitles",
		"SendRoleInnerForceNtf",
		"GetAllDBVars",
		"GetAllTimeMs",
		"SysMsg_SendBroadcastColorByClientType",
		"SysMsg_SendCenterMsgByClientType",
		"SysMsg_SendTopColorByClientType",
		"GBKToUTF8",
		"UTF8ToGBK",
		"on_pre_market_delegate_sell",
		"on_pre_p2p_trade",
		"SetItemDropFreezeTime",

	}
}

--LUA基本库函数提示, 提示不要用逗号、要用<、>
Lua_BaseLibFuncTip = 
{
	-- concat="table.concat(table [,sep [,i[,j]]])\n\n连接表内成员 可以指定 i j  可以使用负索引  sep 可选",
	-- insert="table.insert(table, [pos,] value)\n\n插入成员到指定pos  默认:pos为 #table+1",
	-- assert="assert(v [, message])\n如果 <v> 为 nil 或者 false ,则抛出错误<message>,否则 返回 <v>:error if v nil or false, otherwise returns v",
	-- arshift="bit.arshift(x, n)\narithmetic right-shift",
	-- band="bit.band(x1 [,x2...])\n位与\nbitwise 'and' of arguments",
	-- bnot="bit.bnot(x)\n取反\nbitwise 'not' of argument",
	-- bor="bit.bor(x1 [,x2...])\n位或\nbitwise 'or' of arguments",
	-- bswap="bit.bswap(x)\n交换高低位\nswaps the bytes of the argument (32-bit little-endian/big-endian)",
	-- bxor="bit.bxor(x1 [,x2...])\n位异或\nbitwise 'xor' of arguments",
	-- lshift="bit.lshift(x, n)\n左移\nlogical left-shift",
	-- rol="bit.rol(x, n)\nbitwise left rotation",
	-- ror="bit.ror(x, n)\nbitwise right rotation",
	-- rshift="bit.rshift(x, n)\n右移\nlogical right-shift",
	-- tohex="bit.tohex(x [,n])\n转换为16进制字符串 n为限制字符串长度\nConverts its first argument to a hex string",
	Print="void  Print(string  strMsg)\n打印信息日志. \n参数:strMsg 日志内容.,\n返回:无返回值.\n备注:若非必要,不要打印日志.\n警告:大量记录日志会对服务器性能带来些许影响.\n参考:Print,Debug,Warn,Error,\n",
	Debug="void  Debug(string  strMsg)\n打印调试日志. \n参数:strMsg 日志内容.,\n返回:无返回值.\n备注:若非必要,不要打印日志.\n警告:大量记录日志会对服务器性能带来些许影响.\n参考:Print,Debug,Warn,Error,\n",
	Warn="void  Warn(string  strMsg)\n打印警告日志. \n参数:strMsg 日志内容.,\n返回:无返回值.\n备注:若非必要,不要打印日志.\n警告:大量记录日志会对服务器性能带来些许影响.\n参考:Print,Debug,Warn,Error,\n",
	Error="void  Error(string  strMsg)\n打印错误日志. \n参数:strMsg 日志内容.,\n返回:无返回值.\n备注:若非必要,不要打印日志.\n警告:大量记录日志会对服务器性能带来些许影响.\n参考:Print,Debug,Warn,Error,\n",
	Time2Str="string  Time2Str(string  strFmt,uint32  dwTimes)\n将数值型时间转换成字符串时间. \n参数:strFmt 时间格式:Y-m-d H:M:S或Y-m-d.,dwTimes 时间值,单位:秒.,\n返回:字符串时间.\n",
	GetAllDays="uint32  GetAllDays(uint32  dwTimes)\n取得1970年1月1日0时0分0到现在经过的天数. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:天数.\n",
	GetAllWeeks="uint32  GetAllWeeks(uint32  dwTimes)\n取得1970年1月1日0时0分0到现在经过的周数. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:周数.\n",
	GetAllMonths="uint32  GetAllMonths(uint32  dwTimes)\n取得1970年1月1日0时0分0到现在经过的月数. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:月数.\n",
	GetAllYears="uint32  GetAllYears(uint32  dwTimes)\n取得1970年1月1日0时0分0到现在经过的年数. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:年数.\n",
	GetAllTime="uint32  GetAllTime(void  )\n取得1970年1月1日0时0分0到现在经过的秒数. \n参数: ,\n返回:秒数.\n",
	GetYear="uint32  GetYear(uint32  dwTimes)\n取得指定时间值的年. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:年,范围:[1900 - ~].\n",
	GetMonth="uint32  GetMonth(uint32  dwTimes)\n取得指定时间值的月. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:月,范围: [1 - 12].\n",
	GetDay="uint32  GetDay(uint32  dwTimes)\n取得指定时间值的天. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:天,范围: [1 - 31].\n",
	GetWeek="uint32  GetWeek(uint32  dwTimes)\n取得指定时间值的周. \n参数:dwTimes 时间值,单位:秒.0 = 现在时间.,\n返回:周,范围: [0 - 6].\n",
	SetInt="bool  SetInt(string  strObject,string  strKey,int32  iValue)\n在对象实体上存储整型数值变量. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,iValue 变量值.,\n返回:成功或失败.\n备注:GUID = ''或GUID = '0'则为系统GUID.GUID为玩家、英雄、物品、行会的变量会永久保存，其他对象上的变量重启服务器消失\n",
	GetInt="int32  GetInt(string  strObject,string  strKey)\n取得对象实体上存储的整型数值变量. \n参数:strObject 对象的GUID,可以是玩家、英雄、怪物、NPC、物品、地图、系统、行会.,strKey 变量名,变量名不能以'__'开头(系统用).,\n返回:变量的值,如果变量不存在返回0.\n备注:GUID = ''或GUID = '0'则为系统GUID.\n",
	SetStr="bool  SetStr(string  strObject,string  strKey,string  strValue)\n在对象实体上存储字符型变量. \n参数:strObject 对象的GUID,可以是玩家、英雄、怪物、NPC、物品、地图、系统、行会.,strKey 变量名,变量名不能以'__'开头(系统用).,strValue 变量值.,\n返回:成功或失败.\n备注:GUID = ''或GUID = '0'则为系统GUID. GUID为玩家、英雄、物品、行会的变量会永久保存，其他对象上的变量重启服务器消失\n",
	GetStr="string  GetStr(string  strObject,string  strKey)\n取得对象实体上存储的字符型变量. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品、地图、系统.,strKey 变量名,变量名不能以'__'开头(系统用).,\n返回:变量的值,如果变量不存在返回''.\n备注:GUID = ''或GUID = '0'则为系统GUID.\n",
	NotifyVar="void  NotifyVar(string  strObject,string  strKey)\n向客户端发送变量通知. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,strKey 变量名.,\n返回:无返回值.\n",
	SysMsg_SendTopMsg="void  SysMsg_SendTopMsg(uint8  byCount,string  strMsg)\n发送客户端顶部消息. \n参数:byCount 消息滚动次数.,strMsg 消息内容.,\n返回:无返回值.\n",
	SysMsg_SendCenterMsg="void  SysMsg_SendCenterMsg(uint8  byType,string  strMsg,string  strPlayer)\n发送客户端中部消息. \n参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,\n返回:无返回值.\n",
	SysMsg_SendBroadcastMsg="void  SysMsg_SendBroadcastMsg(string  strMsg,string  strName)\n发送客户端底部广播消息. \n参数:strMsg 消息内容.,strName 广播标题.,\n返回:无返回值.\n",
	SysMsg_SendRoleTalk="bool  SysMsg_SendRoleTalk(string  strRole,string  strMsg)\n发送角色当前说话通知. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendGuildMsg="bool  SysMsg_SendGuildMsg(string  strFamily,string  strMsg)\n发送客户端底部公会消息. \n参数:strFamily 行会的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendMapMsg="bool  SysMsg_SendMapMsg(string  strMap,string  strMsg)\n发送客户端底部地图消息. \n参数:strMap 地图的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	InputDlg="bool  InputDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,uint8  byMaxLen,string  strCallBack,string  strParam)\n通知客户端显示输入框. \n参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,byMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,\n返回:成功或失败.\n",
	MsgBox="void  MsgBox(string  strPlayer,string  strContent)\n通知客户端显示消息框. \n参数:strPlayer 玩家的GUID.,strContent 消息框内容.,\n返回:无返回值.\n",
	WebBox="bool  WebBox(string  player,string  url)\n发送显示Web页面框通知\n参数:player 玩家的GUID,url 弹出的IE框所使用的URL地址,\n返回:忽略\n",
	SysMsg_SendBroadcastColor="void  SysMsg_SendBroadcastColor(string  strMsg,string  strName,int32  iForeground,int32  iBackground)\n发送客户端底部广播消息. \n参数:strMsg 消息内容.,strName 广播标题.,iForeground 前景颜色.,iBackground 背景颜色.,\n返回:无返回值.\n备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.\n",
	SysMsg_SendBottomColor="void  SysMsg_SendBottomColor(string  strPlayer,string  strMsg,int32  iForeground,int32  iBackground)\n发送客户端底部消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,\n返回:无返回值.\n备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.\n",
	SysMsg_SendTopColor="void  SysMsg_SendTopColor(uint8  byCount,string  strMsg,int32  iForeground,int32  iBackground)\n发送客户端顶部广播消息. \n参数:byCount 消息滚动次数.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,\n返回:无返回值.\n备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.\n",
	Name="string  Name(string  strObject)\n根据GUID取得Name. \n参数:strObject 对象的GUID.,\n返回:对象的Name,如果对象不存在返回''.\n参考:KeyName,Name,\n",
	KeyName="string  KeyName(string  strObject)\n根据GUID取得KeyName. \n参数:strObject 对象的GUID.,\n返回:对象的KeyName,如果对象不存在返回''.\n备注:如果对象是玩家则返回玩家的名字.\n参考:KeyName,Name,\n",
	X="uint16  X(string  strObject)\n取得对象的X坐标. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,\n返回:X坐标.\n参考:X,Y,\n",
	Y="uint16  Y(string  strObject)\n取得对象的Y坐标. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,\n返回:Y坐标.\n参考:X,Y,\n",
	Distance="uint16  Distance(string  strObject1,string  strObject2)\n取得对象间的距离. \n参数:strObject1 对象的GUID,可以是玩家、怪物、NPC、物品.,strObject2 对象的GUID,可以是玩家、怪物、NPC、物品.,\n返回:返回对象间的距离,如果对象不存在或不在同一张地图上返回65535.\n",
	MapGuid="string  MapGuid(string  strObject)\n取得对象当前地图的GUID. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品.,\n返回:对象当前地图的GUID,出错返回''.\n",
	AddBuff="bool  AddBuff(string  strRole,string  strBuffKey,uint32  dwTimes)\n给角色添加BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,\n返回:成功或失败.\n警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.\n",
	AddBuff2="bool  AddBuff2(string  strRole,string  strHost,string  strBuffKey,string  strSkillKey,uint32  dwTimes,int32  iAttr1)\n给角色添加BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strHost 对象的BUFF,代表BUFF由谁添加的.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写.,\n返回:成功或失败.\n警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.\n",
	AddBuffEx="bool  AddBuffEx(string  strRole,string  strBuffKey,uint32  dwTimes,int  iAttr1)\n给角色添加BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,iAttr1 BUFF的实例属性1,该属性可以由脚本改写.其它属性直接从配置中读取,脚本无法改写.,\n返回:成功或失败.\n警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.\n",
	DelBuff="bool  DelBuff(string  strRole,string  strBuffKey)\n删除角色BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,\n返回:成功或失败.\n",
	HasBuff="bool  HasBuff(string  strRole,string  strBuffKey)\n判断角色是否拥有BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,\n返回:成功或失败.\n",
	Kill="bool  Kill(string  strRole)\n立即杀死角色. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:成功或失败.\n",
	AddSkill="bool  AddSkill(string  strRole,string  strSkillKey)\n给角色添加技能. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName.,\n返回:成功或失败.\n",
	HasSkill="bool  HasSkill(string  strRole,string  strSkillKey,bool  bLinkage)\n判断角色是否拥有技能. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strSkillKey 技能的KeyName.,bLinkage 是否判断技能链.,\n返回:成功或失败.\n",
	SetPanelSize="bool  SetPanelSize(string  strRole,uint16  wWidth,uint16  wHeight)\n设置角色NPC面板的size. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,wWidth 面板的宽度.,wHeight 面板的高度.,\n返回:成功或失败.\n",
	SendRoleHPNtf="bool  SendRoleHPNtf(string  strRole)\n向周围通知角色血量\n参数:strRole 角色GUID,角色只能是玩家或怪物.,\n返回:成功或失败.\n",
	Camp="int32  Camp(string  strRole)\n取得角色的阵营. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:阵营.\n参考:Camp,SetCamp,\n",
	SetCamp="void  SetCamp(string  strRole,int32  iValue)\n设置角色的阵营. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 阵营值.,\n返回:无返回值.\n参考:Camp,SetCamp,\n",
	Player_GetAccountID="uint32  Player_GetAccountID(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家的帐号ID. \n参数:strPlayer 玩家的GUID.,\n返回:帐号ID,出错返回0.\n警告:早期接口,不再提供技术支持.\n参考:UserID,\n",
	Player_GetServantCount="int32  Player_GetServantCount(string  strPlayer)\n取得玩家的随从的数量. \n参数:strPlayer 玩家的GUID.,\n返回:随从的数量.\n",
	Player_GetServantList="table  Player_GetServantList(string  strPlayer)\n取得玩家的随从的GUID列表. \n参数:strPlayer 玩家的GUID.,\n返回:随从的GUID列表,返回lua table.\n",
	Player_IsServantNear="bool  Player_IsServantNear(string  strPlayer,string  strMonster)\n判断玩家的随从是不是在附近. \n参数:strPlayer 玩家的GUID.,strMonster 随从的GUID.,\n返回:是否在附近.\n警告:附近是指主人和随从在同一GS上,不是指地理位置上的附近.\n",
	Player_GetAttackMode="int32  Player_GetAttackMode(string  strPlayer)\n取得玩家的攻击模式. \n参数:strPlayer 玩家的GUID.,\n返回:出错返回-1.攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营.\n",
	ItemCountByKey="int32  ItemCountByKey(string  strPlayer,string  strItemKey,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,uint8  bBindType)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	BagSize="int32  BagSize(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse)\n取得玩家包裹大小. \n参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,\n返回:包裹大小,出错返回-1.\n参考:GetBagSize,GetBagSizeEx,BagSize,\n",
	BagFree="int32  BagFree(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse)\n取得玩家包裹空格子数量. \n参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,\n返回:包裹空格子数,出错返回-1.\n参考:GetBagFree,GetBagFreeEx,BagFree,\n",
	AccountName="string  AccountName(string  strPlayer)\n取得玩家的帐号名. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的帐号名,如果玩家不存在返回''.\n",
	Ip="string  Ip(string  strPlayer)\n取得玩家的IP字符串. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的IP字符串,如果玩家不存在返回''.\n",
	Name2Guid="string  Name2Guid(string  strPlayerName)\n根据玩家的Name找到该玩家. \n参数:strPlayerName 玩家的Name.,\n返回:玩家的GUID,如果玩家不存在返回''.\n警告:玩家如果不在线就找不到.\n",
	GuildGuid="string  GuildGuid(string  strPlayer)\n取得玩家所属行会的GUID. \n参数:strPlayer 玩家的GUID.,\n返回:玩家行会的GUID,出错返回''.\n",
	ReliveMapGuid="string  ReliveMapGuid(string  strPlayer)\n取得玩家复活地图的GUID. \n参数:strPlayer 玩家的GUID.,\n返回:对象复活地图的GUID,出错返回''.\n",
	Player_GetGuildCtrb="uint32  Player_GetGuildCtrb(string  strPlayer)\n取得玩家的行会贡献度. \n参数:strPlayer 玩家的GUID.,\n返回:行会贡献度,出错返回0.\n",
	Player_ReCalGuildCtrb="bool  Player_ReCalGuildCtrb(string  strPlayer,int32  iValue)\n调整玩家的行会贡献度. \n参数:strPlayer 玩家的GUID.,iValue 大于0时在原有的贡献度上追加,小于0时在原有贡献度上扣除.,\n返回:成功或失败.\n",
	Player_GetTeamGuid="string  Player_GetTeamGuid(string  strPlayer)\n取得玩家队伍的GUID. \n参数:strPlayer 玩家的GUID.,\n返回:玩家队伍的GUID.\n",
	Player_GetTeamList="table  Player_GetTeamList(string  strPlayer)\n取得玩家所有队友的GUID. \n参数:strPlayer 玩家的GUID.,\n返回:玩家队友的GUID列表,返回lua table.\n",
	Player_GetCastleList="table  Player_GetCastleList(string  strPlayer)\n取得玩家所属行会占领的所有城堡列表. \n参数:strPlayer 玩家的GUID.,\n返回:玩家队伍的GUID.\n",
	BagItemList="table  BagItemList(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse)\n取得玩家包裹所有物品的GUID列表. \n参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,\n返回:包裹所有物品的GUID列表,返回lua table.\n",
	Player_HasTeam="bool  Player_HasTeam(string  strPlayer)\n判断玩家是否组队. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsTeamLeader="bool  Player_IsTeamLeader(string  strPlayer)\n判断玩家是否队长. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsGuildLeader="bool  Player_IsGuildLeader(string  strPlayer)\n判断玩家是否会长. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsViceGuildLeader="bool  Player_IsViceGuildLeader(string  strPlayer)\n判断玩家是否副会长. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsGM="bool  Player_IsGM(string  strPlayer)\n判断玩家是否GM. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_ChangeAttackMode="bool  Player_ChangeAttackMode(string  strPlayer,uint8  byMode)\n设置角色攻击模式. \n参数:strPlayer 玩家的GUID.,byMode 攻击模式, 0 = 全体 1 = 和平 2 = 编组 3 = 行会 4 = 善恶 5 = 联盟 6 = 阵营.,\n返回:无.\n参考:Player_GetAttackMode,\n",
	Player_AddGold="bool  Player_AddGold(string  strPlayer,int32  iGold,bool  bBind,string  strDesc,string  strTarget)\n添加角色金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddGold,AddBindGold,\n",
	Player_SubGold="bool  Player_SubGold(string  strPlayer,int32  iGold,bool  bBind,string  strDesc,string  strTarget)\n扣除角色金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubGold,SubBindGold,\n",
	Player_IsGoldEnough="bool  Player_IsGoldEnough(string  strPlayer,int32  iGold,bool  bBind)\n判断角色的金币是否足够. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,bBind 是否绑定.,\n返回:是或否.\n",
	Player_AddIngot="bool  Player_AddIngot(string  strPlayer,int32  iIngot,bool  bBind,string  strDesc,string  strTarget)\n添加角色元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_SubIngot="bool  Player_SubIngot(string  strPlayer,int32  iIngot,bool  bBind,string  strDesc,string  strTarget)\n扣除角色元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_IsIngotEnough="bool  Player_IsIngotEnough(string  strPlayer,int32  iIngot,bool  bBind)\n判断角色的元宝是否足够. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,bBind 是否绑定.,\n返回:是或否.\n",
	Player_AddExp="bool  Player_AddExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n添加角色经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_SubExp="bool  Player_SubExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n扣除角色经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_AddIntegral="bool  Player_AddIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget)\n添加角色积分. \n参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_SubIntegral="bool  Player_SubIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget)\n扣除角色积分. \n参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_IsIntegralEnough="bool  Player_IsIntegralEnough(string  strPlayer,int32  iIntegral)\n判断角色的积分是否足够. \n参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,\n返回:是或否.\n",
	Player_Relive="bool  Player_Relive(string  strPlayer,string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint16  wHPPCT)\n让玩家复活. \n参数:strPlayer 玩家的GUID.,strMap 复活地图GUID.,wX 复活坐标X.,wY 复活坐标Y.,wRange 复活范围.,wHPPCT 复活时的血量百分比.,\n返回:成功或失败.\n",
	Player_JumpToRole="bool  Player_JumpToRole(string  strPlayer,string  strDestPlayerName)\n跳转到目标玩家面前. \n参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字.,\n返回:成功或失败.\n",
	Player_DragFromRole="bool  Player_DragFromRole(string  strPlayer,string  strDestPlayerName)\n将目标玩家拉到自己面前. \n参数:strPlayer 玩家的GUID.,strDestPlayerName 目标玩家的名字.,\n返回:成功或失败.\n",
	Player_FixEquip="bool  Player_FixEquip(string  strPlayer,bool  bAdv)\n修理玩家所有装备. \n参数:strPlayer 玩家的GUID.,bAdv 是否特修.,\n返回:成功或失败.\n",
	Player_FixSingleEquip="bool  Player_FixSingleEquip(string  strPlayer,string  strItem,bool  bAdv)\n修理玩家指定装备. \n参数:strPlayer 玩家的GUID.,strItem 装备的GUID.,bAdv 是否特修.,\n返回:成功或失败.\n",
	AddItem="bool  AddItem(string  strPlayer,string  strItemKey,int32  wCount,bool  bBind,string  strDesc,string  strTarget)\n给予玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,bBind 绑定类型,false = 不绑定 true = 绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	DelItem="bool  DelItem(string  strPlayer,string  strItemKey,int32  iCount,uint8  bBind,string  strDesc,string  strTarget)\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	DelItemEx="bool  DelItemEx(string  strPlayer,string  strItemKey,int32  wCount,uint8  bBind,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget)\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	ClearBag="bool  ClearBag(string  strPlayer,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget)\n清空玩家包裹. \n参数:strPlayer 玩家的GUID.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	ApplyEquip="bool  ApplyEquip(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n让玩家穿装备. \n参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,\n返回:成功或失败.\n警告:过期接口,不应再使用.\n",
	ApplyEquipEx="bool  ApplyEquipEx(string  strPlayer,string  strItemKey)\n让玩家穿装备. \n参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,\n返回:成功或失败.\n",
	DisableEquip="bool  DisableEquip(string  strPlayer,string  strItemKey)\n让玩家脱装备. \n参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,\n返回:成功或失败.\n",
	Player_MapMove="bool  Player_MapMove(string  strPlayer,string  strMapKey)\n让玩家跳转到指定地图随机坐标. \n参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳.,\n返回:成功或失败.\n警告:该接口是异步的,接口返回时玩家还没有切换地图.\n",
	Player_MapMoveXY="bool  Player_MapMoveXY(string  strPlayer,string  strMapKey,uint16  wX,uint16  wY,uint16  wRange)\n让玩家跳转到指定地图指定坐标. \n参数:strPlayer 玩家的GUID.,strMapKey 地图的KeyName,如果KeyName == '',则在玩家当前地图跳.,wX 地图的X坐标.,wY 地图的Y坐标.,wRange 坐标范围.,\n返回:成功或失败.\n警告:该接口是异步的,接口返回时玩家还没有切换地图.\n",
	ApplyItem="bool  ApplyItem(string  strPlayer,string  strItemInfo,bool  bInstance)\n让玩家使用道具. \n参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,\n返回:成功或失败.\n",
	ApplyItemXY="bool  ApplyItemXY(string  strPlayer,string  strItemInfo,bool  bInstance,uint16  wX,uint16  wY)\n让玩家对附近某坐标使用道具. \n参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,wX 当前地图X坐标.,wY 当前地图Y坐标.,\n返回:成功或失败.\n",
	ApplyItemTarget="bool  ApplyItemTarget(string  strPlayer,string  strItemInfo,bool  bInstance,string  strTarget)\n让玩家对某目标使用道具. \n参数:strPlayer 玩家的GUID.,strItemInfo 物品的KeyName或GUID.,bInstance strItemInfo的类型,true = GUID false = KeyName.,strTarget 目标的GUID.,\n返回:成功或失败.\n",
	DropItem="bool  DropItem(string  strPlayer,string  strItemInfo,bool  bInstance)\n玩家丢弃物品. \n参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或KeyName.,bInstance strItemInfo的类型,true = GUID false = KeyName.,\n返回:成功或失败.\n",
	Player_RunScript="bool  Player_RunScript(string  strPlayer,string  strCallBack,string  strParam)\n让玩家执行一段脚本. \n参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:成功或失败.\n备注:该接口是异步的.接口返回成功并不代表脚本执行成功.\n",
	Player_TeamRunScript="bool  Player_TeamRunScript(string  strPlayer,string  strCallBack,string  strParam)\n让玩家队伍里所有人执行一段脚本. \n参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:成功或失败.\n备注:该接口是异步的.接口返回成功并不代表脚本执行成功.\n",
	Player_GuildRunScript="bool  Player_GuildRunScript(string  strPlayer,string  strCallBack,string  strParam)\n让玩家行会里所有人执行一段脚本. \n参数:strPlayer 玩家的GUID.,strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:成功或失败.\n备注:该接口是异步的.接口返回成功并不代表脚本执行成功.\n",
	Player_IsPlayer="bool  Player_IsPlayer(string  strObject)\n判断GUID是不是玩家. \n参数:strObject 对象的GUID.,\n返回:是或否.\n",
	Player_GetItemGuid="string  Player_GetItemGuid(string  strPlayer,uint16  wSite)\n获得玩家某装备位的物品GUID. \n参数:strPlayer 对象的GUID.,wSite 装备位,详细解说请参考lua_logic_define.lua.,\n返回:对应位置物品的GUID.\n参考:eRoleSite,\n",
	Player_GetExpLimit="double  Player_GetExpLimit(string  strPlayer)\n获得玩家当前等级经验上限. \n参数:strPlayer 玩家的GUID.,\n返回:当前等级经验上限.\n",
	Player_GetAntiIndulge="int32  Player_GetAntiIndulge(string  strPlayer)\n取得玩家的防沉迷状态. \n参数:strPlayer 玩家的GUID.,\n返回:0 = 无收益 1 = 经验减半 2 = 全收益.\n",
	Player_SetForbidTalk="bool  Player_SetForbidTalk(string  strPlayer,string  strDesc,uint32  dwTimes)\n将玩家禁言. \n参数:strPlayer 玩家的GUID.,strDesc 禁言原因.,dwTimes 禁言时间,单位秒.注意该时间请如实填写,否则会数据溢出.,\n返回:成功或失败.\n警告:该函数是异步的,返回成功并不代表禁言成功.\n",
	Player_DisableForbidTalk="bool  Player_DisableForbidTalk(string  strPlayer)\n取消玩家禁言. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n警告:该函数是异步的,返回成功并不代表解除禁言成功.\n",
	Player_Kick="bool  Player_Kick(string  strPlayer)\n[此函数过期, 禁用]\n踢玩家下线. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n警告:该函数是异步的,返回成功并不代表踢人成功.\n参考:KickByName,\n",
	Player_Catch="string  Player_Catch(string  strPlayer,string  strServantKey)\n玩家捕捉宝宝. \n参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,\n返回:宝宝的GUID,出错返回''.\n",
	Player_Summon="string  Player_Summon(string  strPlayer,string  strServantKey,uint8  byLevel)\n玩家召唤宝宝. \n参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,byLevel 宝宝的等级.,\n返回:宝宝的GUID,出错返回''.\n",
	Player_SetGhost="bool  Player_SetGhost(string  strPlayer,bool  bActive)\n设置/取消玩家幽灵模式. \n参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消.,\n返回:无.\n",
	Player_SetInvincible="bool  Player_SetInvincible(string  strPlayer,bool  bActive)\n设置/取消玩家无敌模式. \n参数:strPlayer 玩家的GUID.,bActive true = 设置 false = 取消.,\n返回:无.\n",
	Player_RunGMCmd="bool  Player_RunGMCmd(string  strPlayer,string  strAlias,string  strParam)\n让玩家执行GM指令. \n参数:strPlayer 玩家的GUID.,strAlias GM指令的名字.,strParam GM指令的参数.,\n返回:成功或失败.\n",
	ProgressBarStart="bool  ProgressBarStart(string  strPlayer,uint32  dwDuration,string  strDesc,string  strCompleteCallBack,string  strAbortCallBack,string  strParam)\n让玩家开启进度条. \n参数:strPlayer 玩家的GUID.,dwDuration 进度条的持续时间.,strDesc 进度条的描述文字.,strCompleteCallBack 进度条完成时回调函数.,strAbortCallBack 进度条被打断时回调函数.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:成功或失败.\n",
	LoginTime="uint32  LoginTime(string  strPlayer)\n取得玩家的登陆时间. \n参数:strPlayer 玩家的GUID.,\n返回:登陆时间,出错返回0.\n",
	OnlineTime="uint32  OnlineTime(string  strPlayer)\n取得玩家的本次登陆在线时间. \n参数:strPlayer 玩家的GUID.,\n返回:本次登陆在线时间,出错返回0.\n",
	OnlineTimeEx="uint32  OnlineTimeEx(string  strPlayer)\n取得玩家的本次登陆的当天在线时间. \n参数:strPlayer 玩家的GUID.,\n返回:当天在线时间,出错返回0.\n",
	LastLogoutTime="uint32  LastLogoutTime(string  strPlayer)\n取得玩家的最后退出时间. \n参数:strPlayer 玩家的GUID.,\n返回:最后退出时间.\n",
	TotalTime="uint32  TotalTime(string  strPlayer)\n取得玩家的总计在线时间. \n参数:strPlayer 玩家的GUID.,\n返回:总计在线时间,出错返回0.\n",
	GenTeam="bool  GenTeam(string  strLeader,table  tMembers)\n创建队伍. \n参数:strLeader 队长的Name.,tMembers 队伍成员的Name列表,lua table.,\n返回:异步调用,返回值忽略.\n",
	SetAutoReply="bool  SetAutoReply(string  strPlayer,string  strMsg)\n设置玩家自动回复. \n参数:strPlayer 玩家的GUID.,strMsg 自动回复内容.,\n返回:异步调用,返回值忽略.\n",
	DisableAutoReply="bool  DisableAutoReply(string  strPlayer)\n取消玩家自动回复. \n参数:strPlayer 玩家的GUID.,\n返回:异步调用,返回值忽略.\n",
	SetOffline="void  SetOffline(string  strPlayer,uint32  dwTimes)\n设置玩家离线挂机. \n参数:strPlayer 玩家的GUID.,dwTimes 挂机时间,单位:秒(最大不能超过4233600000也就是49天).,\n返回:无返回值.\n",
	IsOffline="bool  IsOffline(string  strPlayer)\n判断玩家是否在离线挂机. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	HardwareCode="string  HardwareCode(string  strPlayer)\n取得玩家的硬件码. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的硬件码,出错返回''.\n",
	DelayCall="bool  DelayCall(string  strObject,uint32  iElapse,string  strCallBack,string  strParams)\n给对象添加延时回调. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,iElapse 延时时间 单位(毫秒).,strCallBack 触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParams 自定义参数.,\n返回:成功或失败.\n",
	GiveItem="bool  GiveItem(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n给予玩家非绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	GiveBindItem="bool  GiveBindItem(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n给予玩家绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	TakeItem="bool  TakeItem(string  strPlayer,string  strItemKey,uint16  wCount,string  strDesc,string  strTarget)\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	TakeItemEx="bool  TakeItemEx(string  strPlayer,string  strItemKey,int32  wCount,uint8  bBind,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse,string  strDesc,string  strTarget)\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 删除数量.,bBind 绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	TakeOff="bool  TakeOff(string  strPlayer,string  strItemKey)\n让玩家脱装备. \n参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,\n返回:成功或失败.\n",
	TakeOffEx="bool  TakeOffEx(string  strPlayer,string  strItemInfo)\n让玩家脱装备. \n参数:strPlayer 玩家的GUID.,strItemInfo 装备的GUID或KeyName.,\n返回:成功或失败.\n",
	TakeOn="bool  TakeOn(string  strPlayer,string  strItemKey)\n让玩家穿装备. \n参数:strPlayer 玩家的GUID.,strItemKey 装备的KeyName.,\n返回:成功或失败.\n",
	TakeOnEx="bool  TakeOnEx(string  strPlayer,string  strItemInfo,int  iSite)\n让玩家穿装备. \n参数:strPlayer 玩家的GUID.,strItemInfo 物品的GUID或物品的KeyName.,iSite 装备位置,仅当物品为护腕或戒指时,该参数才生效.,\n返回:成功或失败.\n参考:eRoleSite,\n",
	GiveOneItem="string  GiveOneItem(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n给予玩家单个非绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:新物品的GUID,出错返回''.\n",
	GiveOneBindItem="string  GiveOneBindItem(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n给予玩家单个绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:新物品的GUID,出错返回''.\n",
	Monster_SetSeeker="bool  Monster_SetSeeker(string  strMonster,table  tPath,uint8  byType,bool  bForce)\n将该怪物设为自动行走怪. \n参数:strMonster 怪物的GUID.,tPath 路径表,按X坐标,Y坐标顺序填写.如:{1, 1, 1, 3},第一步坐标(1, 1),第二步坐标(1, 3).,byType 行走类型, 0 = 普通行走 1 = 反复寻走.,bForce true = 强制寻路,不主动攻击也不回击 false = 根据怪物类型决定.,\n返回:属性值.\n警告:早期接口,不再提供技术支持.\n",
	Monster_GetMaster="string  Monster_GetMaster(string  strMonster)\n取得怪物主人的Name. \n参数:strMonster 怪物的GUID.,\n返回:怪物主人的Name,如果对象不存在返回''.\n",
	MonsterKey2ID="uint32  MonsterKey2ID(string  strMonsterKey)\n根据怪物的KeyName取得怪物的ID. \n参数:strMonsterKey 怪物的KeyName.,\n返回:怪物的ID,出错返回0.\n",
	Monster_IsExist="bool  Monster_IsExist(string  strMonster)\n判断怪物是否存在. \n参数:strMonster 怪物的GUID.,\n返回:是或否.\n",
	Monster_IsMonster="bool  Monster_IsMonster(string  strObject)\n判断对象是否为怪物. \n参数:strObject 对象的GUID.,\n返回:是或否.\n",
	Monster_IsDie="bool  Monster_IsDie(string  strMonster)\n判断怪物是否死亡. \n参数:strMonster 怪物的GUID.,\n返回:是或否.\n",
	Monster_Remove="bool  Monster_Remove(string  strMonster)\n移除怪物. \n参数:strMonster 怪物的GUID.,\n返回:成功或失败.\n",
	Monster_GetEscapePoint="table  Monster_GetEscapePoint(string  strMonster,uint16  wActorX,uint16  wActorY,uint16  wDistance)\n计算怪物的逃跑点. \n参数:strMonster 怪物的GUID.,wActorX 攻击者的X坐标.,wActorY 攻击者的Y坐标.,wDistance 逃跑距离.,\n返回:逃跑点坐标,返回lua table. 例:tPos = lualib:Monster_GenEscapePoint(XXXXX, 10, 203, 16); local x, y = tPos['x'], tPos['y'];\n",
	Monster_Escape="bool  Monster_Escape(string  strMonster,uint16  wX,uint16  wY)\n让怪物行走到某点. \n参数:strMonster 怪物的GUID.,wX 目标X坐标.,wY 目标Y坐标.,\n返回:成功或失败.\n",
	Monster_SpellTarget="bool  Monster_SpellTarget(string  strMonster,uint16  wSkillID,string  strTarget)\n让怪物施放技能. \n参数:strMonster 怪物的GUID.,wSkillID 技能ID.,strTarget 技能目标,可以是怪物、玩家、英雄.,\n返回:成功或失败.\n",
	Monster_GetAttackTarget="string  Monster_GetAttackTarget(string  strMonster)\n取得怪物的攻击目标. \n参数:strMonster 怪物的GUID.,\n返回:攻击目标的GUID,出错返回''.\n",
	Monster_SetAttackTarget="bool  Monster_SetAttackTarget(string  strMonster,string  strTarget)\n设置怪物的攻击目标. \n参数:strMonster 怪物的GUID.,strTarget 怪物的目标如果为''表示清除上次调用此接口设定的目标.,\n返回:成功或失败.\n",
	Monster_GetSpecial="table  Monster_GetSpecial(uint16  wMaxLevel,uint16  wMinLevel)\n取得相应等级的抽取类型怪. \n参数:wMaxLevel 最大等级.,wMinLevel 最小等级.,\n返回:符合条件的抽取怪KeyName列表,返回lua table.\n",
	Npc_Remove="bool  Npc_Remove(string  strNpc)\n移除NPC. \n参数:strNpc NPC的GUID.,\n返回:成功或失败.\n",
	Npc_ChangeName="bool  Npc_ChangeName(string  strNpc,string  strName)\n改变NPC的名字. \n参数:strNpc NPC的GUID.,strName NPC的Name.,\n返回:成功或失败.\n",
	Npc_IsExist="bool  Npc_IsExist(string  strNpc)\n判断NPC是否存在. \n参数:strNpc NPC的GUID.,\n返回:成功或失败.\n",
	AddShop="bool  AddShop(string  strNpc,uint16  wShopId)\n将NPC与指定商店关联起来\n参数:strNpc NPC的GUID.,wShopId 商店ID.,\n返回:成功或失败.\n参考:AddShop,OpenShop,\n",
	OpenShop="void  OpenShop(string  strNpc,string  strPlayer,uint16  wShopId)\n打开与NPC关联过的商店\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,wShopId 商店ID.,\n返回:无返回值.\n备注:NPC必须与该商店关联过.\n参考:AddShop,OpenShop,\n",
	OpenWarehouse="void  OpenWarehouse(string  strNpc,string  strPlayer)\n打开玩家仓库\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,\n返回:无返回值.\n参考:OpenWarehouse,OpenWarehouseAdv,\n",
	OpenWarehouseAdv="void  OpenWarehouseAdv(string  strNpc,string  strPlayer)\n打开玩家高级仓库\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,\n返回:无返回值.\n参考:OpenWarehouse,OpenWarehouseAdv,\n",
	NPCTalk="void  NPCTalk(string  strPlayer,string  strTalk)\n打开物品的对话框\n参数:strPlayer 玩家GUID.,strTalk 对话框的内容.,\n返回:无返回值.\n参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,\n",
	NPCTalkEx="void  NPCTalkEx(string  strNpc,string  strPlayer,string  strTalk)\n打开NPC的对话框\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,\n返回:无返回值.\n参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,\n",
	NPCTalkDetail="void  NPCTalkDetail(string  strPlayer,string  strTalk,uint16  wWidth,uint16  wHeight)\n打开物品的对话框\n参数:strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,\n返回:无返回值.\n参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,\n",
	NPCTalkDetailEx="void  NPCTalkDetailEx(string  strNpc,string  strPlayer,string  strTalk,uint16  wWidth,uint16  wHeight)\n打开NPC的对话框\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,\n返回:无返回值.\n参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,\n",
	Item_GetRole="string  Item_GetRole(string  strItem)\n取得物品所在包裹的玩家GUID. \n参数:strItem 物品的GUID.,\n返回:拥有者的GUID,出错返回''.\n备注:如果物品不在包裹中则返回''.\n",
	Item_GetType="uint8  Item_GetType(string  strPlayer,string  strItem)\n取得物品的类型. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品类型,具体类型请参考策划Item表.出错返回0.\n",
	Item_GetSubType="uint8  Item_GetSubType(string  strPlayer,string  strItem)\n取得物品的子类型. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品子类型,具体类型请参考策划Item表.出错返回0.\n",
	Item_GetSite="int32  Item_GetSite(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的包裹位. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:返回包裹位置,如果物品不存在返回0.\n参考:eRoleSite,\n",
	Item_GetAmount="int32  Item_GetAmount(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的堆叠数量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:返回堆叠数量.\n",
	Item_SetAmount="bool  Item_SetAmount(string  strPlayer,string  strItem,int32  iAmount)\n根据物品GUID设置该物品的堆叠数量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iAmount 堆叠数,不能超过该物品的最大堆叠数量.,\n返回:成功或失败.\n",
	Item_GetStack="int32  Item_GetStack(string  strKey)\n根据物品KeyName取得该物品的最大堆叠数量. \n参数:strKey 物品的KeyName.,\n返回:返回最大堆叠数量.\n",
	Item_GetDurability="int32  Item_GetDurability(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的当前耐久. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的耐久,出错返回-1.\n",
	Item_GetMaxDurability="int32  Item_GetMaxDurability(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的最大耐久. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的最大耐久,出错返回-1.\n",
	Item_SetDurability="bool  Item_SetDurability(string  strPlayer,string  strItem,int32  iDura)\n根据物品GUID设置该物品的当前耐久. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值.,\n返回:成功或失败.\n",
	Item_SetMaxDurability="bool  Item_SetMaxDurability(string  strPlayer,string  strItem,int32  iDura)\n根据物品GUID设置该物品的最大耐久. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iDura 耐久值.,\n返回:成功或失败.\n",
	Item_GetRepairCharge="int  Item_GetRepairCharge(string  strPlayer,string  strItem,int  iType)\n根据物品GUID查询该物品的修理价格. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iType 修理类型 1 = 普修 2 = 特修.,\n返回:物品修理价格.\n",
	Item_GetUsesCount="int16  Item_GetUsesCount(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的剩余使用次数. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的使用次数,出错返回-1.\n",
	Item_SetUsesCount="bool  Item_SetUsesCount(string  strPlayer,string  strItem,int16  iValue)\n根据物品GUID设置该物品的剩余使用次数. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 使用次数.,\n返回:成功或失败.\n",
	Item_IsBind="bool  Item_IsBind(string  strPlayer,string  strItem)\n根据物品GUID判断该物品是否绑定. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:是或否.\n",
	Item_SetBind="bool  Item_SetBind(string  strPlayer,string  strItem,bool  bBind)\n根据物品GUID设置该物品是否绑定. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,bBind 是否绑定.,\n返回:成功或失败.\n",
	Item_NotifyUpdate="void  Item_NotifyUpdate(string  strPlayer,string  strItem)\n向物品的主人通知物品属性更新. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:无返回值.\n",
	Equip_GetIdentifyNum="int  Equip_GetIdentifyNum(string  player_guid,string  item_guid)\n取得装备当前鉴定条目数\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,\n返回:取得装备当前鉴定条目数.\n备注:只有装备由此属性.\n",
	Equip_GetIdentifyProp="table  Equip_GetIdentifyProp(string  player_guid,string  item_guid,uint16  index)\n获取装备的某条鉴定属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-2],共三条.,\n返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.\n备注:只有装备由此属性.\n",
	Equip_SetIdentifyProp="bool  Equip_SetIdentifyProp(string  player_guid,string  item_guid,uint8  att0,uint16  v0,uint8  att1,uint16  v1,uint8  att2,uint16  v2)\n设置装备的鉴定属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,att0 属性名0.,v0 属性值0.,att1 属性名1.,v1 属性值1.,att2 属性名2.,v2 属性值2.,\n返回:成功返回true，失败返回false.\n备注:只有装备由此属性.\n",
	Equip_GetRefineLevel="uint8  Equip_GetRefineLevel(string  player_guid,string  item_guid)\n取得装备精炼等级\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,\n返回:取得装备精炼等级.\n备注:只有装备由此属性.\n",
	Equip_SetRefineLevel="bool  Equip_SetRefineLevel(string  player_guid,string  item_guid,uint8  level)\n设置装备的精炼等级\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,level 精炼等级.,\n返回:无.\n备注:只有装备由此属性.\n",
	Equip_GetRefineProp="table  Equip_GetRefineProp(string  player_guid,string  item_guid)\n获取装备的精炼属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,\n返回:成功返回lua_table包括两个数据,key存储属性,value存储数据.\n备注:只有装备由此属性.\n",
	Equip_SetRefineProp="bool  Equip_SetRefineProp(string  player_guid,string  item_guid,uint16  attr_name,int32  attr_value)\n设置装备的精炼属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,attr_name 属性名.,attr_value 属性值.,\n返回:成功返回true，失败返回false.\n备注:只有装备由此属性.\n",
	Equip_GetLuckCurse="int16  Equip_GetLuckCurse(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的幸运诅咒值. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:幸运或诅咒值.\n",
	Equip_SetLuckCurse="bool  Equip_SetLuckCurse(string  strPlayer,string  strItem,int32  iValue)\n根据物品GUID设置该物品的幸运诅咒值. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 幸运诅咒值.大于0为幸运,小于0为诅咒.,\n返回:成功或失败.\n",
	Item_ChangeName="bool  Item_ChangeName(string  strPlayer,string  strItem,string  strName)\n根据物品GUID设置该物品的自定义名称. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strName 物品的新名字.,\n返回:成功或失败.\n",
	Item_Destroy="bool  Item_Destroy(string  strPlayer,string  strItem,string  strDesc,string  strTarget)\n根据物品GUID销毁该物品. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者.,\n返回:成功或失败.\n",
	Equip_GetExtNum="int  Equip_GetExtNum(string  player_guid,string  item_guid)\n取得装备当前扩展条目数\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,\n返回:取得装备当前鉴定条目数, 取值范围[0, 10].\n备注:只有装备由此属性.\n",
	Equip_GetExtProp="table  Equip_GetExtProp(string  player_guid,string  item_guid,uint16  index)\n获取装备的某条扩展属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条.,\n返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.\n备注:只有装备由此属性.\n",
	Equip_SetExtProp="bool  Equip_SetExtProp(string  player_guid,string  item_guid,uint16  index,uint8  attr_name,uint16  attr_value)\n设置装备的某条扩展属性\n参数:player_guid 该参数现已无意义,默认填''即可.,item_guid 物品的GUID.,index 属性索引,取值范围[0-9],共十条.,attr_name 属性名.,attr_value 属性值.,\n返回:成功返回true，失败返回false.\n备注:只有装备由此属性.\n",
	Equip_SetQualProp="bool  Equip_SetQualProp(string  player_guid,string  item_guid,uint16  index,uint16  attr_name,int32  attr_value)\n设置装备的某条品质属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条.,attr_name 属性名.,attr_value 属性值.,\n返回:成功返回true，失败返回false.\n备注:只有装备由此属性.\n",
	Equip_GetQualProp="table  Equip_GetQualProp(string  player_guid,string  item_guid,uint16  index)\n获取装备的某条品质属性\n参数:player_guid 玩家的GUID.,item_guid 物品的GUID.,index 品质属性索引,取值范围[0-5],共六条.,\n返回:成功返回lua_table包括两个数据,0存储属性,1存储数据.\n备注:只有装备由此属性.\n",
	ItemsByType="table  ItemsByType(string  strPlayer,int  iType,int  iSubtype,bool  bEquip,bool  bBag,bool  bWarehouse,bool  bWarehouseAdv)\n玩家根据道具类型找物品. \n参数:strPlayer 玩家的GUID.,iType 物品类型,具体类型请参考策划Item表.,iSubtype 物品子类型,具体类型请参考策划Item表.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库,\n返回:符合条件的物品列表,返回lua table.\n",
	Item_GetLife="int32  Item_GetLife(string  strPlayer,string  strItem)\n根据物品GUID取得该物品的剩余存在时间. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的剩余存在时间,出错返回-1.秒位:秒.\n",
	Item_SetLife="bool  Item_SetLife(string  strPlayer,string  strItem,int32  iValue)\n根据物品GUID设置该物品的剩余存在时间. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,iValue 剩余存在时间.,\n返回:成功或失败.\n",
	Item2Json="string  Item2Json(string  strItem)\n根据物品实体信息生成物品的JSON信息. \n参数:strItem 物品的GUID.,\n返回:物品的JSON信息,出错返回''.\n",
	Json2Item="string  Json2Item(string  strPlayer,string  strJson)\n根据物品的JSON信息生成物品的实体. \n参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息.,\n返回:物品的GUID,出错返回''.\n",
	Json2ItemEx="string  Json2ItemEx(string  strPlayer,string  strJson,bool  bNew)\n根据物品的JSON信息生成物品的实体. \n参数:strPlayer 玩家的GUID.,strJson 物品的JSON信息.,bNew 是否重新生成GUID.,\n返回:物品的GUID,出错返回''.\n",
	CanFixEquip="bool  CanFixEquip(string  strItem,int32  iType)\n判断某件装备能否被修理. \n参数:strItem 装备的GUID.,iType 修理类型,1 = 普修 2 = 特修.,\n返回:是或否.\n",
	Item_GetLevel="int32  Item_GetLevel(string  strItem)\n根据物品GUID取得该物品的使用等级. \n参数:strItem 物品的GUID.,\n返回:物品的使用等级,出错返回0.\n",
	Item_GetIcon="uint32  Item_GetIcon(string  strItem)\n根据物品GUID取得该物品的图标. \n参数:strItem 物品的GUID.,\n返回:物品的图标ID,出错返回0.\n",
	ItemKey2ID="uint32  ItemKey2ID(string  strItemKey)\n根据物品的KeyName取得物品的ID. \n参数:strItemKey 物品的KeyName.,\n返回:物品的ID,出错返回0.\n",
	Item_DataRow="table  Item_DataRow(string  strItemKey)\n根据物品KeyName取得该物品的配置表结构. \n参数:strItemKey 物品的KeyName.,\n返回:物品的配置表结构.\n",
	SendMail="bool  SendMail(string  sender_name,string  receiver_name,string  text)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,\n返回:true表示投递成功,false表示失败.\n",
	Map_GetMapGuid="string  Map_GetMapGuid(string  strMapKey)\n取得地图的GUID. \n参数:strMapKey 地图的KeyName.,\n返回:地图的GUID,出错返回''.\n",
	MapKey2ID="uint32  MapKey2ID(string  strMapKey)\n根据地图的KeyName取得地图的ID. \n参数:strMapKey 地图的KeyName.,\n返回:地图的ID,出错返回0.\n",
	Map_GetWidth="uint16  Map_GetWidth(string  strMap)\n取得地图的宽度. \n参数:strMap 地图的GUID.,\n返回:地图宽度,出错返回0.\n",
	Map_GetHeight="uint16  Map_GetHeight(string  strMap)\n取得地图的高度. \n参数:strMap 地图的GUID.,\n返回:地图高度,出错返回0.\n",
	Map_GetPlayerCount="int32  Map_GetPlayerCount(string  strMap,bool  bIgnoreDied)\n取得地图上玩家的数量. \n参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色.,\n返回:玩家数量,出错返回-1.\n",
	Map_GetMonsterCount="int32  Map_GetMonsterCount(string  strMap,string  strMonsterKey,bool  bIgnoreDied,bool  bIgnoreServant)\n取得地图上怪物的数量. \n参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果为'',则代表所有怪.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,\n返回:怪物数量,出错返回-1.\n",
	Map_GetRegionPlayers="table  Map_GetRegionPlayers(string  strMap,uint16  wX,uint16  wY,uint16  wRange,bool  bIgnoreDied)\n[此函数过期, 禁用]\n获取地图区域内的玩家列表. \n参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色.,\n返回:区域内玩家列表,返回lua table.\n参考:Map_GetRegionPlayersEx,\n",
	Map_GetRegionMonsters="table  Map_GetRegionMonsters(string  strMap,string  strMonsterKey,uint16  wX,uint16  wY,uint16  wRange,bool  bIgnoreDied,bool  bIgnoreServant)\n[此函数过期, 禁用]\n获取地图区域内的怪物列表. \n参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,wX X坐标.,wY Y坐标.,wRange 范围.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,\n返回:区域内怪物列表,返回lua table.\n参考:Map_GetRegionMonstersEx,\n",
	Map_GetRegionItems="table  Map_GetRegionItems(string  strMap,string  strItemKey,uint16  wX,uint16  wY,uint16  wRange)\n[此函数过期, 禁用]\n获取地图区域内的物品列表. \n参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,wX X坐标.,wY Y坐标.,wRange 范围.,\n返回:区域内物品列表,返回lua table.\n参考:Map_GetRegionItemsEx,\n",
	Map_GenItem="string  Map_GenItem(string  strMap,uint16  wX,uint16  wY,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze)\n在地图上指定位置刷出物品. \n参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,\n返回:物品的GUID,失败返回''.\n",
	Map_GenItemRnd="string  Map_GenItemRnd(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze)\n在地图上随机位置刷出物品. \n参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,\n返回:物品的GUID,失败返回''.\n",
	Map_BatchGenMonster="bool  Map_BatchGenMonster(string  strMap,string  strMonsterKey,int16  wCount,bool  bCanRelive)\n在地图中随机刷怪. \n参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,\n返回:成功或失败.\n",
	Map_GenMonster="bool  Map_GenMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,int16  wCount,bool  bCanRelive)\n在地图中指定范围刷怪. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,\n返回:成功或失败.\n",
	Map_GenSingleMonster="string  Map_GenSingleMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,bool  bCanRelive)\n在地图中指定范围刷单只怪. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活.,\n返回:怪物GUID.\n",
	Map_GenNpc="string  Map_GenNpc(string  strMap,string  strNpcKey,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir)\n在地图中指定范围刷NPC. \n参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,\n返回:NPC的GUID.\n",
	Map_GenNpcRnd="string  Map_GenNpcRnd(string  strMap,string  strNpcKey)\n在地图中随机位置刷NPC. \n参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,\n返回:NPC的GUID.\n",
	Map_ClearMonster="bool  Map_ClearMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strMonsterKey,bool  bIgnoreDied,bool  bIgnorePet)\n清理地图指定范围中的怪物. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strMonsterKey 怪物的KeyName.,bIgnoreDied 是否忽略死亡的怪.,bIgnorePet 是否忽略玩家随从.,\n返回:成功或失败.\n",
	Map_ClearItem="void  Map_ClearItem(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strItemKey)\n清理地图指定范围中的物品. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strItemKey 物品的KeyName.,\n返回:无返回值.\n",
	Map_ClearNpc="bool  Map_ClearNpc(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strNpcKey)\n清理地图指定范围中的NPC. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,strNpcKey NPC的KeyName,如果为''则清所有NPC.,\n返回:无.\n",
	Map_AddEffect="bool  Map_AddEffect(string  strMap,uint16  wX,uint16  wY,uint32  dwEffectID,uint32  dwLife)\n在地图指定位置播放特效. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,dwEffectID 特效ID,请参考策划配置表.,dwLife 特效持续时间,单位秒.,\n返回:成功或失败.\n",
	Map_IsInGS="bool  Map_IsInGS(string  strMapKey)\n判断某地图是否在本GS上. \n参数:strMapKey 地图的KeyName.,\n返回:是或否.\n",
	Map_AddJumpPoint="bool  Map_AddJumpPoint(string  strSourMap,string  strDestMap,uint16  wSourX,uint16  wSourY,uint16  wDestX,uint16  wDestY)\n在地图上添加跳转点. \n参数:strSourMap 源地图的GUID.,strDestMap 目标地图的GUID.,wSourX 源地图坐标X.,wSourY 源地图坐标Y.,wDestX 目标地图坐标X.,wDestY 目标地图坐标Y.,\n返回:成功或失败.\n",
	Map_DelJumpPoint="bool  Map_DelJumpPoint(string  strMap,uint16  wSourX,uint16  wSourY)\n删除地图上的跳转点. \n参数:strMap 地图的GUID.,wSourX 跳转点的源地图坐标X.,wSourY 跳转点的源地图坐标Y.,\n返回:成功或失败.\n",
	Map_GetRegionNpcs="table  Map_GetRegionNpcs(string  strMap,uint16  wX,uint16  wY,uint16  wRange,string  strNpcKey)\n[此函数过期, 禁用]\n获取地图区域内的NPC列表. \n参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC.,\n返回:区域内NPC列表,返回lua table.\n参考:Map_GetRegionNpcsEx,\n",
	Map_GetMapNpc="string  Map_GetMapNpc(string  strMap,string  strNpcKey)\n获取地图中某个NPC的GUID. \n参数:strMap 地图的GUID.,strNpcKey NPC的KeyName.,\n返回:NPC的GUID,出错返回''.\n",
	Map_JumpXY="void  Map_JumpXY(string  strMap,string  strPlayer,uint16  wX,uint16  wY,uint16  wRange)\n玩家跳地图. \n参数:strMap 副本的GUID.,strPlayer 玩家的GUID.,wX 跳转坐标X.,wY 跳转坐标Y.,wRange 跳转坐标范围.,\n返回:无返回值.\n",
	Map_JumpRnd="bool  Map_JumpRnd(string  strMap,string  strPlayer)\n玩家随机跳地图. \n参数:strMap 副本的GUID.,strPlayer 玩家的GUID.,\n返回:成功或失败.\n",
	Map_CreateDgn="string  Map_CreateDgn(string  strMapKey,bool  bLoadGrid,uint32  dwLife)\n创建副本地图. \n参数:strMapKey 地图的KeyName.,bLoadGrid 是否加载地图格子, true = 直接加载地图格子,副本开始销毁倒计时. false = 当有玩家进入时才加载地图格子,副本开始销毁倒计时.,dwLife 副本的生存时间,单位秒.,\n返回:副本的GUID.\n",
	Map_DestroyDgn="void  Map_DestroyDgn(string  strMap)\n销毁副本地图. \n参数:strMap 副本地图的GUID.,\n返回:无返回值.\n",
	Player_SetDgnTicket="bool  Player_SetDgnTicket(string  strPlayer,string  strMap)\n给玩家设置副本门票. \n参数:strPlayer 玩家的GUID.,strMap 副本的GUID.,\n返回:成功或失败.\n",
	Player_HasDgnTicket="bool  Player_HasDgnTicket(string  strPlayer,string  strMap)\n判断玩家是否拥有副本门票. \n参数:strPlayer 玩家的GUID.,strMap 副本KeyName.,\n返回:成功或失败.\n",
	Player_EnterDgn="bool  Player_EnterDgn(string  strPlayer,string  strMapKey,uint16  wX,uint16  wY,uint16  wRange)\n让玩家进入副本. \n参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName.,wX 副本的X坐标.,wY 副本的Y坐标.,wRange 坐标范围.,\n返回:成功或失败.\n警告:多GS情况下,调用该接口后不能再对玩家进行任何操作.\n",
	Player_GetDgnByTicket="string  Player_GetDgnByTicket(string  strPlayer,string  strMapKey)\n根据玩家的副本KeyName找到副本的GUID. \n参数:strPlayer 玩家的GUID.,strMapKey 副本的KeyName.,\n返回:副本的GUID.\n",
	Map_ClearDgnPlayer="bool  Map_ClearDgnPlayer(string  strMap)\n清理副本中所有的玩家. \n参数:strMap 副本的GUID.,\n返回:成功或失败.\n",
	Map_ClearDgnMonster="bool  Map_ClearDgnMonster(string  strMap)\n清理副本中所有的怪物. \n参数:strMap 副本的GUID.,\n返回:成功或失败.\n警告:只清理普通怪,玩家的随从、守护怪不清理.\n",
	Map_ClearDgnItem="bool  Map_ClearDgnItem(string  strMap)\n清理副本中所有的物品. \n参数:strMap 副本的GUID.,\n返回:成功或失败.\n",
	Map_ClearDgnNpc="bool  Map_ClearDgnNpc(string  strMap)\n清理副本中所有的NPC. \n参数:strMap 副本的GUID.,\n返回:成功或失败.\n",
	Map_IsDgnExist="bool  Map_IsDgnExist(string  strMap)\n判断副本是否存在. \n参数:strMap 副本的GUID.,\n返回:是或否.\n",
	IsFamilyAlly="bool  IsFamilyAlly(string  strPlayer,string  strFamilyName)\n判断玩家的公会与指定的公会是否为同盟. \n参数:strPlayer 玩家的GUID.,strFamilyName 同盟公会的名字.,\n返回:是或否.\n",
	IsInFamily="bool  IsInFamily(string  strPlayer,string  strFamilyName)\n判断玩家是否在指定的公会中. \n参数:strPlayer 玩家的GUID.,strFamilyName 公会的名字.,\n返回:是或否.\n",
	HasFamilyWar="bool  HasFamilyWar(string  strFamilyName1,string  strFamilyName2)\n判断两个行会是否处于战争状态. \n参数:strFamilyName1 第一个行会的名字.,strFamilyName2 第二个行会的名字.,\n返回:是或否.\n",
	GetRunningFamilyWar="table  GetRunningFamilyWar(string  strPlayer)\n取得正在与玩家行会作战的行会列表. \n参数:strPlayer 玩家的GUID.,\n返回:作战行会列表,返回lua table.\n警告:服务器功能的扩展,脚本作者不应该使用.\n",
	NotifyRunningFamilyWar="void  NotifyRunningFamilyWar(string  strPlayer)\n将正在与玩家行会作战的行会列表知通给玩家. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n警告:服务器功能的扩展,脚本作者不应该使用.\n",
	CreateFamily="int32  CreateFamily(string  strPlayer,string  strFamilyName)\n验证是否能创建行会\n参数:strPlayer 玩家GUID.,strFamilyName 行会名字.,\n返回:返回0可以创建,返回-1代表失败.\n",
	GetAllFamilys="table  GetAllFamilys(void  )\n取得服务器上所有行会的名字列表. \n参数: ,\n返回:行会名列表,返回lua table.\n",
	GetFamilyJoinList="int32  GetFamilyJoinList(string  strPlayer)\n发送行会列表到客户端\n参数:strPlayer 玩家GUID.,\n返回:返回0成功,返回-1代表失败.\n",
	GetFamilyName="string  GetFamilyName(string  strPlayer)\n获取玩家的行会名. \n参数:strPlayer 玩家GUID.,\n返回:行会名,没有则返回''.\n",
	GetFamilyTitle="string  GetFamilyTitle(string  strPlayer)\n获取玩家的行会封号. \n参数:strPlayer 玩家GUID.,\n返回:行会封号,没有则返回''.\n",
	StartFamilyWar="bool  StartFamilyWar(string  strFamily1,string  strFamily2)\n通知CS二个行会开始交战\n参数:strFamily1 行会的名字.,strFamily2 行会的名字.,\n返回:成功或失败.\n警告:该接口用来扩展服务器的功能,脚本作者不要使用.\n",
	GetAllCastle="table  GetAllCastle(void  )\n取得服务器里的所有城堡. \n参数: ,\n返回:服务器城堡列表,返回lua table.\n",
	HasCastle="bool  HasCastle(string  strCastleName)\n判断某城堡是否存在. \n参数:strCastleName 城堡名.,\n返回:是或否.\n",
	IsCastleWarStart="bool  IsCastleWarStart(string  strCastleName)\n判断某城堡战是否开启. \n参数:strCastleName 城堡名.,\n返回:是或否.\n",
	StartCastleWar="bool  StartCastleWar(string  strCastleName,string  strFamilys,string  strStartTime,uint32  dwDuration)\n开启城堡战. \n参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.,strStartTime 攻城时间.如:2012-10-20 20:30:00.,dwDuration 持续时间,单位:秒.,\n返回:成功或失败.\n",
	StopCastleWar="bool  StopCastleWar(string  strCastleName)\n停止城堡战. \n参数:strCastleName 城堡名.,\n返回:成功或失败.\n",
	HasCastleWar="bool  HasCastleWar(string  strCastleName,string  strFamilyName)\n判断某行会是否在某城堡的攻击者列表中. \n参数:strCastleName 城堡名.,strFamilyName 行会名.,\n返回:是或否.\n",
	GetCastleOwnFamily="string  GetCastleOwnFamily(string  strCastleName)\n获取某城堡的拥有者行会. \n参数:strCastleName 城堡名.,\n返回:行会名.\n",
	SetCastleOwnFamily="void  SetCastleOwnFamily(string  strCastleName,string  strFamilyName)\n设置某城堡的拥有者行会. \n参数:strCastleName 城堡名.,strFamilyName 行会名.,\n返回:无返回值.\n",
	GetCastleAttackFamily="string  GetCastleAttackFamily(string  strCastleName)\n获取某城堡的所有攻击者行会. \n参数:strCastleName 城堡名.,\n返回:所有的攻击者行会,多个行会间用&amp;隔开.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.\n",
	GetCastleTempFamily="string  GetCastleTempFamily(string  strCastleName)\n获取某城堡的临时占有行会. \n参数:strCastleName 城堡名.,\n返回:临时占有行会的名字.\n",
	SetCastleTempFamily="void  SetCastleTempFamily(string  strCastleName,string  strFamilyName)\n设置某城堡的临时占有行会. \n参数:strCastleName 城堡名.,strFamilyName 临时占有行会名.,\n返回:无返回值.\n",
	SetCastleCustomVarInt="void  SetCastleCustomVarInt(string  strCastleName,string  strKey,int32  iValue)\n设置某城堡的数值型自定义变量. \n参数:strCastleName 城堡名.,strKey 变量名.,iValue 变量值.,\n返回:无返回值.\n",
	GetCastleCustomVarInt="int32  GetCastleCustomVarInt(string  strCastleName,string  strKey)\n取得某城堡的数值型自定义变量. \n参数:strCastleName 城堡名.,strKey 变量名.,\n返回:变量值.\n",
	SetCastleCustomVarStr="void  SetCastleCustomVarStr(string  strCastleName,string  strKey,string  strValue)\n设置某城堡的字符型自定义变量. \n参数:strCastleName 城堡名.,strKey 变量名.,strValue 变量值.,\n返回:无返回值.\n",
	GetCastleCustomVarStr="string  GetCastleCustomVarStr(string  strCastleName,string  strKey)\n取得某城堡的字符型自定义变量. \n参数:strCastleName 城堡名.,strKey 变量名.,\n返回:变量值.\n",
	GetCastleMapGuid="string  GetCastleMapGuid(string  strCastleName)\n取得某城堡的攻城地图GUID. \n参数:strCastleName 城堡名.,\n返回:攻城地图的GUID.\n",
	GetCastleBasiGuid="string  GetCastleBasiGuid(string  strCastleName)\n取得某城堡的皇宫地图GUID. \n参数:strCastleName 城堡名.,\n返回:皇宫地图的GUID.\n",
	AddTitle="void  AddTitle(string  strPlayer,uint16  wTitleID)\n给玩家添加称号. \n参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,\n返回:无返回值.\n",
	HasTitle="bool  HasTitle(string  strPlayer,uint16  wTitleID)\n判断玩家是否拥有添加称号. \n参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,\n返回:无.\n",
	RemoveTitle="void  RemoveTitle(string  strPlayer,uint16  wTitleID)\n移除玩家称号. \n参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,\n返回:无返回值.\n",
	ApplyTitle="void  ApplyTitle(string  strPlayer,uint16  wTitleID)\n给玩家应用称号.\n参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,\n返回:无返回值.\n警告:如果称号在使用中,则会取消该称号. (经测试不会取消称号，慎用)\n",
	CanAcceptQuest="bool  CanAcceptQuest(string  strPlayer,uint16  wQuestID)\n判断某任务是否可接. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:是或否.\n",
	CanAccomplishQuest="bool  CanAccomplishQuest(string  strPlayer,uint16  wQuestID)\n判断某任务是否可提交. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:是或否.\n",
	AcceptQuest="bool  AcceptQuest(string  strPlayer,uint16  wQuestID)\n玩家接受任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:成功或失败.\n",
	AccomplishQuest="bool  AccomplishQuest(string  strPlayer,uint16  wQuestID,uint16  wSelect)\n玩家提交任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wSelect 选择项,默认填0.,\n返回:成功或失败.\n",
	HasQuest="bool  HasQuest(string  strPlayer,uint16  wQuestID)\n判断玩家是否拥有某个任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:成功或失败.\n",
	DropQuest="bool  DropQuest(string  strPlayer,uint16  wQuestID)\n玩家放弃任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:成功或失败.\n",
	ForceAcceptQuest="bool  ForceAcceptQuest(string  strPlayer,uint16  wQuestID)\n强制玩家接受任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:成功或失败.\n",
	ForceQuestReady="bool  ForceQuestReady(string  strPlayer,uint16  wQuestID)\n强制玩家完成任务. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:成功或失败.\n",
	QuestRemainCount="int32  QuestRemainCount(string  strPlayer,uint16  wQuestID)\n查询玩家任务剩余次数. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,\n返回:剩余次数.\n",
	GenEscorter="bool  GenEscorter(string  strPlayer,string  strMonsterKey,uint32  dwLife)\n生成需要护送的镖车. \n参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒.,\n返回:成功或失败.\n",
	GenTraveler="bool  GenTraveler(string  strPlayer,string  strMonsterKey,uint32  dwLife,string  strPaths)\n生成自动行走的镖车. \n参数:strPlayer 玩家的GUID.,strMonsterKey 镖车的KeyName.,dwLife 镖车的生存时间,单位:秒.,strPaths 镖车的路径字符串.详情请参考镖车脚本写法.,\n返回:成功或失败.\n",
	IsEscorterDied="bool  IsEscorterDied(string  strPlayer)\n判断玩家镖车是否存活. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	RemoveEscorter="bool  RemoveEscorter(string  strPlayer)\n移除玩家镖车. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n",
	GetEscorter="string  GetEscorter(string  strPlayer)\n取得玩家镖车GUID. \n参数:strPlayer 玩家的GUID.,\n返回:镖车GUID,出错返回''.\n警告:跨GS后镖车的GUID会变更.\n",
	AddScheduled="bool  AddScheduled(uint32  dwScheduleID,string  strScheduleName,int16  iType,table  tTime,string  strCallBack,string  strParam)\n给服务器添加计划任务. \n参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000.,strScheduleName 计划任务名字.,iType 计划任务类型:1 = Y-m-d h:m:s 特定时间, 2 = m-d h:m:s 每年执行, 3 = d h:m:s 每月执行, 4 = w h:m:s 每周执行, 5 = h:m:s 每天执行.,tTime 计划任务时间表.如:计划任务类型为4,则{'0 19:30:00', '3 19:30:00'}，代表每周日19:30:00、周三19:30:00触发计划任务.每周的第一天从周日开始.,strCallBack 计划任务回调函数.,strParam 参数，脚本使用者自由设置,方便上下文切换,回调时由服务器做为参数自动传回.,\n返回:成功或失败.\n警告:通过脚本添加的计划任务ID必须大于100000.\n",
	DisableScheduled="void  DisableScheduled(uint32  dwScheduleID)\n清除服务器计划任务. \n参数:dwScheduleID 计划任务ID,通过脚本添加的计划任务ID必须大于100000.,\n返回:无返回值.\n",
	JoinCamp="bool  JoinCamp(string  strPlayer,uint32  dwCampID,uint32  dwIntegral)\n加入活动. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,dwIntegral 该活动的积分值.,\n返回:成功或失败.\n",
	CampCount="uint32  CampCount(string  strPlayer,uint32  dwCampID)\n取得该活动当天参与次数. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:当天参与活动次数.\n",
	CampCounts="uint32  CampCounts(string  strPlayer,uint32  dwCampID)\n取得该活动总计参与次数. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:总计参与活动次数.\n",
	CampInteg="uint32  CampInteg(string  strPlayer,uint32  dwCampID)\n取得该活动当天积分. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:当天活动积分.\n",
	CampIntegs="uint32  CampIntegs(string  strPlayer,uint32  dwCampID)\n取得该活动总计积分. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:总计活动积分.\n",
	VerifyCampLevel="bool  VerifyCampLevel(string  strPlayer,uint32  dwCampID)\n判断玩家是否满足活动等级. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:是或否.\n",
	VerifyCampCount="bool  VerifyCampCount(string  strPlayer,uint32  dwCampID)\n判断玩家是否被活动次数限制所允许. \n参数:strPlayer 玩家的GUID.,dwCampID 活动ID.,\n返回:是或否.\n",
	IO_FileExists="bool  IO_FileExists(string  strFileName)\n判断文件是否存在. \n参数:strFileName 文件名.,\n返回:存在或不存在.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_FileCTime="string  IO_FileCTime(string  strFileName)\n返回文件创建时间. \n参数:strFileName 文件名.,\n返回:时间格式串.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_FileMTime="string  IO_FileMTime(string  strFileName)\n返回文件修改时间. \n参数:strFileName 文件名.,\n返回:时间格式串.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_CreateTextFile="bool  IO_CreateTextFile(string  strFileName,bool  bOverlap)\n创建文本文件. \n参数:strFileName 文件名.,bOverlap 是否覆盖. false = 文件存在时创建失败.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_EmptyTextFile="bool  IO_EmptyTextFile(string  strFileName)\n清空文本文件内容. \n参数:strFileName 文件名.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_GetFileText="table  IO_GetFileText(string  strFileName)\n读取文本文件内容,换行生成列表. \n参数:strFileName 文件名.,\n返回:文件内容列表,返回lua table.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_SetFileText="bool  IO_SetFileText(string  strFileName,string  strContent)\n设置文本文件内容. \n参数:strFileName 文件名.,strContent 文本内容.,\n返回:成功失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_AppendFile="bool  IO_AppendFile(string  strFileName,string  strContent)\n追加文本内容到文本文件中. \n参数:strFileName 文件名.,strContent 文本内容.,\n返回:成功失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_CheckTextInFile="bool  IO_CheckTextInFile(string  strFileName,string  strContent)\n检查文本内容是否等于文本文件中的某一行. \n参数:strFileName 文件名.,strContent 文本内容.,\n返回:是或否.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileDeleteLineStr="bool  IO_TextFileDeleteLineStr(string  strFileName,string  strContent)\n从文本文件中删除行内容为指定字符串的行. \n参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileInsertLine="bool  IO_TextFileInsertLine(string  strFileName,uint32  dwLine,string  strContent)\n在文本文件中插入内容. \n参数:strFileName 文件名.,dwLine 前插行号.最小为1,最大为真实行数.,strContent 文本内容,不能包含回车换行符.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileDeleteLine="bool  IO_TextFileDeleteLine(string  strFileName,uint32  dwLine)\n从文本文件中删除指定行. \n参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileGetLine="string  IO_TextFileGetLine(string  strFileName,uint32  dwLine)\n从文本文件中取出指定行. \n参数:strFileName 文件名.,dwLine 行号.最小为1,最大为真实行数.,\n返回:行内容.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileRndGetLine="string  IO_TextFileRndGetLine(string  strFileName)\n从文本文件中取出随机行. \n参数:strFileName 文件名.,\n返回:行内容.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_TextFileCheckLine="int32  IO_TextFileCheckLine(string  strFileName,string  strContent)\n检查文本内容是否等于文本文件中的某一行,并返回行号. \n参数:strFileName 文件名.,strContent 文本内容,不能包含回车换行符.,\n返回:行号,返之-1.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_DirExists="bool  IO_DirExists(string  strDirName)\n判断文件目录是否存在. \n参数:strDirName 文件目录名.,\n返回:是或否.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_ForceDir="bool  IO_ForceDir(string  strDirName)\n创建文件目录. \n参数:strDirName 文件目录名.支持多级,如:aa/bb/cc,会依次创建三个目录.,\n返回:是或否.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_GetLuaPath="string  IO_GetLuaPath(void  )\n返回服务器LUA文件夹的绝对路径. \n参数: ,\n返回:LUA文件夹路径.\n",
	IO_SetCustomVarInt="bool  IO_SetCustomVarInt(string  strKey,int  iValue)\n[此函数过期, 禁用]\n在数据库中存储整型数值变量. \n参数:strKey 变量名.,iValue 变量值,\n返回:成功或失败.\n参考:SetDBNum,\n",
	IO_GetCustomVarInt="int  IO_GetCustomVarInt(string  strKey)\n[此函数过期, 禁用]\n从数据库中读取整型数值变量. \n参数:strKey 变量名.,\n返回:变量值.\n参考:GetDBNum,\n",
	IO_ClearCustomVarInt="void  IO_ClearCustomVarInt(string  strKey)\n[此函数过期, 禁用]\n从数据库中删除整型数值变量. \n参数:strKey 变量名.,\n返回:无返回值.\n",
	IO_SetCustomVarStr="bool  IO_SetCustomVarStr(string  strKey,string  iValue)\n[此函数过期, 禁用]\n在数据库中存储字符型变量. \n参数:strKey 变量名.,iValue 变量值,\n返回:成功或失败.\n参考:SetDBStr,\n",
	IO_GetCustomVarStr="string  IO_GetCustomVarStr(string  strKey)\n[此函数过期, 禁用]\n从数据库中读取字符型变量. \n参数:strKey 变量名.,\n返回:变量值.\n参考:GetDBStr,\n",
	IO_ClearCustomVarStr="void  IO_ClearCustomVarStr(string  strKey)\n[此函数过期, 禁用]\n从数据库中删除字符型变量. \n参数:strKey 变量名.,\n返回:无返回值.\n",
	on_item_appear="void  on_item_appear(string  strMap,string  strItem,uint16  wItemID,string  strItemKey,uint16  wX,uint16  wY)\n物品出现在地图时回调. \n参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_leave_map="void  on_leave_map(string  strPlayer)\n玩家离开地图时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_enter_map="void  on_enter_map(string  strPlayer)\n玩家进入地图时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_monster_disappear="void  on_monster_disappear(string  strMonster,uint16  wMonsterID,string  strMonsterName,uint16  wX,uint16  wY)\n怪物消失在地图时回调. \n参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_monster_appear="void  on_monster_appear(string  strMonster,uint16  wMonsterID,string  strMonsterName,uint16  wX,uint16  wY)\n怪物出现在地图时回调. \n参数:strMonster 怪物的GUID.,wMonsterID 怪物的ID.,strMonsterName 怪物的Name.,wX 怪物的X坐标.,wY 怪物的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_map_destroy="void  on_map_destroy(string  strMap,string  strMapKey)\n地图结束时回调. \n参数:strMap 地图的GUID.,strMapKey 地图的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_map_create="void  on_map_create(string  strMap,string  strMapKey)\n地图生成时回调. \n参数:strMap 地图的GUID.,strMapKey 地图的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_gp="void  on_gp(string  strPlayer,int32  iGPRuntime,int32  iGPTotal,int32  iAvgTick)\n玩家检测到外挂行为时回调. \n参数:strPlayer 玩家的GUID.,iGPRuntime 当前违规行为次数.,iGPTotal 违规行为的总次数.,iAvgTick 单次违规差值.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_castle_war_init="void  on_castle_war_init(string  strCastleName,string  strCastle,string  strBasilica)\n攻城战申请成功时回调. \n参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_castle_war_end="void  on_castle_war_end(string  strCastleName,string  strCastle,string  strBasilica)\n攻城战关闭时回调. \n参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_castle_war_start="void  on_castle_war_start(string  strCastleName,string  strCastle,string  strBasilica)\n攻城战开启时回调. \n参数:strCastleName 攻城城堡的名字.,strCastle 攻城城堡的GUID.,strBasilica 攻城城堡皇宫的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_logout="void  on_logout(string  strPlayer)\n玩家退出游戏时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_login="void  on_login(string  strPlayer)\n玩家进入游戏时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_first_in_game="void  on_first_in_game(string  strPlayer)\n新玩家第一次进入游戏时回调. \n参数:strPlayer 新人玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_system_start="void  on_system_start(void  )\n系统启动回调. \n参数: ,\n返回:无返回值.\n参考:eTriggerType,\n",
	AddTrigger="void  AddTrigger(string  strObject,int  iType,string  strCallBack)\n给对象添加触发器. \n参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,\n返回:无返回值.\n参考:eTriggerType,\n",
	HasTrigger="bool  HasTrigger(string  strObject,int  iType,string  strCallBack)\n判断对象是否拥有某触发器. \n参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,\n返回:是或否.\n参考:eTriggerType,\n",
	RemoveTrigger="bool  RemoveTrigger(string  strObject,int  iType,string  strCallBack)\n移除对象拥有的某触发器. \n参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,iType 触发器的类型.,strCallBack 回调函数的名字.,\n返回:成功或失败.\n参考:eTriggerType,\n",
	ClearTrigger="void  ClearTrigger(string  strObject)\n移除对象拥有的所有触发器. \n参数:strObject 对象的GUID,对角可以为玩家、怪物、NPC、地图、系统.,\n返回:无返回值.\n参考:eTriggerType,\n",
	SetTriggerFilters="void  SetTriggerFilters(string  IDS)\nSetTriggerFilters(对象GUID，触发器类型，过滤类型)\n参数:IDS 模板ID列表,\n返回:无返回值.\n备注:过滤时间\n",
	AddTimerEx="bool  AddTimerEx(string  strObject,uint32  dwTimerID,int32  iElapse,int32  iCount,string  strCallBack,string  strParam)\n给对象添加定时器. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:成功或失败.\n",
	DisableTimer="bool  DisableTimer(string  strObject,uint32  dwTimerID)\n取消对象的定时器. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,\n返回:成功或失败.\n",
	GSRunScript="void  GSRunScript(string  strCallBack,string  strParam)\n让GS里所有人执行一段脚本. \n参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:无返回值.\n备注:该接口是异步的.接口返回成功并不代表脚本执行成功.\n",
	GSTriggerScript="void  GSTriggerScript(string  strCallBack,string  strParam)\n让所有GS去执行一段脚本. \n参数:strCallBack 执行的函数.格式, 1 = 文件名:函数名 2 = 文件名.,strParam 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:无返回值.\n备注:该接口是异步的.接口返回成功并不代表脚本执行成功.\n",
	GenRandom="int32  GenRandom(int32  iMin,int32  iMax)\n成生随机数. \n参数:iMin 最小值.,iMax 最大值.,\n返回:返回随机数iRnd,取值范围:(iMin &lt; iMax) (iMin &lt;= iRnd &lt;= iMax).\n",
	GetConstVar="string  GetConstVar(string  strKey)\n读取系统常量表. \n参数:strKey 常量名.,\n返回:常量值,出错返回''.\n",
	ReloadConfig="bool  ReloadConfig(string  strTableKey)\n重载系统表. \n参数:strTableKey 配置表名.,\n返回:成功或失败.\n",
	ReloadGMList="void  ReloadGMList(void  )\n重载GM表. \n参数: ,\n返回:无返回值.\n",
	ReloadScript="bool  ReloadScript(int32  iScriptType)\n重载某类型脚本. \n参数:iScriptType 脚本类型.,\n返回:成功或失败.\n",
	StrSplit="table  StrSplit(string  strMaster,string  strSplit)\n字符串分割函数. \n参数:strMaster 被分割串.,strSplit 分割符.,\n返回:分割后的子串列表,返回lua table.如: tSubStr = lualib:StrSplit('aa##bb##cc#d', '##'); tSubStr = {'aa', 'bb', 'cc#d'};\n",
	IsInCollection="bool  IsInCollection(string  strMaster,string  strSplit,string  strSubStr)\n字符串查找函数. \n参数:strMaster 被分割串.,strSplit 分割符.,strSubStr 子字符串.,\n返回:主字符串被分割后的列表中,是否存在子字符串.\n",
	GetSvrId="uint32  GetSvrId(void  )\n获取服务器ID. \n参数: ,\n返回:服务器ID.\n",
	GetZoneId="uint32  GetZoneId(void  )\n获取区ID. \n参数: ,\n返回:区ID.\n",
	GetGroupId="uint32  GetGroupId(void  )\n获取组ID. \n参数: ,\n返回:组ID.\n",
	GetAgentId="uint32  GetAgentId(void  )\n获取代理ID. \n参数: ,\n返回:代理ID.\n",
	GetZoneName="string  GetZoneName(void  )\n获取区域名字. \n参数: ,\n返回:区域名字.\n",
	SkillKey2ID="uint32  SkillKey2ID(string  strSkillKey)\n根据技能的KeyName取得技能的ID. \n参数:strSkillKey 技能的KeyName.,\n返回:技能的ID,出错返回0.\n",
	BuffKey2ID="uint32  BuffKey2ID(string  strBuffKey)\n根据BUFF的KeyName取得BUFF的ID. \n参数:strBuffKey BUFF的KeyName.,\n返回:BUFF的ID,出错返回0.\n",
	Mod="int32  Mod(int32  iMaster,int32  iSlave)\n求模运算. \n参数:iMaster 被除数.,iSlave 除数.,\n返回:求模值.\n",
	GetAllPlayerCount="int  GetAllPlayerCount(void  )\n取得服务器所有人数. \n参数: ,\n返回:服务器人数.\n",
	RunClientScript="bool  RunClientScript(string  strObject,string  strLuaFile,string  strLuaFunction,string  strParam)\n指定运行客户端脚本. \n参数:strObject 对象的GUID,对象可以为系统、玩家、队伍、行会、地图.,strLuaFile 客户端LUA文件名.,strLuaFunction 客户端LUA函数名.,strParam 自定义参数.,\n返回:成功或失败.\n",
	MapRndPos="table  MapRndPos(string  strMapKey)\n取得地图随机点. \n参数:strMapKey 地图的KeyName.,\n返回:随机点坐标,返回lua table. 如:local tPos = lualib:MapRndPos('龙城'); local x, y = tPos['x'], tPos['y'];\n",
	GetTotalBill="int32  GetTotalBill(string  strPlayer)\n取得玩家充值元宝数. \n参数:strPlayer 玩家的GUID.,\n返回:冲值元宝数.\n",
	SetFbdLogin="void  SetFbdLogin(string  strKeyword,uint8  byType,uint32  dwTimes,string  strDesc)\n禁止登陆. \n参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.,dwTimes 禁止持续时间,单位:秒.,strDesc 禁止原因.,\n返回:无返回值.\n",
	DisaFbdLogin="void  DisaFbdLogin(string  strKeyword,uint8  byType)\n解除禁止登陆. \n参数:strKeyword 禁止登陆关键字.,byType 登陆类型,决定登陆关键字的含义.1 = IP 2 = 角色 3 = 帐号 4 = 硬件码.,\n返回:无返回值.\n",
	IsBanString="bool  IsBanString(string  strString)\n判断字符串是不是敏感词. \n参数:strString 字符串.,\n返回:是或否.\n",
	IsBanItem="bool  IsBanItem(string  strItem,string  strMap)\n判断是不是地图禁止物品. \n参数:strItem 物品GUID.,strMap 地图GUID.,\n返回:是或否.\n",
	MonstersByKey="table  MonstersByKey(string  strMonsterKey,int32  iLimit,bool  bIgnoreDie,bool  bIgnorePet)\n取得当前GS上符合条件的怪物GUID列表. \n参数:strMonsterKey 怪物的KeyName.,iLimit 获取最大数量上限.,bIgnoreDie 是否忽略死亡.,bIgnorePet 是否忽略随从.,\n返回:怪物GUID列表.\n",
	GetURL="bool  GetURL(string  Url,string  callback,string  param_list,uint32  timeout)\n获取一个URL的内容\n参数:Url http链接地址.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间.,\n返回:true表示投递请求成功（不表示获取内容成功）.\n",
	Base64Encode="string  Base64Encode(string  strString)\n将字符串进行BASE64编码. \n参数:strString 字符串.,\n返回:编码后的字符串.\n",
	Base64Decode="string  Base64Decode(string  strString)\n将字符串进行BASE64解码. \n参数:strString 字符串.,\n返回:解编码后的字符串.\n",
	UrlEncode="string  UrlEncode(string  strString)\n将字符串进行URL编码. \n参数:strString 字符串.,\n返回:编码后的字符串.\n",
	UrlDecode="string  UrlDecode(string  strString)\n将字符串进行URL解码. \n参数:strString 字符串.,\n返回:解编码后的字符串.\n",
	GenUniqueID="string  GenUniqueID(void  )\n生成系统唯一标识符. \n参数: ,\n返回:标识符字符串.\n",
	GetPlayerCount="uint32  GetPlayerCount(bool  bOffline)\n取得服务器上所有玩家数量. \n参数:bOffline 是否只取离线玩家数量.,\n返回:服务器上玩家数量.\n",
	GetVipRemain="uint32  GetVipRemain(string  strPlayer,int  iVipID)\n取得VIP功能剩余时间. \n参数:strPlayer 玩家的GUID.,iVipID VIP功能ID.,\n返回:剩余时间,单位:秒.\n",
	GetVipLevelRemain="uint32  GetVipLevelRemain(string  strPlayer,int  iVipLevel)\n取得VIP等级剩余时间. \n参数:strPlayer 玩家的GUID.,iVipLevel VIP等级.,\n返回:剩余时间,单位:秒.\n",
	GetVipLevel="uint32  GetVipLevel(string  strPlayer)\n取得VIP等级. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的VIP等级.\n",
	SetVipLevel="void  SetVipLevel(string  strPlayer,int  iVipLevel)\n设置VIP等级. \n参数:strPlayer 玩家的GUID.,iVipLevel VIP等级.,\n返回:无返回值.\n",
	ShowFormWithContent="void  ShowFormWithContent(string  strPlayer,string  strFormName,string  strContent)\n通知客户端显示表单\n参数:strPlayer 玩家GUID.,strFormName 表单名字.,strContent 提交的内容.,\n返回:无返回值.\n参考:ShowForm,ShowFormWithContent,\n",
	Str2Time="uint32  Str2Time(string  strDateTime)\n将字符串时间转换成数值型时间. \n参数:strDateTime 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,\n返回:数值时间.\n",
	SysMsg_SendWarnMsg="bool  SysMsg_SendWarnMsg(string  strPlayer,string  strMsg)\n发送客户端底部警告消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysWarnMsg="bool  SysWarnMsg(string  strPlayer,string  strMsg)\n发送客户端底部警告消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendPromptMsg="bool  SysMsg_SendPromptMsg(string  strPlayer,string  strMsg)\n发送客户端底部提示消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysPromptMsg="bool  SysPromptMsg(string  strPlayer,string  strMsg)\n发送客户端底部提示消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendTriggerMsg="bool  SysMsg_SendTriggerMsg(string  strPlayer,string  strMsg)\n发送客户端底部触发消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysTriggerMsg="bool  SysTriggerMsg(string  strPlayer,string  strMsg)\n发送客户端底部触发消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendInputDlg="bool  SysMsg_SendInputDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,uint32  dwMaxLen,string  strCallBack,string  strParam)\n通知客户端显示输入框. \n参数:strPlayer 玩家的GUID.,dwDlgID 输入框ID,任填.同GUID下ID必须唯一.,strContent 输入框内容.,dwTimeOut 输入框超时时间,单位:秒.,dwMaxLen 输入框最大输入长度.,strCallBack 输入框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,\n返回:成功或失败.\n",
	InputDlgEx="void  InputDlgEx(string  player,int  dlg_id,string  content,int  timeout,int  param_len,string  callback,string  param)\n发送显示通用输入框请求\n参数:player 玩家的GUID,dlg_id 输入框的标识符,content 输入框的内容,timeout 输入框超时时间,param_len 输入框输入长度限制,callback 回调函数,param 自定义参数,\n返回:无返回值.\n备注:param：由脚本作者来维护，当回调时，服务器自动将param作为参数传回，\n\n	如果希望将多个参数传入，则可以以'#'等分割符链接多个参数为一个字符串作为param，然后再callback函数中调用lualib:StrSplit(param, '#')解析出多个参数\n\n	回调函数格式：void callback(UINT32 dlg_id, const std::string&amp; player, const std::string&amp; input_str, const std::string&amp; param)\n参考:SysMsg_SendInputDlg,\n",
	SysMsg_SendMsgDlg="bool  SysMsg_SendMsgDlg(string  strPlayer,uint32  dwDlgID,string  strContent,uint32  dwTimeOut,string  strCallBack,string  strParam)\n通知客户端显示消息框. \n参数:strPlayer 玩家的GUID.,dwDlgID 消息框ID,任填.同GUID下ID必须唯一.,strContent 消息框内容.,dwTimeOut 消息框超时时间,单位:秒.,strCallBack 消息框回调函数名字.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,\n返回:成功或失败.\n",
	SysMsg_SendWebMsg="bool  SysMsg_SendWebMsg(string  strPlayer,string  strTitle,string  strURL,string  strParam)\n通知客户端显示Web页面框. \n参数:strPlayer 玩家的GUID.,strTitle 页面框标题.,strURL 网页URL路径.,strParam 由脚本作者来维护,当回调时服务器自动将strParam作为参数传回.,\n返回:成功或失败.\n",
	WebBoxEx="void  WebBoxEx(string  player_guid,string  title,string  url,string  param)\n发送显示Web页面框通知\n参数:player_guid 玩家的GUID,title 弹出的IE框所使用的标题,url 弹出的IE框所使用的URL地址,param 自定义参数,\n返回:无返回值.\n备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K\n\n	param：由脚本作者来维护\n\n	暂时用不到这个功能\n参考:SysMsg_SendWebMsg,\n",
	SysMsg_SendWebPage="bool  SysMsg_SendWebPage(string  strPlayer,string  strURL)\n通知客户端打开网页. \n参数:strPlayer 玩家的GUID.,strURL 网页URL路径.,\n返回:成功或失败.\n",
	WebBrowser="void  WebBrowser(string  player_guid,string  url)\n发送打开网页页面通知\n参数:player_guid 玩家的GUID,url 弹出的IE框所使用的URL地址,\n返回:无返回值.\n备注:url:考虑到有些URL地址很长，所以该函数定议的URL长度可以达到1K\n\n	param：由脚本作者来维护\n\n	暂时用不到这个功能\n参考:SysMsg_SendWebPage,\n",
	Hp="int32  Hp(string  strRole,bool  bLimit)\n取得角色的血量. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:血量.\n",
	GUID="string  GUID()\n系统中各种类型的物品的编号\n参数:\n返回:\n备注:在系统产生各种游戏事件时，\n\n	如：玩家进入地图，怪物死亡，玩家升级 等等 系统会传递一个用来区别于不同的角色，不同的怪物等。\n\n	这个编号是一个 16位的字符串，全游戏唯一，我们游戏中很多接口都需要传递这个guid的参数以便于区分不同的内容\n",
	Mp="int32  Mp(string  strRole,bool  bLimit)\n取得角色的蓝量. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:蓝量.\n",
	PhyAtk="int32  PhyAtk(string  strRole,bool  bLimit)\n取得角色的物攻. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:物攻.\n",
	TaoAtk="int32  TaoAtk(string  strRole,bool  bLimit)\n取得角色的道攻. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:道攻.\n",
	MagAtk="int32  MagAtk(string  strRole,bool  bLimit)\n取得角色的魔攻. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:魔攻.\n",
	on_item_disappear="void  on_item_disappear(string  strMap,string  strItem,uint16  wItemID,string  strItemKey,uint16  wX,uint16  wY)\n物品消失在地图时回调. \n参数:strMap 地图的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,wX 物品的X坐标.,wY 物品的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_npc_appear="void  on_npc_appear(string  strNPC,uint16  wNPCID,string  strNPCName,uint16  wX,uint16  wY)\nNPC出现在地图时回调. \n参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_npc_disappear="void  on_npc_disappear(string  strNPC,uint16  wNPCID,string  strNPCName,uint16  wX,uint16  wY)\nNPC消失在地图时回调. \n参数:strNPC NPC的GUID.,wNPCID NPC的ID.,strNPCName NPC的Name.,wX NPC的X坐标.,wY NPC的Y坐标.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_level_up="void  on_level_up(string  strRole,int32  iLevel)\n角色升级时回调. \n参数:strRole 角色的GUID.,iLevel 角色现在的等级.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_equip="bool  on_pre_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey)\n角色穿装备之前回调. \n参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,\n返回:true = 允许玩家穿装备, false = 阻止玩家穿装备.\n参考:eTriggerType,\n",
	on_post_equip="void  on_post_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey)\n角色穿装备回调. \n参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_un_equip="bool  on_pre_un_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey)\n角色脱装备之前回调. \n参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,\n返回:true = 允许玩家脱装备, false = 阻止玩家脱装备.\n参考:eTriggerType,\n",
	on_post_un_equip="void  on_post_un_equip(string  strRole,string  strEquip,uint16  wEquipID,string  strEquipKey)\n角色脱装备时回调. \n参数:strRole 角色的GUID.,strEquip 装备的GUID.,wEquipID 装备的ID.,strEquipKey 装备的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_move="void  on_move(string  strRole,uint16  wX,uint16  wY,uint8  wType)\n角色移动时回调. \n参数:strRole 角色的GUID.,wX 移动的X坐标.,wY 移动的Y坐标.,wType 移动类型. 0 = 走, 1 = 跑.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_spell="bool  on_pre_spell(string  strRole,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY,string  strTarget,string  strSkillKeyName)\n角色放技能前回调. \n参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name.,wX 技能施放坐标X.,wY 技能施放坐标Y.,strTarget 技能施放目标.,strSkillKeyName 技能的KeyName.,\n返回:true = 允许角色放技能, false = 阻止角色放技能.\n参考:eTriggerType,\n",
	on_spell="void  on_spell(string  strRole,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY,string  strTarget,string  strSkillKeyName)\n角色放技能时回调. \n参数:strRole 角色的GUID.,wSkillID 技能ID.,strSkillName 技能的Name.,wX 技能施放坐标X.,wY 技能施放坐标Y.,strTarget 技能施放目标.,strSkillKeyName 技能的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_mining="bool  on_pre_mining(string  strRole,string  strMapKey,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY)\n角色挖矿前回调. \n参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y.,\n返回:true = 允许角色放挖矿技能, false = 阻止角色放挖矿技能.\n参考:eTriggerType,\n",
	on_mining="void  on_mining(string  strRole,string  strMapKey,uint16  wSkillID,string  strSkillName,uint16  wX,uint16  wY)\n角色挖矿时回调. \n参数:strRole 角色的GUID.,strMapKey 挖矿地图的KeyName.,wSkillID 挖矿技能ID.,strSkillName 挖矿技能的Name.,wX 挖矿技能施放坐标X.,wY 挖矿技能施放坐标Y.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_item_apply="bool  on_pre_item_apply(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色使用道具前回调. \n参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:true = 允许角色使用道具, false = 阻止角色使用道具.\n参考:eTriggerType,\n",
	on_item_apply="void  on_item_apply(string  strRole,uint16  wItemID,string  strItemKey)\n角色使用道具时回调. \n参数:strRole 角色的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_item_pickup="bool  on_pre_item_pickup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色拾取道具前回调. \n参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:true = 允许角色拾取道具, false = 阻止角色拾取道具.\n参考:eTriggerType,\n",
	on_item_pickup="void  on_item_pickup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色拾取道具时回调. \n参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_item_drop="bool  on_pre_item_drop(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色扔道具前回调. \n参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:true = 允许角色扔道具, false = 阻止角色扔道具.\n参考:eTriggerType,\n",
	on_item_drop="void  on_item_drop(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色扔道具时回调. \n参数:strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,strItemKey 道具的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_die="bool  on_pre_die(string  strRole,string  strKiller)\n角色死亡之前回调. \n参数:strRole 角色的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许角色死亡, false = 阻止角色死亡.\n参考:eTriggerType,\n",
	on_post_die="void  on_post_die(string  strRole,string  strKiller)\n角色死亡时回调. \n参数:strRole 角色的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_kill="void  on_kill(string  strKiller,string  strRole)\n杀死角色时回调. \n参数:strKiller 杀手的GUID.,strRole 受害者的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_attack="void  on_attack(string  strRole,string  strAttacker)\n受攻击时回调. \n参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_damage_process="void  on_damage_process(string  strRole,string  strTarget,uint16  wSkillID)\n角色走伤害流程时回调. \n参数:strRole 伤害者的GUID.,strTarget 受害者的GUID.,wSkillID 伤害技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_restore_process="void  on_restore_process(string  strRole,string  strTarget,uint16  wSkillID)\n角色走恢复流程时回调. \n参数:strRole 治疗者的GUID.,strTarget 被治疗者的GUID.,wSkillID 治疗技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_teleport="void  on_teleport(string  strRole,uint16  wSkillID)\n角色走瞬移流程时回调. \n参数:strRole 角色的GUID.,wSkillID 技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_catch="bool  on_pre_catch(string  strRole,string  strTarget,uint16  wSkillID)\n角色抓宝宝之前回调. \n参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID.,\n返回:true = 允许角色捉宝宝, false = 阻止角色捉宝宝.\n参考:eTriggerType,\n",
	on_catch="void  on_catch(string  strRole,string  strTarget,uint16  wSkillID)\n角色抓宝宝时回调. \n参数:strRole 角色的GUID.,strTarget 宝宝的GUID.,wSkillID 技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_dig_meat="bool  on_pre_dig_meat(string  strRole,string  strTarget,uint16  wSkillID)\n角色挖肉之前回调. \n参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID.,\n返回:true = 允许角色挖肉, false = 阻止角色挖肉.\n参考:eTriggerType,\n",
	on_add_buff="void  on_add_buff(string  strRole,uint16  wBuffID,string  strHost)\n角色添加BUFF时回调. \n参数:strRole 角色的GUID.,wBuffID BUFF的ID.,strHost 施放BUFF角色的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_remove_buff="void  on_remove_buff(string  strRole,uint16  wBuffID)\n角色删除BUFF时回调. \n参数:strRole 角色的GUID.,wBuffID BUFF的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_drop="bool  on_pre_drop(string  strRole)\n角色爆道具之前回调(要不要爆东西). \n参数:strRole 角色的GUID.,\n返回:true = 允许角色爆装备, false = 阻止角色爆装备.\n参考:eTriggerType,\n",
	on_post_drop="void  on_post_drop(string  strRole)\n角色爆道具时回调. \n参数:strRole 角色的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_drop_one="bool  on_pre_drop_one(string  strMap,string  strRole,string  strItem,uint16  wItemID)\n角色爆道具之前回调(爆某具体的道具). \n参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,\n返回:true = 允许角色爆装备, false = 阻止角色爆装备.\n参考:eTriggerType,\n",
	on_post_drop_one="void  on_post_drop_one(string  strMap,string  strRole,string  strItem,uint16  wItemID)\n角色爆道具时回调(爆某具体的道具). \n参数:strMap 角色地图的GUID.,strRole 角色的GUID.,strItem 道具的GUID.,wItemID 道具的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_add_skill="void  on_add_skill(string  strRole,uint16  wSkillID)\n角色添加技能时触发. \n参数:strRole 角色的GUID.,wSkillID 技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_switch_skill="void  on_switch_skill(string  strRole,uint16  wSkillID,uint8  byActive)\n角色开关技能时触发. \n参数:strRole 角色的GUID.,wSkillID 技能的ID.,byActive 开关状态. 0 = 关, 1 = 开.,\n返回:无返回值.\n",
	on_summon="void  on_summon(string  strRole,uint16  wMonsterID,uint16  wLevel)\n角色召唤时触发. \n参数:strRole 角色的GUID.,wMonsterID 怪物的ID.,wLevel 宝宝召唤等级.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_process_pk="bool  on_pre_process_pk(string  strKiller,string  strVictim)\n角色处理PK值之前回调. \n参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,\n返回:true = 允许角色得到PK值, false = 阻止角色得到PK值.\n参考:eTriggerType,\n",
	on_post_process_pk="void  on_post_process_pk(string  strKiller,string  strVictim,int32  iPKRef)\n角色处理PK值时回调. \n参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_create="void  on_create(string  strObject)\n物品、NPC、怪物创建时回调. \n参数:strObject 对象的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_destroy="void  on_destroy(string  strObject)\n物品、NPC、怪物销毁时回调. \n参数:strObject 对象的GUID.,\n返回:无返回值.\n警告:服务器上没有调用过该触发器,功能未实现.\n参考:eTriggerType,\n",
	on_pre_enter_jump="bool  on_pre_enter_jump(string  strRole,string  strFromMap,string  strDestMap)\n角色进入跳转点之前回调. \n参数:strRole 角色的GUID.,strFromMap 源地图的GUID.,strDestMap 目标地图的GUID.,\n返回:true = 允许角色通过跳转点跳图, false = 阻止角色通过跳转点跳图.\n参考:eTriggerType,\n",
	on_equip_suit="void  on_equip_suit(string  strRole,uint16  wSuitID)\n角色穿上套装时回调. \n参数:strRole 角色的GUID.,wSuitID 套装ID.,\n返回:无返回值.\n警告:服务器上没有调用过该触发器,功能未实现.\n参考:eTriggerType,\n",
	on_un_equip_suit="void  on_un_equip_suit(string  strRole,uint16  wSuitID)\n角色脱下套装时回调. \n参数:strRole 角色的GUID.,wSuitID 套装ID.,\n返回:无返回值.\n警告:服务器上没有调用过该触发器,功能未实现.\n参考:eTriggerType,\n",
	on_item_amount_zero="void  on_item_amount_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色物品堆叠数为0时回调. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_item_use_zero="void  on_item_use_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色物品使用次数为0时回调. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_item_dur_zero="void  on_item_dur_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色装备耐久为0时回调. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,\n返回:无返回值.\n备注:只有物品类型为装备才会触发此回调\n参考:eTriggerType,\n",
	on_item_timeup="void  on_item_timeup(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色物品时效到期时回调. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_add_exp="void  on_add_exp(string  strRole,int32  iExp)\n角色杀怪得到经验时回调. \n参数:strRole 角色的GUID.,iExp 得到的经验值.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_player_relive="string  on_player_relive(string  player_guid)\n玩家复活之前\n参数:player_guid 玩家GUID,\n返回:\n备注:\n	lua_trigger_player_relive 玩家复活之前触发，回调函数:bool on_player_relive(const std::string&amp; player);\n\n",
	on_dungeon_end="void  on_dungeon_end(string  strMap,string  strMapKey)\n副本销毁时回调. \n参数:strMap 副本的GUID.,strMapKey 副本的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	SetDBNum="bool  SetDBNum(string  strKey,double  dbValue)\n在数据库中存储数值型变量. \n参数:strKey 变量名.,dbValue 变量值.,\n返回:成功或失败.\n",
	GetDBNum="double  GetDBNum(string  strKey)\n取得数据库中存储的数值型变量. \n参数:strKey 变量名.,\n返回:变量值.\n",
	SetDBStr="bool  SetDBStr(string  strKey,string  strValue)\n在数据库中存储字符型变量. \n参数:strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n",
	GetDBStr="string  GetDBStr(string  strKey)\n取得数据库中存储的字符型变量. \n参数:strKey 变量名.,\n返回:变量值.\n",
	SetDBNumEx="bool  SetDBNumEx(string  strKey,double  dbValue,uint8  byType)\n在数据库中存储数值型变量. \n参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,\n返回:成功或失败.\n",
	SetDBStrEx="bool  SetDBStrEx(string  strKey,string  dbValue,uint8  byType)\n在数据库中存储字符型变量. \n参数:strKey 变量名.,dbValue 变量值.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,\n返回:成功或失败.\n",
	GridAttr="bool  GridAttr(string  strMap,int32  iX,int32  iY,int32  iType)\n判断地图格子属性是否相符. \n参数:strMap 地图的GUID.,iX 地图X坐标.,iY 地图Y坐标.,iType 格子属性,1 = 不可移动点 2 = 魔法攻击阻挡 3 = 物理攻击阻挡 4 = 可穿透点 5 = 跳转点 6 = 复活点 7 = 摆摊点 8 = 安全区点 9 = 竞技区点 10 = PK区点 11 = 挖矿区点,\n返回:true = 是,false = 否.\n",
	Player_SetServantLevel="void  Player_SetServantLevel(string  strObject,uint8  byLevel)\n设置召唤宝宝的等级. \n参数:strObject 为玩家的GUID,则修改玩家所有的宝宝等级.为宝宝GUID,则修改宝宝的等级.,byLevel 宝宝的等级.,\n返回:无返回值.\n",
	Player_IsAntiIndulge="bool  Player_IsAntiIndulge(string  strPlayer)\n[此函数过期, 禁用]\n判断是否防沉迷玩家. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n参考:IsAntiIndulge,\n",
	on_billin="void  on_billin(string  strPlayer,int32  iBillinIngot)\n玩家在线冲值时回调. \n参数:strPlayer 玩家的GUID.,iBillinIngot 当次充值元宝数.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_mall="void  on_mall(string  strPlayer,int32  iBilloutIngot,int32  CostType,string  strItem)\n玩家在商城消费时回调. \n参数:strPlayer 玩家的GUID.,iBilloutIngot 当次消费的元宝数.,CostType 消费类型. 1 = 绑定, 2 = 不绑定.,strItem 购买物品的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	DelSkill="bool  DelSkill(string  strPlayer,string  strSkillKey)\n删除玩家技能. \n参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,\n返回:成功或失败.\n",
	DelAllSkill="bool  DelAllSkill(string  strPlayer)\n删除玩家所有技能. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n",
	GenTimerId="uint32  GenTimerId(string  strObject)\n根据对象,自动生成定时器ID. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,\n返回:定时器ID,无则返回0.\n",
	Map_BatchGenCampMonster="bool  Map_BatchGenCampMonster(string  strMap,string  strMonsterKey,int16  wCount,bool  bCanRelive,int32  iCamp)\n在地图中随机刷怪. \n参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营.,\n返回:成功或失败.\n",
	Map_GenCampMonster="bool  Map_GenCampMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,int16  wCount,bool  bCanRelive,int32  iCamp)\n在地图中指定范围刷怪. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,wCount 怪物数量.,bCanRelive 是否可以复活.,iCamp 阵营.,\n返回:成功或失败.\n",
	Map_GenSingleCampMonster="string  Map_GenSingleCampMonster(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint8  byDir,string  strMonsterKey,bool  bCanRelive,int32  iCamp)\n在地图中指定范围刷单只怪. \n参数:strMap 地图GUID.,wX 地图X坐标.,wY 地图Y坐标.,wRange 地图范围.,byDir 怪物方向.,strMonsterKey 怪物的KeyName.,bCanRelive 是否可以复活.,iCamp 阵营.,\n返回:怪物GUID.\n",
	KickByName="bool  KickByName(string  name,int32  type,string  reason)\n通过玩家角色名或账号名踢除玩家\n参数:name 玩家的角色名或账号名由参数type决定.,type type=2按角色名踢,type=3按账号名踢,reason 踢人的原因用于日志服务器记录,\n返回:成功返回true 玩家不再返回false.\n",
	Achievement="int32  Achievement(string  strRole)\n取得角色的成就. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:成就.\n",
	AddAvataBuff="bool  AddAvataBuff(string  strRole,int32  iAvata,string  strBuffKey,string  strSkillKey,uint32  dwTimes)\n给角色添加变身BUFF. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iAvata 变身模型ID.,strBuffKey BUFF的KeyName.,strSkillKey BUFF对应的技能KeyName.,dwTimes BUFF的持继时间,单位为秒.,\n返回:成功或失败.\n警告:如果BUFF表TimeLimit=0,则dwTimes参数自动失效.\n",
	AddBindGold="bool  AddBindGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n添加角色绑定金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddGold,AddBindGold,\n",
	AddBindIngot="bool  AddBindIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget)\n添加角色绑定元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddIngot,AddBindIngot,\n",
	AddExp="bool  AddExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n添加角色经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	AddGold="bool  AddGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n添加角色非绑定金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddGold,AddBindGold,\n",
	AddIngot="bool  AddIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget)\n添加角色非绑定元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddIngot,AddBindIngot,\n",
	AddIntegral="bool  AddIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget)\n添加角色积分. \n参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	AddSingleItem="string  AddSingleItem(string  strPlayer,string  strItemKey,int32  wCount,uint8  bBind,string  strDesc,string  strTarget)\n给予玩家单个物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.不能超过该物品的最大堆叠数,否则给予失败.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:新物品的GUID,出错返回''.\n",
	AddTimer="bool  AddTimer(string  strObject,uint32  dwTimerID,int32  iElapse,int32  iCount,string  strCallBack)\n给对象添加定时器. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,iElapse 定时器的触发间隔,单位:毫秒.,iCount 定时器的触发次数.设为-1时,无限触发.,strCallBack 定时器触发时,回调该函数.函数格式: 1 = 函数名 2 = 文件名:函数名.,\n返回:成功或失败.\n",
	Amulet="string  Amulet(string  strPlayer)\n取得玩家当前装备的守护. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	AntiIndulgeExpire="void  AntiIndulgeExpire(string  strPlayer)\n强制让角色的沉迷状态过期. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n",
	Armor="string  Armor(string  strPlayer)\n取得玩家当前装备的衣服. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Attr="int32  Attr(string  strRole,int32  iAttrName)\n获取角色属性值. \n参数:strRole 角色的GUID.,iAttrName 属性类型.,\n返回:属性值.\n备注:接口出错也会返回0.\n参考:eRoleAttr,\n",
	Brawn="int32  Brawn(string  strRole,bool  bLimit)\n取得角色的腕力. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:腕力.\n",
	ClearTimer="void  ClearTimer(string  strObject)\n清除对象的所有定时器. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,\n返回:无返回值.\n",
	CreateHeroForPlayer="bool  CreateHeroForPlayer(string  player,string  name,uint8  job,uint8  gender,string  callback,string  params)\n创建英雄\n参数:player 玩家guid.,name 英雄的姓名.,job 英雄的职业.,gender 英雄的性别.,callback 创建完成后的回调.,params 回调参数.,\n返回:创建请求是否成功.\n备注:该创建是异步过程，是否成功会通过回调函数告知。 function(player, err, name) player 玩家的guid err 错误码，0表示成功 name 欲创建的英雄名字\n",
	DeleteHeroForPlayer="bool  DeleteHeroForPlayer(string  player,string  hero)\n删除英雄（未开放）\n参数:player 玩家guid.,hero 英雄的guid.,\n返回:删除请求是否成功.\n备注:异步过程，是否成功会通过回调函数告知。\n",
	DelUnmatchedSkill="bool  DelUnmatchedSkill(string  strPlayer)\n删除玩家非本职业技能. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n",
	DestroyDummy="bool  DestroyDummy(string  dummy)\n清除一个假人\n参数:dummy 假人的GUID.,\n返回:清除是否成功.\n备注:该接口可以用来清除任何假人，包括玩家的英雄；如果这个假人需要保存，会自动保存到数据库（只有从数据库载入的才会保存）\n",
	Dir="int32  Dir(string  strRole)\n取得角色的方向. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:方向值,出错返回-1.\n",
	Energy="int32  Energy(string  strRole,bool  bLimit)\n取得角色的活力. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:活力.\n",
	EquipWeight="int32  EquipWeight(string  strRole,bool  bLimit)\n取得角色的装备负重. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:装备负重.\n",
	FindFirstBagFreeSlot="int32  FindFirstBagFreeSlot(string  strPlayer)\n获取玩家背包第一个空格位. \n参数:strPlayer 玩家的GUID.,\n返回:背包空格位,没有空格则返回-1.\n",
	Gem="string  Gem(string  strPlayer)\n取得玩家当前装备的宝石. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Gender="int32  Gender(string  strRole)\n取得角色的性别. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:性别.\n",
	GenDummy="string  GenDummy(string  name,uint8  job,uint8  gender,string  map,uint16  x,uint16  y,string  player_guid,uint32  life)\n在地图上生成一个假人\n参数:name 假人的名称.,job 假人的职业,gender 假人的性别.,map 生成目标地图.,x 生成目标坐标X.,y 生成目标坐标Y.,player_guid 假人的主人,life 假人的生命时间，单位是秒 0表示永远存在,\n返回:假人的GUID.\n备注:无\n警告:不要使用该假人干一些需要保存的事情，因为这个假人不会存档.\n",
	GenHeroForPlayer="bool  GenHeroForPlayer(string  player,string  hero,string  callback,string  params)\n载入玩家的某个英雄\n参数:player 玩家guid.,hero 英雄的guid.,callback 载入完成后的回调.,params 回调参数.,\n返回:载入请求是否成功.\n备注:异步过程，是否成功会通过回调函数告知。 function(player, err, hero) player 玩家的guid err 错误码，0表示成功 hero 英雄的guid\n",
	GetActiveCount="int  GetActiveCount(string  strPlayerName)\n取得玩家的总共活跃点数\n参数:strPlayerName 玩家的名字.,\n返回:取得玩家的活跃点数,如果玩家找不到返回0.\n",
	GetActiveCountToday="int  GetActiveCountToday(string  strPlayerName)\n取得玩家的活跃点数\n参数:strPlayerName 玩家的名字.,\n返回:取得玩家的活跃点数,如果玩家找不到返回0.\n",
	GetBagFree="int32  GetBagFree(string  strPlayer)\n取得玩家包裹空格子数量. \n参数:strPlayer 玩家的GUID.,\n返回:包裹空格子数,出错返回-1.\n参考:GetBagFree,GetBagFreeEx,BagFree,\n",
	GetBagFreeEx="int32  GetBagFreeEx(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse)\n取得玩家包裹空格子数量. \n参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,\n返回:包裹空格子数,出错返回-1.\n参考:GetBagFree,GetBagFreeEx,BagFree,\n",
	GetBagSize="int32  GetBagSize(string  strPlayer)\n取得玩家包裹大小. \n参数:strPlayer 玩家的GUID.,\n返回:包裹大小,出错返回-1.\n参考:GetBagSize,GetBagSizeEx,BagSize,\n",
	GetBagSizeEx="int32  GetBagSizeEx(string  strPlayer,bool  bBag,bool  bWarhouse,bool  bAdvWarhouse)\n取得玩家包裹大小. \n参数:strPlayer 玩家的GUID.,bBag 是否判断背包.,bWarhouse 是否判仓库.,bAdvWarhouse 是否判高级仓库.,\n返回:包裹大小,出错返回-1.\n参考:GetBagSize,GetBagSizeEx,BagSize,\n",
	GetBindGold="double  GetBindGold(string  strPlayer)\n取得角色绑定金币. \n参数:strPlayer 玩家的GUID.,\n返回:玩家绑定金币的数量.\n参考:GetGold,GetBindGold,\n",
	GetBindIngot="double  GetBindIngot(string  strPlayer)\n取得角色绑定元宝. \n参数:strPlayer 玩家的GUID.,\n返回:玩家绑定元宝的数量.\n参考:GetIngot,GetBindIngot,\n",
	GetBuffTime="int  GetBuffTime(string  strRole,string  strBuffKey)\n取得BUFF剩余时间. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,\n返回:剩余时间,单位秒.\n",
	GetDayInt="uint32  GetDayInt(string  strObject,string  strKey)\n取得对象实体上设置的数值型天变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,\n返回:变量的值,如果变量已跨天返回0.\n",
	GetDayStr="string  GetDayStr(string  strObject,string  strKey)\n取得对象实体上设置的字符型天变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,\n返回:变量的值,如果变量已跨天返回''.\n",
	GetDynamicAttr="table  GetDynamicAttr(string  strGUID,int32  iAttrSite)\n获取玩家动态属性. \n参数:strGUID 玩家或者物品的GUID.,iAttrSite 动态属性编号0-99.,\n返回:动态属性信息,返回lua table.如: local tAttrPair = lualib:GetDynamicAttr(strPlayer, 0); local iAttrType, iAttrVale = tAttrPair['attr_name'], tAttrPair['attr_value'];\n参考:eRoleAttr,\n",
	GetExp="double  GetExp(string  strPlayer)\n获取角色经验. \n参数:strPlayer 玩家的GUID.,\n返回:当前经验值.\n",
	GetFamilyCastles="string  GetFamilyCastles(string  strFamily)\n获取行会的占领城堡. \n参数:strFamily 行会的GUID.,\n返回:行会占领的城堡,多个用&amp;分隔,没有则返回''.\n",
	GetFamilyMembers="table  GetFamilyMembers(string  strGuid,bool  bIsOnline)\n返回玩家所属行会成员的列表\n参数:strGuid 玩家GUID或者行会的GUID.,bIsOnline 是否只取在线成员.,\n返回:行会成员列表的lua table.\n",
	GetGold="double  GetGold(string  strPlayer)\n取得角色非绑定金币. \n参数:strPlayer 玩家的GUID.,\n返回:玩家非绑定金币的数量.\n参考:GetGold,GetBindGold,\n",
	GetIngot="double  GetIngot(string  strPlayer)\n取得角色非绑定元宝. \n参数:strPlayer 玩家的GUID.,\n返回:玩家非绑定元宝的数量.\n参考:GetIngot,GetBindIngot,\n",
	GetIntegral="double  GetIntegral(string  strPlayer)\n获取角色积分. \n参数:strPlayer 玩家的GUID.,\n返回:角色积分.\n",
	GetItemsByKeys="table  GetItemsByKeys(string  strPlayer,string  strKeys,bool  bEquip,bool  bBag,bool  bWarehouse,bool  bWarehouseAdv)\n根据KeyName取得玩家物品的GUID列表\n参数:strPlayer 玩家GUID.,strKeys 物品的KeyName,使用多个KeyName时使用Key1#Key2....#Keyn的方式.,bEquip 是否查找装备栏,bBag 是否查找包裹,bWarehouse 是否查找仓库,bWarehouseAdv 是否查找高级仓库,\n返回:返回符合条件的物品GUID列表,结果存放在lua table中.\n",
	GetLocalTime="uint32  GetLocalTime(void  )\n[此函数过期, 禁用]\n从1970年1月1日0时0分0到现在经过的秒数. \n参数: ,\n返回:时间秒数.\n参考:GetTime,GetLocalTime,GetAllTime,\n",
	GetLuaPerformance="table  GetLuaPerformance(void  )\n查询所有脚本的性能参数. \n参数: ,\n返回:返回lua table. 如:local tPerformances = lualib:GetLuaPerformance(); local strLuaName, strFuncName, dwCount, dwTotal = tPerformances['File'], tPerformances['Function'], tPerformances['Count'], tPerformances['Total'];\n",
	GetPlayerCurrentHeroList="table  GetPlayerCurrentHeroList(string  player)\n获取玩家已经载入的英雄列表\n参数:player 玩家的GUID.,\n返回:英雄列表.\n备注:返回一个数组，每个项包含英雄的guid\n",
	GetPlayerHeroList="table  GetPlayerHeroList(string  player)\n获取玩家所有的英雄列表\n参数:player 玩家的GUID.,\n返回:英雄列表.\n备注:返回一个数组，每个项包含英雄的guid，名字，职业等\n",
	GetQuestAccomplishing="string  GetQuestAccomplishing(uint16  wQuestID)\n取得任务完成时的追踪文本\n参数:wQuestID 任务ID.,\n返回:任务追踪文本,如果任务找不到返回''.\n",
	GetQuestProgressing="string  GetQuestProgressing(uint16  wQuestID)\n取得任务进行中的追踪文本\n参数:wQuestID 任务ID.,\n返回:任务追踪文本,如果任务找不到返回''.\n",
	GetTickCount="uint32  GetTickCount(void  )\n返回系统的时钟嘀答数. \n参数: ,\n返回:嘀答数.\n",
	GetTime="uint32  GetTime(void  )\n[此函数过期, 禁用]\n从1970年1月1日0时0分0到现在经过的秒数. \n参数: ,\n返回:时间秒数.\n参考:GetTime,GetLocalTime,GetAllTime,\n",
	GetTitle="int32  GetTitle(string  strPlayer)\n取得玩家当前称号. \n参数:strPlayer 玩家的GUID.,\n返回:当前称号ID,无则返回0.\n",
	GetWeekInt="uint32  GetWeekInt(string  strObject,string  strKey)\n取得对象实体上设置的数值型周变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,\n返回:变量的值,如果变量已跨周返回0.\n",
	GetWeekStr="string  GetWeekStr(string  strObject,string  strKey)\n取得对象实体上设置的字符型周变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,\n返回:变量的值,如果变量已跨周返回''.\n",
	GMLevel="int32  GMLevel(string  strPlayer)\n获取玩家的GM等级. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的GM等级.\n",
	God="void  God(string  strPlayer)\n开启上帝模式. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n备注:调用该接口会在日志服务器留下记录. lulib:God(strPlayer);\n警告:请慎重使用该接口,以避免GM权限混乱引起重大事故.\n",
	Hair="int32  Hair(string  strRole)\n取得角色的发型. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:发型编号.\n参考:Hair,SetHair,\n",
	HairColor="int32  HairColor(string  strRole)\n取得角色的头发颜色. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:头发颜色.\n参考:HairColor,SetHairColor,\n",
	HasFamily="bool  HasFamily(string  strFamilyName)\n判断某个行会是否存在\n参数:strFamilyName 行会的名字.,\n返回:存在或不存在.\n",
	Head="int32  Head(string  strRole)\n取得角色的头像. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:头像编号.\n参考:Head,SetHead,\n",
	Helmet="string  Helmet(string  strPlayer)\n取得玩家当前装备的头盔. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	HpPoint="int32  HpPoint(string  strRole)\n取得角色的HP属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:HP属性点.\n",
	IO_DeleteDir="bool  IO_DeleteDir(string  strDirName)\n删除目录. \n参数:strDirName 文件目录名.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_DeleteFile="bool  IO_DeleteFile(string  strFileName)\n删除文件. \n参数:strFileName 文件名.,\n返回:成功或失败.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_GetFileString="string  IO_GetFileString(string  strFileName)\n读取文本文件所有内容. \n参数:strFileName 文件名.,\n返回:文件内容.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IsAntiIndulge="bool  IsAntiIndulge(string  strPlayer)\n判断玩家是否为防沉迷帐号. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	IsCastleWarNull="bool  IsCastleWarNull(string  strCastleName)\n判断某城堡战是否注册过. \n参数:strCastleName 城堡名.,\n返回:是或否.\n",
	IsInRegion="bool  IsInRegion(table  tObject,uint16  wX,uint16  wY)\n判断坐标是否在区域中. \n参数:tObject tObject[1] = 0时,tObject[2]为区域中心点X坐标,tObject[3]为区域中心点Y坐标,tObject[4]为区域中心X半径,tObject[5]为区域中心Y半径. tObject[1] = 1时,tObject[2]为区域左上角X坐标,tObject[3]为区域左上角Y坐标,tObject[4]为区域宽度,tObject[5]为区域高度.,wX 判断点的X坐标.,wY 判断点的Y坐标.,\n返回:是或否.\n",
	Item_GetBySite="string  Item_GetBySite(string  strPlayer,uint16  wSite)\n根据玩家背包格子位取物品GUID. \n参数:strPlayer 玩家的GUID.,wSite 背包格子位.,\n返回:物品的GUID,没有物品返回''.\n参考:eRoleSite,\n",
	Item_GetCustomVarInt="int32  Item_GetCustomVarInt(string  strPlayer,string  strItem,string  strKey)\n[此函数过期, 禁用]\n取得物品实体上存储的整型数值变量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回0.\n警告:该接口已过期,不再提供技术支持.\n参考:GetInt,\n",
	Item_GetCustomVarStr="string  Item_GetCustomVarStr(string  strPlayer,string  strItem,string  strKey)\n[此函数过期, 禁用]\n取得物品实体上存储的字符型变量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回''.\n警告:该接口已过期,不再提供技术支持.\n参考:GetStr,\n",
	Item_GetID="uint16  Item_GetID(string  strPlayer,string  strItem)\n取得物品的模版ID. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品模版ID,具体类型请参考策划Item表.出错返回0.\n",
	Item_GetKeyName="string  Item_GetKeyName(string  strPlayer,string  strItem)\n[此函数过期, 禁用]\n根据物品GUID取得KeyName. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的KeyName,如果物品不存在返回''.\n参考:KeyName,Name,\n",
	Item_GetName="string  Item_GetName(string  strPlayer,string  strItem)\n[此函数过期, 禁用]\n根据物品GUID取得Name. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:物品的Name,如果物品不存在返回''.\n参考:KeyName,Name,\n",
	Item_GetPosX="int32  Item_GetPosX(string  strMap,string  strItem)\n[此函数过期, 禁用]\n根据物品GUID取得X坐标. \n参数:strMap 物品所属地图GUID.,strItem 物品的GUID.,\n返回:物品的X坐标,如果物品不存在返回0.\n参考:X,Y,\n",
	Item_GetPosY="int32  Item_GetPosY(string  strMap,string  strItem)\n[此函数过期, 禁用]\n根据物品GUID取得Y坐标. \n参数:strMap 物品所属地图GUID.,strItem 物品的GUID.,\n返回:物品的Y坐标,如果物品不存在返回0.\n参考:X,Y,\n",
	Item_IsTimeLimit="bool  Item_IsTimeLimit(string  strPlayer,string  strItem)\n根据物品GUID判断该物品是否时限道具. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:是或否.\n",
	Item_NotifyCustomParam="void  Item_NotifyCustomParam(string  strPlayer,string  strItem,string  strKey)\n[此函数过期, 禁用]\n向物品的主人通知物品自定义变量更新. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,strKey 变量名.,\n返回:无返回值.\n参考:NotifyVar,\n",
	Item_SetCustomVarInt="bool  Item_SetCustomVarInt(string  strPlayer,string  strItem,string  strKey,int32  iValue)\n[此函数过期, 禁用]\n在物品实体上存储整型数值变量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n参考:SetInt,\n",
	Item_SetCustomVarStr="bool  Item_SetCustomVarStr(string  strPlayer,string  strItem,string  strKey,string  strValue)\n[此函数过期, 禁用]\n在物品实体上存储字符型变量. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品GUID.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n参考:SetStr,\n",
	ItemCount="int32  ItemCount(string  strPlayer,string  strItemKey)\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n",
	ItemCountEx="int32  ItemCountEx(string  strPlayer,string  strItemKey,uint8  bBindType,bool  bEquip,bool  bBag,bool  bWarhouse,bool  bAdvWarehouse)\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBindType 绑定类型, 0 = 必须非绑定 1 = 必须绑定 2 = 绑定/非绑定,bEquip 是否判断装备栏.,bBag 是否判断背包.,bWarhouse 是否判断仓库.,bAdvWarehouse 是否判断高级仓库.,\n返回:符合条件的物品数量,出错返回-1.\n",
	ItemDropFreezeTime="uint32  ItemDropFreezeTime(string  strItem)\n取得物品的掉落冻结时间\n参数:strItem 物品GUID.,\n返回:返回物品掉落冻结时间.\n备注:冻结时间:掉落后多久可以被别人拾取.\n",
	ItemDropHost="string  ItemDropHost(string  strItem)\n取得物品的掉落源\n参数:strItem 物品GUID.,\n返回:返回掉落源的GUID, 可能是玩家、怪物、地图、系统('').\n",
	ItemDropTime="uint32  ItemDropTime(string  strItem)\n取得物品的掉落时间\n参数:strItem 物品GUID.,\n返回:返回物品掉落时间.\n参考:Time2Str,\n",
	ItemDropType="int  ItemDropType(string  strItem)\n取得物品的掉落类型\n参数:strItem 物品GUID.,\n返回:返回物品掉落类型,参考lua_logic_define.lua.\n",
	ItemKeyName="string  ItemKeyName(string  strPlayer,string  strItem)\n[此函数过期, 禁用]\n根据物品的GUID取得物品的KeyName. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:物品的KeyName,如果物品或玩家不存在返回''.\n备注:已过期的接口,不再提供技术支持.\n参考:KeyName,\n",
	ItemRole="string  ItemRole(string  strItem)\n取得物品的归属\n参数:strItem 物品GUID.,\n返回:物品归属者GUID,如果无归属或物品不存在返回''.\n参考:Item_GetRole,\n",
	Job="int32  Job(string  strRole)\n取得角色的职业. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:职业.\n",
	JuJu="string  JuJu(string  strPlayer)\n取得玩家当前装备的符咒. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	LastAtkTime="uint32  LastAtkTime(string  strPlayer)\n取得玩家的最后攻击时间TICK值. \n参数:strPlayer 玩家的GUID.,\n返回:最后攻击时的TICK.\n",
	LastMoveTime="uint32  LastMoveTime(string  strPlayer)\n取得玩家的最后移动时间TICK值. \n参数:strPlayer 玩家的GUID.,\n返回:最后移动时的TICK.\n",
	LastTalkTime="uint32  LastTalkTime(string  strPlayer)\n取得玩家的最后聊天时间TICK值. \n参数:strPlayer 玩家的GUID.,\n返回:最后聊天时的TICK.\n",
	LeaveTeam="void  LeaveTeam(string  strPlayer)\n离开队伍. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n备注:玩家不存在或者玩家没有队伍也可以调用，但会提示一个错误.\n",
	Level="int32  Level(string  strRole)\n取得角色的等级. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:等级.\n",
	LockSwitch="int32  LockSwitch(string  strRole)\n取得角色的安全锁开关状态. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:安全锁开关状态,0: 未解锁 1: 已解锁.\n参考:LockSwitch,SetLockSwitch,\n",
	Log="void  Log(string  strRoleName,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget)\n向日志服务器上传角色的物品操作行程日志. \n参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,\n返回:无返回值.\n",
	LogDetail="void  LogDetail(string  strRoleName,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget,string  strDetail)\n向日志服务器上传角色的物品操作行程日志. \n参数:strRoleName 角色名.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节,\n返回:无返回值.\n",
	LogDetailWithId="void  LogDetailWithId(string  strRoleName,int  iAction,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget,string  strDetail)\n向日志服务器上传角色的物品操作行程日志. \n参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,strDetail 具体细节,\n返回:无返回值.\n",
	LogWithId="void  LogWithId(string  strRoleName,int  iAction,string  strItemKey,string  strItem,int32  iSrcValue,int32  iRefValue,string  strDescript,string  strTarget)\n向日志服务器上传角色的物品操作行程日志. \n参数:strRoleName 角色名.,iAction 日志类型,请查询lua_logic_define.lua.,strItemKey 物品名.,strItem 物品GUID.,iSrcValue 物品原数值.,iRefValue 物品改变量.,strDescript 物品某数值作出改变的原因.,strTarget 造成物品某数值作出改变的发起者.,\n返回:无返回值.\n",
	LuckCurse="int32  LuckCurse(string  strRole)\n取得角色的幸运诅咒. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:幸运诅咒.\n",
	MagAtkPoint="int32  MagAtkPoint(string  strRole)\n取得角色的魔攻属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:魔攻属性点.\n",
	MagDef="int32  MagDef(string  strRole,bool  bLimit)\n取得角色的魔防. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:魔防.\n",
	MagDefPoint="int32  MagDefPoint(string  strRole)\n取得角色的魔防属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:魔防属性点.\n",
	Mail="bool  Mail(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,table  item_templates)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.\n\n item_templates 格式:\n\n {\n\n 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)\n\n '强效金创药', 1, 1,\n\n '强效魔法药', 1, 1,\n\n '灵元珠', 10, 1,\n\n '新手之剑', 1, 1,\n\n '新手头盔', 1, 1,\n\n },\n返回:true表示投递成功,false表示失败.\n",
	MailJsonItem="bool  MailJsonItem(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,string  json_item)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,json_item 附件物品实体,json格式描述.,\n返回:true表示投递成功,false表示失败.\n",
	MailToPlayer="bool  MailToPlayer(string  sender_name,string  receiver_guid,string  text,int32  gold,int32  yuanbao,table  item_templates)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_guid 收件人guid,即玩家的guid.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,item_templates 附件物品,lua table格式描述,不超过5个.\n\n item_templates 格式:\n\n {\n\n 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)\n\n '强效金创药', 1, 1,\n\n '强效魔法药', 1, 1,\n\n '灵元珠', 10, 1,\n\n '新手之剑', 1, 1,\n\n '新手头盔', 1, 1,\n\n },\n返回:true表示投递成功,false表示失败.\n",
	Map_GenGold="string  Map_GenGold(string  strMap,uint16  wX,uint16  wY,int32  iGold,bool  bMustEmpty,uint32  dwFreeze,int  iDropType,string  strDropHost)\n在地图上指定位置刷出金币. \n参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,iGold 金币数量.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,iDropType 1 = 玩家扔, 2 = 玩家爆, 3 = 怪物爆, 4 = 脚本刷, 5 = 地图刷, 6 = 背包满爆地图上.,strDropHost 根据掉落类型有不同的意思, 1/2/4/6 = 可以直接拾取者, 3/5 = 被忽略的参数.,\n返回:物品的GUID,失败返回''.\n参考:ModifyItemGold,GetItemGold,\n",
	Map_GenItemEx="string  Map_GenItemEx(string  strMap,uint16  wX,uint16  wY,string  strItemKey,uint16  wCount,bool  bMustEmpty,uint32  dwFreeze,string  strPlayer)\n在地图上指定位置刷出物品. \n参数:strMap 地图GUID.,wX X坐标.,wY Y坐标.,strItemKey 物品的KeyName.,wCount 物品数量,必须不大于最大堆叠数.,bMustEmpty 是否必须在空格子上刷.,dwFreeze 生成后物品的拒绝拾取时间,单位秒.,strPlayer 可以直接拾取的玩家.,\n返回:物品的GUID,失败返回''.\n",
	Map_GetCustomVarInt="int32  Map_GetCustomVarInt(string  strMap,string  strKey)\n[此函数过期, 禁用]\n取得存储在地图实体上的整型数值变量. \n参数:strMap 地图GUID.,strKey 变量名.,\n返回:变量值.\n参考:GetInt,\n",
	Map_GetCustomVarStr="string  Map_GetCustomVarStr(string  strMap,string  strKey)\n[此函数过期, 禁用]\n取得存储在地图实体上的字符型变量. \n参数:strMap 地图GUID.,strKey 变量名.,\n返回:变量值.\n参考:GetStr,\n",
	Map_GetDistance="uint16  Map_GetDistance(uint16  wSourX,uint16  wSourY,uint16  wDestX,uint16  wDestY)\n[此函数过期, 禁用]\n取得地图上二点间的距离. \n参数:wSourX 源坐标X点.,wSourY 源坐标Y点.,wDestX 目标坐标X点.,wDestY 目标坐标Y点.,\n返回:返回二点间距离.\n",
	Map_GetGridObjList="table  Map_GetGridObjList(string  strMap,uint16  wX,uint16  wY,uint16  wRange)\n获取地图区域内的对象列表. \n参数:strMap 地图的GUID.,wX X坐标.,wY Y坐标.,wRange 范围.,\n返回:区域内对象列表,返回lua table.\n",
	Map_GetMapKeyName="string  Map_GetMapKeyName(string  strMap)\n[此函数过期, 禁用]\n取得地图的KeyName. \n参数:strMap 地图的GUID.,\n返回:地图的KeyName,出错返回''.\n警告:该接口已过期,不再提供技术支持.\n参考:KeyName,\n",
	Map_GetMapName="string  Map_GetMapName(string  strMap)\n[此函数过期, 禁用]\n取得地图的Name. \n参数:strMap 地图的GUID.,\n返回:地图的Name,出错返回''.\n警告:该接口已过期,不再提供技术支持.\n参考:Name,\n",
	Map_GetMapPlayers="table  Map_GetMapPlayers(string  strMap,bool  bIgnoreDied)\n获取地图内的玩家列表. \n参数:strMap 地图的GUID.,bIgnoreDied 是否忽略死亡角色.,\n返回:区域内玩家列表,返回lua table.\n",
	Map_RemoveMonster="bool  Map_RemoveMonster(string  strMap,string  strMonsterKey)\n清理地图中的怪物. \n参数:strMap 地图GUID.,strMonsterKey 怪物的KeyName.,\n返回:成功或失败.\n",
	Map_RemoveNpc="bool  Map_RemoveNpc(string  strMap,string  strNpcKey)\n清理地图中的NPC. \n参数:strMap 地图GUID.,strNpcKey NPC的KeyName.,\n返回:成功或失败.\n",
	Map_SetCustomVarInt="bool  Map_SetCustomVarInt(string  strMap,string  strKey,uint32  iValue)\n[此函数过期, 禁用]\n在地图实体上存储整型数值变量. \n参数:strMap 地图GUID.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n参考:SetInt,\n",
	Map_SetCustomVarStr="bool  Map_SetCustomVarStr(string  strMap,string  strKey,string  strValue)\n[此函数过期, 禁用]\n在地图实体上存储字符型变量. \n参数:strMap 地图GUID.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n参考:SetStr,\n",
	Map_SetOffTimer="bool  Map_SetOffTimer(string  map_guid,uint32  timer_id)\n[此函数过期, 禁用]\n取消地图定时器. \n参数:map_guid ,timer_id ,\n返回:\n参考:DisableTimer,\n",
	Map_SetOnTimer="bool  Map_SetOnTimer(string  strMap,uint32  dwTimerID,uint32  dwTimes,uint32  dwCount)\n[此函数过期, 禁用]\n给地图添加定时器. \n参数:strMap ,dwTimerID ,dwTimes ,dwCount ,\n返回:\n参考:AddTimer,\n",
	MapCanRide="bool  MapCanRide(string  strMapKey)\n判断地图是否可以上坐骑. \n参数:strMapKey 地图的KeyName.,\n返回:是或否.\n",
	MapKeyName="string  MapKeyName(string  strRole)\n[此函数过期, 禁用]\n根据角色GUID取得角色当前地图的KeyName. \n参数:strRole 角色的GUID,角色可以是玩家、怪物、NPC.,\n返回:角色当前地图的KeyName,如果角色不存在返回''.\n备注:已过期的接口,不再提供技术支持.\n参考:KeyName,\n",
	MD5="string  MD5(string  strCode)\n将字符串进行MD5加密. \n参数:strCode 源字符串.,\n返回:32字节MD码.\n",
	Medal="string  Medal(string  strPlayer)\n取得玩家当前装备的勋章. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Meritor="int32  Meritor(string  strRole)\n取得角色的功勋. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:功勋.\n",
	ModifyItemGold="bool  ModifyItemGold(string  strItem,int32  iGold)\n修改物品的金币\n参数:strItem 物品GUID.,iGold 修改后的金币数.,\n返回:成功或失败.\n参考:Map_GenGold,GetItemGold,\n",
	Monster_AddBuff="bool  Monster_AddBuff(string  strMonster,string  strBuffKey,uint32  dwTimes)\n[此函数过期, 禁用]\n给怪物添加BUFF. \n参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName.,dwTimes BUFF的持继时间,单位为秒.,\n返回:成功或失败.\n参考:AddBuff,\n",
	Monster_DataRow="table  Monster_DataRow(string  strMonsterKey)\n根据怪物KeyName取得该怪物的配置表结构. \n参数:strMonsterKey 怪物的KeyName.,\n返回:物品的配置表结构.\n",
	Monster_DelBuff="bool  Monster_DelBuff(string  strMonster,string  strBuffKey)\n[此函数过期, 禁用]\n删除怪物BUFF. \n参数:strMonster 怪物的GUID.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,\n返回:成功或失败.\n参考:DelBuff,\n",
	Monster_GetCurTarget="string  Monster_GetCurTarget(string  strMonster)\n取得怪物的攻击目标. \n参数:strMonster 怪物的GUID.,\n返回:攻击目标的GUID,出错返回''.\n参考:Monster_GetAttackTarget,\n",
	Monster_GetCustomVarInt="int32  Monster_GetCustomVarInt(string  strMonster,string  strKey)\n[此函数过期, 禁用]\n取得对象实体上存储的整型数值变量. \n参数:strMonster 怪物的GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回0.\n警告:该接口已过期,不再提供技术支持.\n参考:GetInt,\n",
	Monster_GetCustomVarStr="string  Monster_GetCustomVarStr(string  strMonster,string  strKey)\n[此函数过期, 禁用]\n取得对象实体上存储的字符型变量. \n参数:strMonster 怪物的GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回''.\n警告:该接口已过期,不再提供技术支持.\n",
	Monster_GetDropOwner="string  Monster_GetDropOwner(string  strMonster)\n获得怪物掉落归属玩家. \n参数:strMonster 怪物GUID.,\n返回:掉落归属的玩家GUID.\n备注:如果怪物无归属返回''\n",
	Monster_GetHateList="table  Monster_GetHateList(string  strMonster)\n取得怪物的仇恨列表. \n参数:strMonster 怪物的GUID.,\n返回:怪物的仇恨列表,返回lua table. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Tick' = tick, 'Elapse' = elapse}, ....}\n",
	Monster_GetIntProp="double  Monster_GetIntProp(string  strMonster,int32  iAttrType)\n[此函数过期, 禁用]\n取得怪物的数值型属性值. \n参数:strMonster 怪物的GUID.,iAttrType 属性类型,过期接口不再详述.,\n返回:属性值.\n警告:早期接口,不再提供技术支持.\n",
	Monster_GetKeyName="string  Monster_GetKeyName(string  strMonster)\n[此函数过期, 禁用]\n根据怪物GUID取得怪物KeyName. \n参数:strMonster 怪物的GUID.,\n返回:怪物的KeyName,如果对象不存在返回''.\n参考:KeyName,Name,\n",
	Monster_GetMap="string  Monster_GetMap(string  strMonster)\n[此函数过期, 禁用]\n取得怪物当前地图的GUID. \n参数:strMonster 怪物的GUID.,\n返回:怪物当前地图的GUID,出错返回''.\n参考:MapGuid,\n",
	Monster_GetPosX="int32  Monster_GetPosX(string  strMonster)\n[此函数过期, 禁用]\n根据怪物的GUID取得X坐标. \n参数:strMonster 怪物的GUID.,\n返回:怪物的X坐标,如果怪物不存在返回-1.\n参考:X,Y,\n",
	Monster_GetPosY="int32  Monster_GetPosY(string  strMonster)\n[此函数过期, 禁用]\n根据怪物的GUID取得Y坐标. \n参数:strMonster 怪物的GUID.,\n返回:怪物的Y坐标,如果怪物不存在返回-1.\n参考:X,Y,\n",
	Monster_IsHasBuff="bool  Monster_IsHasBuff(string  strMonster,uint16  wBuffID)\n[此函数过期, 禁用]\n判断怪物是否拥有某个BUFF. \n参数:strMonster 怪物的GUID.,wBuffID BUFF的ID.,\n返回:是或否.\n参考:HasBuff,\n",
	Monster_JumpXY="void  Monster_JumpXY(string  strMap,string  strMonster,uint16  wX,uint16  wY,uint16  wRange)\n让怪物跳转到某地图. \n参数:strMap 地图的GUID.,strMonster 怪物的GUID.,wX 跳转点的X坐标.,wY 跳转点的Y坐标.,wRange 跳转点的范围.,\n返回:无返回值.\n",
	Monster_Kill="bool  Monster_Kill(string  strMonster)\n[此函数过期, 禁用]\n杀死怪物. \n参数:strMonster 怪物的GUID.,\n返回:成功或失败.\n参考:Kill,\n",
	Monster_SetCustomVarInt="bool  Monster_SetCustomVarInt(string  strMonster,string  strKey,int32  iValue)\n[此函数过期, 禁用]\n在对象实体上存储整型数值变量. \n参数:strMonster 怪物的GUID.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n参考:SetInt,\n",
	Monster_SetCustomVarStr="bool  Monster_SetCustomVarStr(string  strMonster,string  strKey,string  strValue)\n[此函数过期, 禁用]\n在对象实体上存储字符型变量. \n参数:strMonster 怪物的GUID.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n参考:SetStr,\n",
	Monster_SetPanelSize="bool  Monster_SetPanelSize(string  strMonster,uint16  wWidth,uint16  wHeight)\n[此函数过期, 禁用]\n设置角色NPC面板的size. \n参数:strMonster 怪物的GUID.,wWidth 面板的宽度.,wHeight 面板的高度.,\n返回:成功或失败.\n参考:SetPanelSize,\n",
	Monster_SpellTargetEx="bool  Monster_SpellTargetEx(string  strMonster,string  strSkillKey,string  strTarget)\n让怪物施放技能. \n参数:strMonster 怪物的GUID.,strSkillKey 技能的KeyName.,strTarget 技能目标,可以是怪物、玩家、英雄.,\n返回:成功或失败.\n",
	Monster_Type="int32  Monster_Type(string  strMonsterKey)\n取得怪物的类型. \n参数:strMonsterKey 怪物的KeyName.,\n返回:怪物的类型,1 = 普通怪 2 = 精英怪 3 = 头目 4 = BOSS 5 = 守卫 6 = 守城怪 7 = 镖车.\n",
	Mount="string  Mount(string  strPlayer)\n取得玩家当前装备的坐骑. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	MpPoint="int32  MpPoint(string  strRole)\n取得角色的MP属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:MP属性点.\n",
	Necklace="string  Necklace(string  strPlayer)\n取得玩家当前装备的项链. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Now="string  Now(void  )\n取得当前时间的年-月-日 时:分:秒. \n参数: ,\n返回:当前时间的年-月-日 时:分:秒.\n",
	Npc_GetCustomVar="string  Npc_GetCustomVar(string  strNpc,string  strKey)\n[此函数过期, 禁用]\n取得NPC实体上存储的字符型变量. \n参数:strNpc NPC的GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回''.\n警告:该接口已过期,不再提供技术支持.\n参考:GetStr,\n",
	Npc_GetKeyName="string  Npc_GetKeyName(string  strNpc)\n[此函数过期, 禁用]\n取得NPC的KeyName. \n参数:strNpc NPC的GUID.,\n返回:NPC的KeyName.\n参考:KeyName,\n",
	Npc_GetPosX="int32  Npc_GetPosX(string  strNpc)\n[此函数过期, 禁用]\n根据NPC的GUID取得X坐标. \n参数:strNpc NPC的GUID.,\n返回:NPC的X坐标,如果NPC不存在返回-1.\n参考:X,Y,\n",
	Npc_GetPosY="int32  Npc_GetPosY(string  strNpc)\n[此函数过期, 禁用]\n根据NPC的GUID取得Y坐标. \n参数:strNpc NPC的GUID.,\n返回:NPC的Y坐标,如果NPC不存在返回-1.\n参考:X,Y,\n",
	Npc_SetCustomVar="bool  Npc_SetCustomVar(string  strNpc,string  strKey,string  strValue)\n[此函数过期, 禁用]\n在NPC实体上存储字符型变量. \n参数:strNpc NPC的GUID.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n参考:SetStr,\n",
	Npc_SetPanelSize="bool  Npc_SetPanelSize(string  strNpc,uint16  wWidth,uint16  wHeight)\n[此函数过期, 禁用]\n设置NPC面板的size. \n参数:strNpc NPC的GUID.,wWidth 面板的宽度.,wHeight 面板的高度.,\n返回:成功或失败.\n参考:SetPanelSize,\n",
	OnGloryTrigger="void  OnGloryTrigger(string  player_guid,int32  action,string  item_guid,int32  ref_value,string  descript,string  target_name)\n产生一个成就的触发事件. \n参数:player_guid 玩家的guid.,action 触发类型.,item_guid 物品的guid（相关物品的guid，如果有的话）.,ref_value 参考值（相关的参考值，如果有的话）.,descript 描述.,target_name 相关目标名称(如果有的话).,\n返回:无返回值.\n",
	PhyAtkPoint="int32  PhyAtkPoint(string  strRole)\n取得角色的物攻属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:物攻属性点.\n",
	PhyDef="int32  PhyDef(string  strRole,bool  bLimit)\n取得角色的物防. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:物防.\n",
	PhyDefPoint="int32  PhyDefPoint(string  strRole)\n取得角色的物防属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:物防属性点.\n",
	Pk="int32  Pk(string  strRole)\n取得角色的PK值. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:PK值.\n",
	Player_AddBuff="bool  Player_AddBuff(string  strPlayer,string  strBuffKey,uint32  dwTimes)\n[此函数过期, 禁用]\n给角色添加BUFF. \n参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName如果为''则删除所有buff.,dwTimes BUFF的持继时间,单位为秒.,\n返回:成功或失败.\n参考:AddBuff,\n",
	Player_AddSkill="bool  Player_AddSkill(string  strPlayer,string  strSkillKey)\n[此函数过期, 禁用]\n给角色添加技能. \n参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,\n返回:成功或失败.\n参考:AddSkill,\n",
	Player_ChangeGender="bool  Player_ChangeGender(string  strPlayer,uint32  dwGender)\n[此函数过期, 禁用]\n设置角色性别. \n参数:strPlayer 玩家的GUID.,dwGender 性别.,\n返回:无.\n警告:早期接口,不再提供技术支持.\n参考:SetGender,\n",
	Player_ChangeJob="bool  Player_ChangeJob(string  strPlayer,uint32  dwJob)\n[此函数过期, 禁用]\n设置角色职业. \n参数:strPlayer 玩家的GUID.,dwJob 职业.,\n返回:无.\n警告:早期接口,不再提供技术支持.\n参考:SetJob,\n",
	Player_ClearBag="bool  Player_ClearBag(string  strPlayer,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n清空玩家包裹. \n参数:strPlayer 玩家的GUID.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:ClearBag,\n",
	Player_DelBuff="bool  Player_DelBuff(string  strPlayer,string  strBuffKey)\n[此函数过期, 禁用]\n删除角色BUFF. \n参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName.,\n返回:成功或失败.\n参考:DelBuff,\n",
	Player_DestroyItem="bool  Player_DestroyItem(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n警告:无.\n参考:DelItem,\n",
	Player_DestroyItemBind="bool  Player_DestroyItemBind(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:DelItem,\n",
	Player_DestroyItemUnbind="bool  Player_DestroyItemUnbind(string  strPlayer,string  strItemKey,int32  iCount,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n删除玩家物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,iCount 删除数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:DelItem,\n",
	Player_DropItem="bool  Player_DropItem(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n玩家丢弃物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:成功或失败.\n参考:DropItem,\n",
	Player_DropItemEx="bool  Player_DropItemEx(string  strPlayer,string  strItem)\n强制玩家丢弃物品. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:成功或失败.\n参考:DropItem,\n",
	Player_GetBagFree="int32  Player_GetBagFree(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家包裹空格子数量. \n参数:strPlayer 玩家的GUID.,\n返回:包裹空格子数,出错返回-1.\n参考:GetBagFree,GetBagFreeEx,BagFree,\n",
	Player_GetBagItemList="table  Player_GetBagItemList(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家包裹所有物品的GUID列表. \n参数:strPlayer 玩家的GUID.,\n返回:包裹所有物品的GUID列表,返回lua table.\n参考:BagItemList,\n",
	Player_GetBagSize="int32  Player_GetBagSize(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家包裹大小. \n参数:strPlayer 玩家的GUID.,\n返回:包裹大小,出错返回-1.\n参考:GetBagSize,GetBagSizeEx,BagSize,\n",
	Player_GetCustomVarInt="int32  Player_GetCustomVarInt(string  strPlayer,string  strKey)\n[此函数过期, 禁用]\n取得玩家实体上存储的整型数值变量. \n参数:strPlayer 玩家的GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回0.\n警告:该接口已过期,不再提供技术支持.\n参考:GetInt,\n",
	Player_GetCustomVarStr="string  Player_GetCustomVarStr(string  strPlayer,string  strKey)\n[此函数过期, 禁用]\n取得玩家实体上存储的字符型变量. \n参数:strPlayer 玩家的GUID.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回''.\n警告:该接口已过期,不再提供技术支持.\n",
	Player_GetDir="int16  Player_GetDir(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家的方向. \n参数:strPlayer 角色的GUID.,\n返回:方向值,出错返回-1.\n警告:早期接口,不再提供技术支持.\n参考:Dir,\n",
	Player_GetDistance="uint16  Player_GetDistance(string  strPlayer1,string  strPlayer2)\n[此函数过期, 禁用]\n计算玩家间的距离 计算玩家间的距离. \n参数:strPlayer1 玩家GUID.,strPlayer2 玩家GUID.,\n返回:成功返回距离,失败返回65535.\n参考:Distance,\n",
	Player_GetEquipGuid="string  Player_GetEquipGuid(string  strPlayer,uint16  wSite)\n取得玩家装备栏装备着的物品GUID. \n参数:strPlayer 玩家的GUID.,wSite 装备栏位置,请参考引擎常量中的角色site位类型定义,\n返回:物品GUID.\n参考:eRoleSite,\n",
	Player_GetEquipName="string  Player_GetEquipName(string  strPlayer,uint16  wSite)\n取得玩家装备栏装备着的物品Name. \n参数:strPlayer 玩家的GUID.,wSite 装备栏位置,请参考引擎常量中的角色site位类型定义,\n返回:物品Name.\n参考:eRoleSite,\n",
	Player_GetGuid="string  Player_GetGuid(string  strPlayerName)\n[此函数过期, 禁用]\n根据玩家的Name找到该玩家. \n参数:strPlayerName 玩家的Name.,\n返回:玩家的GUID,如果玩家不存在返回''.\n警告:玩家如果不在线就找不到.\n参考:Name2Guid,\n",
	Player_GetGuidProp="string  Player_GetGuidProp(string  strPlayer,uint16  wAttrType)\n[此函数过期, 禁用]\n取得玩家的GUID型属性值. \n参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,\n返回:属性值.\n警告:早期接口,不再提供技术支持.\n",
	Player_GetIntProp="double  Player_GetIntProp(string  strPlayer,int32  iAttrType)\n[此函数过期, 禁用]\n取得玩家的数值型属性值. \n参数:strPlayer 玩家的GUID.,iAttrType 属性类型,过期接口不再详述.,\n返回:属性值.\n警告:早期接口,不再提供技术支持.\n",
	Player_GetItemCount="int32  Player_GetItemCount(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetItemCountBind="int32  Player_GetItemCountBind(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetItemCountUnbind="int32  Player_GetItemCountUnbind(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetPosX="int16  Player_GetPosX(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家的X坐标值. \n参数:strPlayer 角色的GUID.,\n返回:X坐标值,出错返回-1.\n警告:早期接口,不再提供技术支持.\n参考:X,Y,\n",
	Player_GetPosY="int16  Player_GetPosY(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家的Y坐标值. \n参数:strPlayer 角色的GUID.,\n返回:Y坐标值,出错返回-1.\n警告:早期接口,不再提供技术支持.\n参考:X,Y,\n",
	Player_GetStrProp="string  Player_GetStrProp(string  strPlayer,uint16  wAttrType)\n[此函数过期, 禁用]\n取得玩家的字符型属性值. \n参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,\n返回:属性值.\n警告:早期接口,不再提供技术支持.\n",
	Player_GetTimeProp="uint32  Player_GetTimeProp(string  strPlayer,uint16  wAttrType)\n[此函数过期, 禁用]\n取得玩家的时间型属性值. \n参数:strPlayer 角色的GUID.,wAttrType 属性类型,过期接口不再详述.,\n返回:时间属性值.\n警告:早期接口,不再提供技术支持.\n",
	Player_GetWarehouseFree="int32  Player_GetWarehouseFree(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家包裹空格子数量. \n参数:strPlayer 玩家的GUID.,\n返回:包裹空格子数,出错返回-1.\n参考:GetBagFree,GetBagFreeEx,BagFree,\n",
	Player_GetWarehouseItemCount="int32  Player_GetWarehouseItemCount(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetWarehouseItemCountBind="int32  Player_GetWarehouseItemCountBind(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetWarehouseItemCountUnbind="int32  Player_GetWarehouseItemCountUnbind(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n取得玩家的物品数量. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:符合条件的物品数量,出错返回-1.\n警告:该接口已过期,不再提供技术支持.\n参考:ItemCountEx,\n",
	Player_GetWarehouseSize="int32  Player_GetWarehouseSize(string  strPlayer)\n[此函数过期, 禁用]\n取得玩家包裹大小. \n参数:strPlayer 玩家的GUID.,\n返回:包裹大小,出错返回-1.\n参考:GetBagSize,GetBagSizeEx,BagSize,\n",
	Player_GiveItemBind="bool  Player_GiveItemBind(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n给予玩家绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:GiveBindItem,\n",
	Player_GiveItemUnbind="bool  Player_GiveItemUnbind(string  strPlayer,string  strItemKey,int32  wCount,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n给予玩家非绑定物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,wCount 给予数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:GiveItem,\n",
	Player_GiveSingleItem="string  Player_GiveSingleItem(string  strPlayer,string  strItemKey,uint8  bBind,string  strDesc,string  strTarget)\n[此函数过期, 禁用]\n给予玩家单个物品. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,bBind 绑定类型.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:新物品的GUID,出错返回''.\n参考:AddSingleItem,\n",
	Player_GoHome="bool  Player_GoHome(string  strPlayer)\n让玩家回城. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n警告:该接口是异步的,接口返回时玩家还没有切换地图.\n参考:AddBuff,\n",
	Player_IsCanAttack="bool  Player_IsCanAttack(string  strPlayer)\n判断玩家是否能使用物理攻击. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanMove="bool  Player_IsCanMove(string  strPlayer)\n判断玩家是否可以移动. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanNpcTalk="bool  Player_IsCanNpcTalk(string  strPlayer)\n判断玩家是否能与NPC交互. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanSpell="bool  Player_IsCanSpell(string  strPlayer)\n判断玩家是否能使用魔法攻击. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanTalk="bool  Player_IsCanTalk(string  strPlayer)\n判断玩家是否能说话. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanTurn="bool  Player_IsCanTurn(string  strPlayer)\n判断玩家是否能转向. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsCanUseItem="bool  Player_IsCanUseItem(string  strPlayer)\n判断玩家是否能使用物品. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsDie="bool  Player_IsDie(string  strPlayer)\n判断玩家是否死亡. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsHasBuff="bool  Player_IsHasBuff(string  strPlayer,string  strBuffKey)\n[此函数过期, 禁用]\n判断玩家是否拥有某个BUFF. \n参数:strPlayer 玩家的GUID.,strBuffKey BUFF的KeyName.,\n返回:是或否.\n参考:HasBuff,\n",
	Player_IsHasSkill="bool  Player_IsHasSkill(string  strPlayer,string  strSkillKey)\n[此函数过期, 禁用]\n判断玩家是否拥有某个技能. \n参数:strPlayer 玩家的GUID.,strSkillKey 技能的KeyName.,\n返回:是或否.\n参考:HasSkill,\n",
	Player_IsInGS="bool  Player_IsInGS(string  strPlayer)\n判断玩家是否在本GS上. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_IsOnline="bool  Player_IsOnline(string  strPlayer)\n判断玩家是否在线上. \n参数:strPlayer 玩家的GUID.,\n返回:是或否.\n",
	Player_ItemRequest="bool  Player_ItemRequest(string  strPlayer,table  tName,table  tCount,table  tBind,table  tOpr,string  strDesc,string  strTarget)\n批量操作(添加/删除)玩家物品. \n参数:strPlayer 玩家的GUID.,tName 物品的KeyName表. 如:{'吼天兽(未开光)', '开光印', '吼天兽*绝'},tCount 与KeyName对应的数量表. 如:{1, 1, 1},tBind 与KeyName对应的绑定类型表.绑定类型, 0 = 非绑定 1 = 绑定 2 = 绑定/非绑定.\n\n 如:{2, 2, 1},tOpr 与KeyName对应的操作表.操作类型, 0 = 添加 1 = 删除.\n\n 如:{1, 1, 0},strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_Kill="bool  Player_Kill(string  strPlayer,bool  bDropItem,bool  bShowKiller)\n[此函数过期, 禁用]\n立即杀死角色. \n参数:strPlayer 玩家的GUID.,bDropItem 该参数无效,没有使用.,bShowKiller 该参数无效,没有使用.,\n返回:成功或失败.\n参考:Kill,\n",
	Player_KillServant="bool  Player_KillServant(string  strPlayer)\n杀死玩家所有随从. \n参数:strPlayer 玩家的GUID.,\n返回:成功或失败.\n",
	Player_NotifyCustomParam="void  Player_NotifyCustomParam(string  strPlayer,string  strKey)\n[此函数过期, 禁用]\n向客户端发送变量通知. \n参数:strPlayer 玩家的GUID.,strKey 变量名.,\n返回:无返回值.\n警告:该接口属于服务器代码扩展,脚本作者无权使用.\n参考:NotifyVar,\n",
	Player_NpcMove="bool  Player_NpcMove(string  strPlayer,string  strNpcKey,uint16  wRange)\n让玩家跳转到指定NPC附近. \n参数:strPlayer 玩家的GUID.,strNpcKey NPC的KeyName.,wRange 坐标范围.,\n返回:成功或失败.\n警告:该接口是异步的,接口返回时玩家还没有切换地图.\n",
	Player_SetAlias="bool  Player_SetAlias(string  strPlayer,string  strAlias)\n设置玩家的称谓. \n参数:strPlayer 玩家的GUID.,strAlias 称谓.,\n返回:成功或失败.\n",
	Player_SetCustomVarInt="bool  Player_SetCustomVarInt(string  strPlayer,string  strKey,int32  iValue)\n[此函数过期, 禁用]\n在对象实体上存储整型数值变量. \n参数:strPlayer 玩家的GUID.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n参考:SetInt,\n",
	Player_SetCustomVarStr="bool  Player_SetCustomVarStr(string  strPlayer,string  strKey,string  strValue)\n[此函数过期, 禁用]\n在对象实体上存储字符型变量. \n参数:strPlayer 玩家的GUID.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n参考:SetStr,\n",
	Player_SetIntProp="bool  Player_SetIntProp(string  strPlayer,uint16  wAttrType,uint16  wOprType,uint32  dwValue)\n[此函数过期, 禁用]\n取得玩家的数值型属性值. \n参数:strPlayer 玩家的GUID.,wAttrType 属性类型,过期接口不再详述.,wOprType 操作类型,过期接口不再详述.,dwValue 属性值.,\n返回:成功或失败.\n警告:早期接口,不再提供技术支持.\n",
	Player_UseItem="bool  Player_UseItem(string  strPlayer,string  strItemKey)\n[此函数过期, 禁用]\n让玩家使用道具. \n参数:strPlayer 玩家的GUID.,strItemKey 物品的KeyName.,\n返回:成功或失败.\n参考:ApplyItem,\n",
	Player_UseItemByID="bool  Player_UseItemByID(string  strPlayer,uint16  wID)\n[此函数过期, 禁用]\n让玩家使用道具. \n参数:strPlayer 玩家的GUID.,wID 物品的ID.,\n返回:成功或失败.\n参考:ApplyItem,\n",
	PostDBEvt="bool  PostDBEvt(string  strSQL,string  strCallBack,string  strParam)\n投递数据库事件\n参数:strSQL 要执行的SQL语句,为了数据库安全性只支持CREATE,SELECT,INSERT,UPDATE,DROP,DELETE,REPLACE六种语法,\n\n 并且所有的表名字段名都必须以DATA_***的形式定义.,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来.,\n返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功.\n备注:回调函数格式:\n void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_table&amp; tRecordSets, const char* strParam);\n bResult:执行结果 \n dwError:错误码 \n strError:错误信息 \n iResultNum:没有结果集的语句影响的结果数 \n tRecordSets:有结果集的语句产生的结果集 \n strParam:自定义参数\n警告:对性能还是有影响的,不要轻易使用.\n",
	PostURL="bool  PostURL(string  Url,string  post_data,string  callback,string  param_list,uint32  timeout)\n获取一个URL的内容，带Post数据\n参数:Url http链接地址.,post_data 以post方式投递的数据.,callback 获取内容后的回调函数.,param_list 预设的回调参数.,timeout 超时时间.,\n返回:true表示投递请求成功（不表示获取内容成功）.\n",
	Prestige="int32  Prestige(string  strRole)\n取得角色的声望. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:声望.\n",
	Random="int32  Random(int32  iMin,int32  iMax)\n成生随机数. \n参数:iMin 最小值.,iMax 最大值.,\n返回:返回随机数iRnd,取值范围:(iMin &lt; iMax) (iMin &lt;= iRnd &lt;= iMax).\n",
	RemainPoint="int32  RemainPoint(string  strRole)\n取得角色的剩余属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:剩余属性点.\n",
	Ride="void  Ride(string  strPlayer)\n玩家骑上坐骑\n参数:strPlayer 玩家GUID.,\n返回:无返回值.\n警告:玩家上马不能保证成功,必须遵循乘骑规则.系统功能的扩展,脚本不应使用.\n",
	Ring="string  Ring(string  strPlayer,uint8  sequ)\n取得玩家当前装备的戒指. \n参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	ScriptFuncToPlayer="bool  ScriptFuncToPlayer(string  player_name,string  script,string  scriptFunc,string  params)\n给某个player执行一段脚本\n参数:player_name 玩家姓名,script 脚本名称,scriptFunc 脚本函数,params 脚本参数，以#分隔，执行时会分开传入函数,\n返回:true表示投递请求成功（不表示脚本已经执行）.\n备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.\n",
	ScriptTextToPlayer="bool  ScriptTextToPlayer(string  player_name,string  script,string  scriptText)\n给某个player执行一段脚本\n参数:player_name 玩家姓名,script 脚本名称,scriptText 脚本内容,\n返回:true表示投递请求成功（不表示脚本已经执行）.\n备注:该调用为异步，只能保证玩家在线时或上线后会执行这段脚本，不保证时序.\n",
	SetAchievement="void  SetAchievement(string  strRole,int32  iValue)\n设置角色成就. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetAutoOpt="void  SetAutoOpt(string  player_guid,bool  is_auto_fight,bool  is_auto_pick,uint32  time)\n设置自动挂机选项. \n参数:player_guid 玩家guid.,is_auto_fight 是否开启自动打怪 false=不开启 true=开启.,is_auto_pick 是否开启自动捡东西 false=不开启 true=开启.,time 挂机开启时间 单位秒.,\n返回:无返回值.\n",
	SetBrawn="void  SetBrawn(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色腕力. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetDayInt="bool  SetDayInt(string  strObject,string  strKey,int  iValue)\n在对象实体上设置数值型天变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n",
	SetDayStr="bool  SetDayStr(string  strObject,string  strKey,string  strValue)\n在对象实体上设置字符型天变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n",
	SetDir="void  SetDir(string  strRole,int32  iValue)\n设置角色方向. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetDynamicAttr="bool  SetDynamicAttr(string  strGUID,int32  iAttrSite,int32  iAttrType,int32  iAttrValue)\n设置玩家动态属性. \n参数:strGUID 玩家或者物品的GUID.,iAttrSite 动态属性编号0-99.,iAttrType 属性类型,具体设置类型请咨询策划.,iAttrValue 属性值.,\n返回:成功或失败.\n参考:eRoleAttr,\n",
	SetEnergy="void  SetEnergy(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色活力. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetEquipWeight="void  SetEquipWeight(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色装备负重. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetGender="void  SetGender(string  strRole,int32  iValue)\n设置角色性别. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetHair="void  SetHair(string  strRole,int32  iHair)\n设置角色的发型. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHair 发型编号.,\n返回:无返回值.\n参考:Hair,SetHair,\n",
	SetHairColor="void  SetHairColor(string  strRole,int32  iHairColor)\n设置角色的头发颜色. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHairColor 头发颜色.,\n返回:无返回值.\n参考:HairColor,SetHairColor,\n",
	SetHead="void  SetHead(string  strRole,int32  iHead)\n设置角色的头像. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iHead 头像编号.,\n返回:无返回值.\n参考:Head,SetHead,\n",
	SetHeroState="bool  SetHeroState(string  player,string  hero,int32  state)\n设置玩家已经载入的英雄状态\n参数:player 玩家的GUID.,hero 英雄的GUID.,state 欲设置的状态.,\n返回:设置是否成功.\n备注:状态包括 0、发呆；1、客户端控制；2、跟随；3、战斗； 4、守护\n",
	SetHp="void  SetHp(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色HP. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetHpPoint="void  SetHpPoint(string  strRole,int32  iValue)\n设置角色HP属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetJob="void  SetJob(string  strRole,int32  iValue)\n设置角色职业. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetLevel="void  SetLevel(string  strRole,int32  iValue)\n设置角色等级. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetLockSwitch="void  SetLockSwitch(string  strRole,int32  iLockStatus)\n设置角色的安全锁开关状态. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iLockStatus 安全锁开关状态,0: 未解锁 1: 已解锁.,\n返回:无返回值.\n参考:LockSwitch,SetLockSwitch,\n",
	SetLuckCurse="void  SetLuckCurse(string  strRole,int32  iValue)\n设置角色幸运诅咒. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetMagAtk="void  SetMagAtk(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色魔法攻击. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetMagAtkPoint="void  SetMagAtkPoint(string  strRole,int32  iValue)\n设置角色魔法攻击属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetMagDef="void  SetMagDef(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色魔法防御. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetMagDefPoint="void  SetMagDefPoint(string  strRole,int32  iValue)\n设置角色魔法防御属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetMeritor="void  SetMeritor(string  strRole,int32  iValue)\n设置角色功勋. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetMp="void  SetMp(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色MP. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetMpPoint="void  SetMpPoint(string  strRole,int32  iValue)\n设置角色MP属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetNetCheck="void  SetNetCheck(string  player_guid,bool  is_check)\n客户端网络状态检查\n参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查.,\n返回:无返回值.\n",
	SetPhyAtk="void  SetPhyAtk(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色物理攻击. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetPhyAtkPoint="void  SetPhyAtkPoint(string  strRole,int32  iValue)\n设置角色物理攻击属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetPhyDef="void  SetPhyDef(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色物理防御. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetPhyDefPoint="void  SetPhyDefPoint(string  strRole,int32  iValue)\n设置角色物理防御属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetPk="void  SetPk(string  strRole,int32  iValue)\n设置角色PK值. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetPrestige="void  SetPrestige(string  strRole,int32  iValue)\n设置角色声望. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetRemainPoint="void  SetRemainPoint(string  strRole,int32  iValue)\n设置角色剩余属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetTaoAtk="void  SetTaoAtk(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色道术攻击. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	SetTaoAtkPoint="void  SetTaoAtkPoint(string  strRole,int32  iValue)\n设置角色道术攻击属性点数. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,\n返回:无返回值.\n",
	SetWeekInt="bool  SetWeekInt(string  strObject,string  strKey,int  iValue)\n在对象实体上设置数值型周变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n",
	SetWeekStr="bool  SetWeekStr(string  strObject,string  strKey,string  strValue)\n在对象实体上设置字符型周变量. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、物品、地图.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n",
	SetWeight="void  SetWeight(string  strRole,int32  iValue,bool  bIsLimit)\n设置角色背包负重. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,iValue 属性值.,bIsLimit 是否修改属性上限.当角色为玩家时,设置上限无意义,装备属性重构后会失效.,\n返回:无返回值.\n",
	Shoes="string  Shoes(string  strPlayer)\n取得玩家当前装备的靴子. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Shoulder="string  Shoulder(string  strPlayer)\n取得玩家当前装备的护肩. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	ShowForm="void  ShowForm(string  strPlayer,string  strFormName)\n通知客户端显示表单\n参数:strPlayer 玩家GUID.,strFormName 表单名字.,\n返回:无返回值.\n参考:ShowForm,ShowFormWithContent,\n",
	StartAutoRun="void  StartAutoRun(string  player_guid,string  opt)\n开启指定玩家挂机选项. \n参数:player_guid 玩家guid.,opt 挂机选项字符串.,\n返回:无返回值.\n",
	StartCastleWarEx="bool  StartCastleWarEx(string  strCastleName,string  strFamilys,uint32  dwStartTime,uint32  dwDuration)\n开启城堡战. \n参数:strCastleName 城堡名.,strFamilys 攻城的所有行会.如:行会1&amp;行会2&amp;行会3&amp;...&amp;行会n.,dwStartTime 攻城时间.UTC时间,参考GetAllTime.单位:秒.,dwDuration 持续时间,单位:秒.,\n返回:成功或失败.\n参考:GetAllTime,\n",
	StartStall="bool  StartStall(string  dummy,string  stall_name,table  goods,table  price_type,table  price)\n让假人摆摊\n参数:dummy 假人的GUID.,stall_name 摊位名称.,goods 商品的guid，必须在假人包裹里.,price_type 商品的价格类型.,price 商品的价格.,\n返回:摆摊是否成功.\n备注:无\n",
	StopAutoRun="void  StopAutoRun(string  player_guid)\n关闭指定玩家挂机选项\n参数:player_guid 玩家guid.,\n返回:无返回值.\n",
	StopStall="bool  StopStall(string  dummy)\n让假人结束摆摊\n参数:dummy 假人的GUID.,\n返回:摆摊是否成功.\n备注:无\n",
	SubBindGold="bool  SubBindGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n扣除角色绑定金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubGold,SubBindGold,\n",
	SubBindIngot="bool  SubBindIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget)\n扣除角色绑定元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubIngot,SubBindIngot,\n",
	SubExp="bool  SubExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n扣除角色经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	SubGold="bool  SubGold(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n扣除角色非绑定金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubGold,SubBindGold,\n",
	SubIngot="bool  SubIngot(string  strPlayer,int  iIngot,string  strDesc,string  strTarget)\n扣除角色非绑定元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubIngot,SubBindIngot,\n",
	SubIntegral="bool  SubIntegral(string  strPlayer,int32  iIntegral,string  strDesc,string  strTarget)\n扣除角色积分. \n参数:strPlayer 玩家的GUID.,iIntegral 积分数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	SysCenterMsg="void  SysCenterMsg(uint8  byType,string  strMsg,string  strPlayer)\n发送客户端中部消息. \n参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,\n返回:无返回值.\n",
	SysGuildMsg="bool  SysGuildMsg(string  strFamily,string  strMsg)\n发送客户端底部公会消息. \n参数:strFamily 行会的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMapMsg="bool  SysMapMsg(string  strMap,string  strMsg)\n发送客户端底部地图消息. \n参数:strMap 地图的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysMsg_SendBoardMsg="bool  SysMsg_SendBoardMsg(string  strObject,string  strTitle,string  strMsg,uint32  dwTimeOut)\n发送客户端面板消息. \n参数:strObject 对象的GUID.对象可以为系统、队伍、行会、地图、玩家.,strTitle 面板标题.,strMsg 消息内容.,dwTimeOut 持续时间,单位:秒.,\n返回:成功或失败.\n",
	SysMsg_SendTipsMsg="bool  SysMsg_SendTipsMsg(string  strPlayer,string  strMsg)\n发送客户端左上角消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysRoleTalk="bool  SysRoleTalk(string  strRole,string  strMsg)\n发送角色当前说话通知. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysTipsMsg="bool  SysTipsMsg(string  strPlayer,string  strMsg)\n发送客户端左上角消息. \n参数:strPlayer 玩家的GUID.,strMsg 消息内容.,\n返回:成功或失败.\n",
	SysTopMsg="void  SysTopMsg(uint8  byCount,string  strMsg)\n发送客户端顶部消息. \n参数:byCount 消息滚动次数.,strMsg 消息内容.,\n返回:无返回值.\n",
	TaoAtkPoint="int32  TaoAtkPoint(string  strRole)\n取得角色的道攻属性点. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,\n返回:道攻属性点.\n",
	TimeDiff="int32  TimeDiff(string  strDateTime1,string  strDateTime2)\n取得字符串时间的差值. \n参数:strDateTime1 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,strDateTime2 字符串时间,时间格式:Y-m-d H:M:S或Y-m-d.,\n返回:时间差值单位秒.\n",
	TitleName="string  TitleName(string  strPlayer)\n取得玩家的称谓. \n参数:strPlayer 玩家的GUID.,\n返回:玩家的称谓,如果玩家不存在返回''.\n",
	ToAttrName="string  ToAttrName(int32  iAttrName)\n获取属性名. \n参数:iAttrName 属性类型.,\n返回:属性类型名,出错返回未知属性.\n备注:将属性的数值类型转成字符串类型.\n参考:eRoleAttr,\n",
	UnRide="void  UnRide(string  strPlayer)\n玩家解散坐骑\n参数:strPlayer 玩家GUID.,\n返回:无返回值.\n警告:系统功能的扩展,脚本不应使用.\n",
	UserID="uint32  UserID(string  strPlayer)\n取得玩家的帐号ID. \n参数:strPlayer 玩家的GUID.,\n返回:帐号ID,出错返回0.\n",
	VarList="table  VarList(string  strObject)\n返回对象的所有自定义变量列表. \n参数:strObject 对象的GUID,可以是玩家、怪物、NPC、物品.,\n返回:对象的自定义变量列表,返回lua table.\n",
	Weapon="string  Weapon(string  strPlayer)\n取得玩家当前装备的武器. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Weight="int32  Weight(string  strRole,bool  bLimit)\n取得角色的背包负重. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,bLimit true = 上限,false = 当前.,\n返回:背包负重.\n",
	Wings="string  Wings(string  strPlayer)\n取得玩家当前装备的翅膀. \n参数:strPlayer 玩家的GUID.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	Wrist="string  Wrist(string  strPlayer,uint8  sequ)\n取得玩家当前装备的护腕. \n参数:strPlayer 玩家的GUID.,sequ 0 = 左边,1 = 右边.,\n返回:装备的GUID,出错或没有装备返回''.\n",
	GetDeposit="double  GetDeposit(string  strPlayer)\n取得角色仓库金币. \n参数:strPlayer 玩家的GUID.,\n返回:玩家仓库金币的数量.\n",
	GUIDType="int32  GUIDType(string  strObject)\n取得对象GUID的类型. \n参数:strObject 对象的GUID.,\n返回:GUID类型 0 = 玩家, 1 = 假人, 2 = 怪物, 3 = NPC, 4 = 物品, 5 = 地图, 6 = 队伍, 7 = 行会, 10 = 系统, 出错返回-1.\n",
	ModifyCastleAttacks="bool  ModifyCastleAttacks(string  strCastleName,table  tAttacks,bool  bRemoveAll)\n强制修改城堡攻击行会. \n参数:strCastleName 城堡名.,tAttacks 攻击行会列表.,bRemoveAll 是否清除原先设置的行会.,\n返回:成功或失败.\n警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.\n",
	ModifyCastleStart="bool  ModifyCastleStart(string  strCastleName,uint32  dwTimes,uint32  dwDuration)\n强制修改城堡攻城时间. \n参数:strCastleName 城堡名.,dwTimes 攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数.,dwDuration 攻城持继时间,单位:秒.,\n返回:成功或失败.\n警告:必须调用StartCastleWarEx、StartCastleWar注册过以后才能强制修改.\n",
	QueryCastleStart="uint32  QueryCastleStart(string  strCastleName)\n查询攻城时间. \n参数:strCastleName 城堡名.,\n返回:攻城时间,从1970-1-1 00:00:00到攻城时间所经过的秒数.\n警告:申请过攻城以后再查询攻城时间才有意义.\n",
	AddDeposit="bool  AddDeposit(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n添加角色仓库金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 添加金币的原因.,strTarget 添加金币动作的发起者.,\n返回:成功或失败.\n",
	SubDeposit="bool  SubDeposit(string  strPlayer,int  iGold,string  strDesc,string  strTarget)\n扣除角色仓库金币. \n参数:strPlayer 玩家的GUID.,iGold 金币数量.,strDesc 扣除金币的原因.,strTarget 扣除金币动作的发起者.,\n返回:成功或失败.\n",
	SetFormAllowFunc="bool  SetFormAllowFunc(table  tFuncList)\n设置表单的允许回调函数列表. \n参数:tFuncList 函数名列表的lua table.,\n返回:成功或失败.\n",
	GetRegionFree="table  GetRegionFree(string  strMap,uint16  wX,uint16  wY,uint16  wRange)\n[此函数过期, 禁用]\n返回地图区域中空坐标列表. \n参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围.,\n返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFree(strMap, wX, wY, wR); local x, y = tGrids[1].X, tGrids[1].Y;\n参考:GetRegionFreeEx,\n",
	NotifyCSChannelMsg="void  NotifyCSChannelMsg(uint16  wChannelType,string  strParam,string  strMsg)\n[此函数过期, 禁用]\nGS给CS发送频道消息 GS给CS发送频道消息.\n参数:wChannelType 频道类型.,strParam 参数.,strMsg 消息内容.,\n返回:无返回值.\n备注:该接口曾经用来扩展服务器的功能,脚本作者不要使用.\n",
	GetRegionFreeRnd="table  GetRegionFreeRnd(string  strMap,uint16  wX,uint16  wY,uint16  wRange,uint16  wLimit)\n[此函数过期, 禁用]\n返回地图区域中空坐标列表. \n参数:strMap 地图的GUID.,wX 区域X坐标.,wY 区域Y坐标.,wRange 区域范围.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标.,\n返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRnd(strMap, wX, wY, wR, wLimit); local x, y = tGrids[1].X, tGrids[1].Y;\n参考:GetRegionFreeRndEx,\n",
	on_add_exp_all="void  on_add_exp_all(string  strRole,int32  iExp)\n角色得到经验时回调. \n参数:strRole 角色的GUID.,iExp 得到的经验值.,\n返回:无返回值.\n备注:lua_trigger_add_exp_all  任何原因得到经验时回调(已被删除,不当使用会造成服务器死循环).\n参考:eTriggerType,\n",
	on_attack_ex="void  on_attack_ex(string  strRole,string  strAttacker,int32  iHp,string  strSkillKey)\n受攻击时回调. \n参数:strRole 被攻击者的GUID.,strAttacker 攻击者的GUID.,iHp 损失的血量.,strSkillKey 攻击技能的KeyName.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_dig_meat="void  on_dig_meat(string  strRole,string  strTarget,uint16  wSkillID)\n角色挖肉时回调. \n参数:strRole 角色的GUID.,strTarget 怪物的GUID.,wSkillID 挖肉技能的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_monster_born="void  on_monster_born(string  strMonster)\n怪物出生时回调. \n参数:strMonster 怪物的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_logout="bool  on_pre_logout(string  strPlayer,int32  iExitType)\n玩家退出游戏之前回调. \n参数:strPlayer 玩家的GUID.,iExitType 玩家退出类型. 1 = 退出游戏, 2 = 返回角色界面.,\n返回:true = 允许玩家退出游戏, false = 阻止玩家退出游戏.\n参考:eTriggerType,\n",
	on_pre_mall="bool  on_pre_mall(string  strPlayer,string  strItemKey,int32  iNum,int32  iPrice,uint8  byBind)\n玩家在商城消费之前回调. \n参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买单价.,byBind 绑定类型. 1 = 绑定, 2 = 不绑定.,\n返回:true = 允许玩家购买, false = 阻止玩家购买.\n参考:eTriggerType,\n",
	on_ride_request="void  on_ride_request(string  strPlayer)\n收到上马请求时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_system_stop="void  on_system_stop(void  )\n系统关闭回调. \n参数: ,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_timer_check="void  on_timer_check(string  strItem)\n道具自检回调. \n参数:strItem 道具的GUID.,\n返回:无返回值.\n备注:只有属于玩家的道具才会触发自检回调.\n参考:eTriggerType,\n",
	on_unride_request="void  on_unride_request(string  strPlayer)\n收到下马请求时回调. \n参数:strPlayer 玩家的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	post_die="void  post_die(string  strRole,string  strKiller)\n角色死亡时回调. \n参数:strRole 角色的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n备注:lua_trigger_post_die\n参考:eTriggerType,\n",
	post_monster_die="void  post_monster_die(string  strMonster,string  strKiller)\n怪物死亡时回调. \n参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n备注:lua_trigger_monster_post_die\n参考:eTriggerType,\n",
	post_player_die="void  post_player_die(string  strPlayer,string  strKiller)\n玩家死亡时回调. \n参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n备注:lua_trigger_player_post_die\n参考:eTriggerType,\n",
	post_process_pk="void  post_process_pk(string  strKiller,string  strVictim,int32  iPKRef)\n角色处理PK值时回调. \n参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,iPKRef 得到的PK值.,\n返回:无返回值.\n备注:lua_trigger_post_process_pk\n参考:eTriggerType,\n",
	pre_die="bool  pre_die(string  strRole,string  strKiller)\n角色死亡之前回调. \n参数:strRole 角色的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许角色死亡, false = 阻止角色死亡.\n备注:lua_trigger_pre_die\n参考:eTriggerType,\n",
	pre_monster_die="bool  pre_monster_die(string  strMonster,string  strKiller)\n怪物死亡之前回调. \n参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许怪物死亡, false = 阻止怪物死亡.\n备注:lua_trigger_monster_pre_die\n参考:eTriggerType,\n",
	pre_player_die="bool  pre_player_die(string  strPlayer,string  strKiller)\n玩家死亡之前回调. \n参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许玩家死亡, false = 阻止玩家死亡.\n备注:lua_trigger_player_post_die\n参考:eTriggerType,\n",
	pre_player_relive="bool  pre_player_relive(string  strRole)\n角色复活之前回调. \n参数:strRole 角色的GUID.,\n返回:true = 允许角色复活, false = 阻止角色复活.\n备注:lua_trigger_player_relive\n参考:eTriggerType,\n",
	pre_process_pk="bool  pre_process_pk(string  strKiller,string  strVictim)\n角色处理PK值之前回调. \n参数:strKiller 杀手的GUID.,strVictim 受害者的GUID.,\n返回:true = 允许角色得到PK值, false = 阻止角色得到PK值.\n备注:lua_trigger_pre_process_pk\n参考:eTriggerType,\n",
	AllServantBetry="bool  AllServantBetry(string  strPlayer)\n玩家所有宝宝背叛. \n参数:strPlayer 玩家的GUID.,\n返回:true = 成功, false = 失败.\n",
	GetRegionFreeEx="table  GetRegionFreeEx(string  strMap,table  tRange)\n返回地图区域中空坐标列表. \n参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,\n返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeEx(...); local x, y = tGrids[1].X, tGrids[1].Y;\n",
	GetRegionFreeRndEx="table  GetRegionFreeRndEx(string  strMap,table  tRange,uint16  wLimit)\n返回地图区域中空坐标列表. \n参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,wLimit 指定返回的坐标数量.如果满足条件的坐标不足指定数量,则返回实际数量的坐标.,\n返回:区域内空格子列表,返回lua table.如:local tGrids = lualib:GetRegionFreeRndEx(...); local x, y = tGrids[1].X, tGrids[1].Y;\n",
	GetTempInt="int32  GetTempInt(string  strObject,string  strKey)\n取得对象实体上存储的整型数值变量. \n参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回0.\n",
	GetTempStr="string  GetTempStr(string  strObject,string  strKey)\n取得对象实体上存储的字符型变量. \n参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,\n返回:变量的值,如果变量不存在返回''.\n",
	HasItem="bool  HasItem(string  strPlayer,string  strItem)\n判断玩家是否拥有道具. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:true = 拥有, false = 没有.\n",
	InAdvWarehouse="bool  InAdvWarehouse(string  strPlayer,string  strItem)\n判断道具是否在玩家高级仓库里. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:true = 是, false = 否.\n",
	InBag="bool  InBag(string  strPlayer,string  strItem)\n判断道具是否在玩家包裹里. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:true = 是, false = 否.\n",
	InEquip="bool  InEquip(string  strPlayer,string  strItem)\n判断道具是否在玩家装备栏里. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:true = 是, false = 否.\n",
	InWarehouse="bool  InWarehouse(string  strPlayer,string  strItem)\n判断道具是否在玩家仓库里. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,\n返回:true = 是, false = 否.\n",
	Map_GetRegionItemsEx="table  Map_GetRegionItemsEx(string  strMap,string  strItemKey,table  tRange)\n获取地图区域内的物品列表. \n参数:strMap 地图的GUID.,strItemKey 物品的KeyName.如果该参数为'',则匹配所有物品.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,\n返回:区域内物品列表,返回lua table.\n",
	Map_GetRegionMonstersEx="table  Map_GetRegionMonstersEx(string  strMap,string  strMonsterKey,table  tRange,bool  bIgnoreDied,bool  bIgnoreServant)\n获取地图区域内的怪物列表. \n参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,\n返回:区域内怪物列表,返回lua table.\n",
	Map_GetRegionNpcsEx="table  Map_GetRegionNpcsEx(string  strMap,table  tRange,string  strNpcKey)\n获取地图区域内的NPC列表. \n参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,strNpcKey NPC的KeyName.如果参数为'',则匹配所有NPC.,\n返回:区域内NPC列表,返回lua table.\n",
	Map_GetRegionPlayersEx="table  Map_GetRegionPlayersEx(string  strMap,table  tRange,bool  bIgnoreDied)\n获取地图区域内的玩家列表. \n参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,\n返回:区域内玩家列表,返回lua table.\n",
	MoveItem="bool  MoveItem(string  strPlayer,string  strItem,int32  iSite)\n物品移动接口. \n参数:strPlayer 玩家的GUID.,strItem 物品的GUID.,iSite 装备栏、背包、仓库、高级仓库中的格子对应的编号.,\n返回:true = 成功, false = 失败.\n备注:必须满足物品移动规则.比如:将武器移动到项链位置是被禁止的.\n参考:eRoleSite,\n",
	SendSpeakerMsg="void  SendSpeakerMsg(string  strPlayer,string  strMsg)\n发送喇叭消息. \n参数:strPlayer 玩家的GUID.该接口是异步的,发送结果未知.,strMsg 喇叭消息的内容.,\n返回:无返回值.\n",
	ServantBetry="bool  ServantBetry(string  strPlayer,string  strServant)\n玩家某个宝宝背叛. \n参数:strPlayer 玩家的GUID.,strServant 宝宝的GUID.,\n返回:true = 成功, false = 失败.\n参考:Player_GetServantList,\n",
	SetTempInt="bool  SetTempInt(string  strObject,string  strKey,int32  iValue)\n在对象实体上存储整型数值变量. \n参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,iValue 变量值.,\n返回:成功或失败.\n",
	SetTempStr="bool  SetTempStr(string  strObject,string  strKey,string  strValue)\n在对象实体上存储字符型变量. \n参数:strObject 对象的GUID,可以是玩家、物品.,strKey 变量名.,strValue 变量值.,\n返回:成功或失败.\n",
	eRoleAttr="\n枚举类型:角色属性类型定义\n参数:\n返回:无返回值.\n备注:\nlua_role_level 类型值=0 类型名=等级.\nlua_role_job 类型值=1 类型名=职业.\nlua_role_hp 类型值=2 类型名=当前hp.\nlua_role_max_hp 类型值=3 类型名=hp上限.\nlua_role_mp 类型值=4 类型名=当前mp.\nlua_role_max_mp 类型值=5 类型名=mp上限.\nlua_role_max_phy_def 类型值=6 类型名=物防上限.\nlua_role_min_phy_def 类型值=7 类型名=物防下限.\nlua_role_max_mag_def 类型值=8 类型名=魔防上限.\nlua_role_min_mag_def 类型值=9 类型名=魔防下限.\nlua_role_max_phy_atk 类型值=10 类型名=物攻上限.\nlua_role_min_phy_atk 类型值=11 类型名=物攻下限.\nlua_role_max_mag_atk 类型值=12 类型名=魔攻上限.\nlua_role_min_mag_atk 类型值=13 类型名=魔攻下限.\nlua_role_max_tao_atk 类型值=14 类型名=道术上限.\nlua_role_min_tao_atk 类型值=15 类型名=道术下限.\nlua_role_hit 类型值=16 类型名=命中.\nlua_role_miss 类型值=17 类型名=闪避.\nlua_role_move_speed 类型值=18 类型名=移动速度，基准值.\nlua_role_attack_speed 类型值=19 类型名=攻击速度，基准值.\nlua_role_weight 类型值=20 类型名=当前背包负重.\nlua_role_max_weight 类型值=21 类型名=上限背包负重.\nlua_role_equip_weight 类型值=22 类型名=当前装备负重.\nlua_role_max_equip_weight 类型值=23 类型名=上限装备负重.\nlua_role_brawn 类型值=24 类型名=腕力.\nlua_role_max_brawn 类型值=25 类型名=上限腕力.\nlua_role_point 类型值=26 类型名=剩余属性点.\nlua_role_point_hp 类型值=27 类型名=剩余属性点加HP.\nlua_role_point_mp 类型值=28 类型名=剩余属性点加MP.\nlua_role_point_phy_atk 类型值=29 类型名=剩余属性点加物攻.\nlua_role_point_mag_atk 类型值=30 类型名=剩余属性点加魔攻.\nlua_role_point_tao_atk 类型值=31 类型名=剩余属性点加道术.\nlua_role_point_phy_def 类型值=32 类型名=剩余属性点加物防.\nlua_role_point_mag_def 类型值=33 类型名=剩余属性点加魔防.\nlua_role_ele_1_atk 类型值=34 类型名=属性攻击（金）.\nlua_role_ele_2_atk 类型值=35 类型名=属性攻击（木）.\nlua_role_ele_3_atk 类型值=36 类型名=属性攻击（水）.\nlua_role_ele_4_atk 类型值=37 类型名=属性攻击（火）.\nlua_role_ele_5_atk 类型值=38 类型名=属性攻击（土）.\nlua_role_ele_1_def 类型值=39 类型名=属性防御（金）.\nlua_role_ele_2_def 类型值=40 类型名=属性防御（木）.\nlua_role_ele_3_def 类型值=41 类型名=属性防御（水）.\nlua_role_ele_4_def 类型值=42 类型名=属性防御（火）.\nlua_role_ele_5_def 类型值=43 类型名=属性防御（土）.\nlua_role_hp_rec 类型值=44 类型名=hp回复值.\nlua_role_mp_rec 类型值=45 类型名=mp回复值.\nlua_role_poison_rec 类型值=46 类型名=中毒恢复值.\nlua_role_energy 类型值=47 类型名=活力.\nlua_role_max_energy 类型值=48 类型名=活力上限.\nlua_role_burst 类型值=49 类型名=暴击率.\nlua_role_luck_curse 类型值=50 类型名=幸运诅咒.\nlua_role_pk 类型值=51 类型名=PK值.\nlua_role_prestige 类型值=52 类型名=声望.\nlua_role_meritorious 类型值=53 类型名=功勋.\nlua_role_achievement 类型值=54 类型名=成就.\nlua_role_reincarnation 类型值=55 类型名=转生标记.\nlua_role_rein_hp 类型值=56 类型名=转生后HP.\nlua_role_rein_mp 类型值=57 类型名=转生后MP.\nlua_role_rein_max_phy_def 类型值=58 类型名=转生后物防上限.\nlua_role_rein_min_phy_def 类型值=59 类型名=转生后物防下限.\nlua_role_rein_max_mag_def 类型值=60 类型名=转生魔防上限.\nlua_role_rein_min_mag_def 类型值=61 类型名=转生魔防下限.\nlua_role_rein_max_phy_atk 类型值=62 类型名=转生物攻上限.\nlua_role_rein_min_phy_atk 类型值=63 类型名=转生物攻下限.\nlua_role_rein_max_mag_atk 类型值=64 类型名=转生魔攻上限.\nlua_role_rein_min_mag_atk 类型值=65 类型名=转生魔攻下限.\nlua_role_rein_max_tao_atk 类型值=66 类型名=转生道术上限.\nlua_role_rein_min_tao_atk 类型值=67 类型名=转生道术下限.\nlua_role_rein_hit 类型值=68 类型名=转生命中.\nlua_role_rein_miss 类型值=69 类型名=转生闪避.\nlua_role_rein_burst 类型值=70 类型名=转生暴击率.\nlua_role_rein_weight 类型值=71 类型名=转生背包负重.\nlua_role_rein_equip_weight 类型值=72 类型名=转生装备负重.\nlua_role_rein_brawn 类型值=73 类型名=转生腕力.\nlua_role_bag_size_0 类型值=74 类型名=包裹0大小.\nlua_role_bag_size_1 类型值=75 类型名=包裹1大小.\nlua_role_bag_size_2 类型值=76 类型名=包裹2大小.\nlua_role_bag_size_3 类型值=77 类型名=包裹3大小.\nlua_role_bag_size_4 类型值=78 类型名=包裹4大小.\nlua_role_warehouse_size 类型值=79 类型名=玩家的仓库大小.\nlua_role_warehouse_adv_size 类型值=80 类型名=玩家高级仓库大小.\nlua_role_max_hp_pct 类型值=81 类型名=hp百分比.\nlua_role_max_mp_pct 类型值=82 类型名=mp百分比.\nlua_role_max_phy_def_pct 类型值=83 类型名=物防上限百分比.\nlua_role_min_phy_def_pct 类型值=84 类型名=物防下限百分比.\nlua_role_max_mag_def_pct 类型值=85 类型名=魔防上限百分比.\nlua_role_min_mag_def_pct 类型值=86 类型名=魔防下限百分比.\nlua_role_max_phy_atk_pct 类型值=87 类型名=物攻上限百分比.\nlua_role_min_phy_atk_pct 类型值=88 类型名=物攻下限百分比.\nlua_role_max_mag_atk_pct 类型值=89 类型名=魔攻上限百分比.\nlua_role_min_mag_atk_pct 类型值=90 类型名=魔攻下限百分比.\nlua_role_max_tao_atk_pct 类型值=91 类型名=道术上限百分比.\nlua_role_min_tao_atk_pct 类型值=92 类型名=道术下限百分比.\nlua_role_ele_1_atk_pct 类型值=93 类型名=属性攻击（金）百分比.\nlua_role_ele_2_atk_pct 类型值=94 类型名=属性攻击（木）百分比.\nlua_role_ele_3_atk_pct 类型值=95 类型名=属性攻击（水）百分比.\nlua_role_ele_4_atk_pct 类型值=96 类型名=属性攻击（火）百分比.\nlua_role_ele_5_atk_pct 类型值=97 类型名=属性攻击（土）百分比.\nlua_role_ele_1_def_pct 类型值=98 类型名=属性防御（金）百分比.\nlua_role_ele_2_def_pct 类型值=99 类型名=属性防御（木）百分比.\nlua_role_ele_3_def_pct 类型值=100 类型名=属性防御（水）百分比.\nlua_role_ele_4_def_pct 类型值=101 类型名=属性防御（火）百分比.\nlua_role_ele_5_def_pct 类型值=102 类型名=属性防御（土）百分比.\nlua_role_max_weight_pct 类型值=103 类型名=背包负重百分比.\nlua_role_max_equip_weight_pct 类型值=104 类型名=装备负重百分比.\nlua_role_max_brawn_pct 类型值=105 类型名=腕力百分比.\nlua_role_hp_rec_pct 类型值=106 类型名=hp回复速度百分比.\nlua_role_mp_rec_pct 类型值=107 类型名=mp回复速度百分比.\nlua_role_poison_rec_pct 类型值=108 类型名=中毒恢复速度百分比.\nlua_role_move_speed_pct 类型值=109 类型名=移动速度百分比.\nlua_role_attack_speed_pct 类型值=110 类型名=攻击速度百分比.\nlua_role_suck_hp 类型值=111 类型名=吸血.\nlua_role_suck_hp_pct 类型值=112 类型名=吸血百分比.\nlua_role_suck_max_hp_pct 类型值=113 类型名=吸血上限百分比.\nlua_role_suck_mp 类型值=114 类型名=吸魔.\nlua_role_suck_mp_pct 类型值=115 类型名=吸魔百分比.\nlua_role_suck_max_mp_pct 类型值=116 类型名=吸魔上限百分比.\nlua_role_ref_phy 类型值=117 类型名=物理伤害反射.\nlua_role_ref_phy_pct 类型值=118 类型名=物理伤害反射百分比.\nlua_role_ref_mag 类型值=119 类型名=魔法伤害反射数值.\nlua_role_ref_mag_pct 类型值=120 类型名=魔法伤害反射百分比.\nlua_role_imm_mag 类型值=121 类型名=魔法伤害减免数值.\nlua_role_imm_mag_pct 类型值=122 类型名=魔法伤害减免百分比.\nlua_role_imm_phy 类型值=123 类型名=物理伤害减免数值.\nlua_role_imm_phy_pct 类型值=124 类型名=物理伤害减免百分比.\nlua_role_atk_mode 类型值=125 类型名=攻击类型.\nlua_role_can_walk 类型值=126 类型名=能走路.\nlua_role_can_run 类型值=127 类型名=能跑步.\nlua_role_can_turn 类型值=128 类型名=能转向.\nlua_role_can_jump_map 类型值=129 类型名=能跳地图.\nlua_role_can_phy_atk 类型值=130 类型名=能物理攻击.\nlua_role_can_mag_atk 类型值=131 类型名=能魔法攻击.\nlua_role_can_use_item 类型值=132 类型名=能使用道具(包括换装).\nlua_role_is_phy_imm 类型值=133 类型名=物理免疫.\nlua_role_is_mag_imm 类型值=134 类型名=魔法免疫.\nlua_role_is_stealth 类型值=135 类型名=隐形.\nlua_role_has_mana_shield 类型值=136 类型名=有魔法盾.\nlua_role_has_collide 类型值=137 类型名=处于冲撞状态.\nlua_role_has_repelled 类型值=138 类型名=处于击退状态.\nlua_role_can_push 类型值=139 类型名=能否被推.\nlua_role_can_use_skill 类型值=140 类型名=能否使用技能.\nlua_role_is_black 类型值=141 类型名=是否为黑名.\nlua_role_has_imm_shield 类型值=142 类型名=有减免盾.\nlua_role_imm_shield 类型值=143 类型名=减免盾多少值，BUFF消失.\nlua_role_has_bag_guard 类型值=144 类型名=有包裹防掉落.\nlua_role_has_equip_guard 类型值=145 类型名=有装备防掉落.\nlua_role_is_gray 类型值=146 类型名=灰名.\nlua_role_is_chaos 类型值=147 类型名=混沌状态.\nlua_role_is_poisoning 类型值=148 类型名=是否中毒.\nlua_role_is_ghost 类型值=149 类型名=是否ghost.\nlua_role_is_pk 类型值=150 类型名=是否pk状态.\nlua_role_can_through 类型值=151 类型名=是否可以穿人穿怪.\nlua_role_can_zhenshi 类型值=152 类型名=是否珍视.\nlua_role_can_opt_bag 类型值=153 类型名=是否可以操作包裹.\nlua_role_can_change_atk_mode 类型值=154 类型名=是否可以改变攻击类型.\nlua_role_inner_force 类型值=155 类型名=角色内功值.\nlua_role_inner_force_lv 类型值=156 类型名=角色内功等级.\nlua_role_inner_force_rec 类型值=157 类型名=内功恢复速度.\nlua_role_inner_force_rec_pct 类型值=158 类型名=内功恢复速度百分比.\nlua_role_max_inner_force 类型值=159 类型名=角色最大内功值.\nlua_role_inner_force_exp_pct 类型值=160 类型名=内功经验倍数.\nlua_role_inner_force_derate_pct 类型值=161 类型名=内功减伤百分比.\nlua_role_has_team 类型值=180 类型名= 有队伍.\nlua_role_gender 类型值=181 类型名= 性别.\nlua_role_head 类型值=182 类型名= 头像.\nlua_role_hair 类型值=183 类型名= 头发.\nlua_role_hair_color 类型值=184 类型名= 头发颜色.\nlua_role_gm_level 类型值=185 类型名= gm等级.\nlua_role_identify 类型值=186 类型名= 鉴定积分.\nlua_role_title 类型值=187 类型名= 称号.\nlua_role_gold_settlement 类型值=188 类型名= 金币结算: 1金币结算 0:绑币结算.\nlua_role_stall 类型值=189 类型名= 0: 未摆摊 1: 摆摊准备 2: 摆摊中.\nlua_role_friend_switch 类型值=190 类型名= 0: 不可加好友 1: 可加好友.\nlua_role_team_switch 类型值=191 类型名= 0: 不接收队伍邀请 1: 接收队伍邀请.\nlua_role_has_family 类型值=192 类型名= 有行会.\nlua_role_exp_pct 类型值=193 类型名=经验倍数.\nlua_role_mag_miss 类型值=194 类型名=魔法闪避.\nlua_role_intensity 类型值=195 类型名=装备强度.\nlua_role_attack_pct 类型值=196 类型名=攻击力倍数.\nlua_role_defense_pct 类型值=197 类型名=防御力倍数.\nlua_role_gp_runtime 类型值=198 类型名=反外挂运行时计时器.\nlua_role_gp 类型值=199 类型名=反外挂总计数器.\nlua_role_ride_switch 类型值=200 类型名=骑马开关.\nlua_role_vip_level 类型值=201 类型名=角色vip等级.\nlua_role_vip_buytimes 类型值=202 类型名=角色vip购买时间.\nlua_role_lock_switch 类型值=203 类型名=锁开关.\nlua_role_effect1 类型值=204 类型名=武器发光位置.\nlua_role_effect2 类型值=205 类型名=身体发光位置.\nlua_role_effect3 类型值=206 类型名=马蹄发光位置.\nlua_role_effect4 类型值=207 类型名=预留发光位置1.\nlua_role_effect5 类型值=208 类型名=预留发光位置2.\nlua_role_camp 类型值=209 类型名=阵营.\nlua_role_avatar 类型值=210 类型名=外形.\nlua_role_rage 类型值=211 类型名=怒气.\nlua_role_max_rage 类型值=212 类型名=怒气上限.\nlua_role_hunt_drop_pct 类型值=213 类型名=怪物掉落倍数.\nlua_role_ignore_def 类型值=214 类型名=忽视目标防御常数.\nlua_role_ignore_def_pct 类型值=215 类型名=忽视目标防御百分比.\nlua_role_ignore_imm 类型值=216 类型名=忽视目标减免盾常数.\nlua_role_ignore_imm_pct 类型值=217 类型名=忽视目标减免盾百分比.\nlua_role_ignore_def_valid 类型值=218 类型名=忽视目标防御生效概率百分比.\nlua_role_igonre_imm_valid 类型值=219 类型名=忽视目标减免盾生效概率百分比.\nlua_role_dyn_att0 类型值=300 类型名=动态属性名0.\nlua_role_dyn_value0 类型值=301 类型名=动态属性值0.\nlua_role_dyn_att1 类型值=302 类型名=动态属性名1.\nlua_role_dyn_value1 类型值=303 类型名=动态属性值1.\nlua_role_dyn_att2 类型值=304 类型名=动态属性名2.\nlua_role_dyn_value2 类型值=305 类型名=动态属性值2.\nlua_role_dyn_att3 类型值=306 类型名=动态属性名3.\nlua_role_dyn_value3 类型值=307 类型名=动态属性值3.\nlua_role_dyn_att4 类型值=308 类型名=动态属性名4.\nlua_role_dyn_value4 类型值=309 类型名=动态属性值4.\nlua_role_dyn_att5 类型值=310 类型名=动态属性名5.\nlua_role_dyn_value5 类型值=311 类型名=动态属性值5.\nlua_role_dyn_att6 类型值=312 类型名=动态属性名6.\nlua_role_dyn_value6 类型值=313 类型名=动态属性值6.\nlua_role_dyn_att7 类型值=314 类型名=动态属性名7.\nlua_role_dyn_value7 类型值=315 类型名=动态属性值7.\nlua_role_dyn_att8 类型值=316 类型名=动态属性名8.\nlua_role_dyn_value8 类型值=317 类型名=动态属性值8.\nlua_role_dyn_att9 类型值=318 类型名=动态属性名9.\nlua_role_dyn_value9 类型值=319 类型名=动态属性值9.\nlua_role_dyn_att10 类型值=320 类型名=动态属性名10.\nlua_role_dyn_value10 类型值=321 类型名=动态属性值10.\nlua_role_dyn_att11 类型值=322 类型名=动态属性名11.\nlua_role_dyn_value11 类型值=323 类型名=动态属性值11.\nlua_role_dyn_att12 类型值=324 类型名=动态属性名12.\nlua_role_dyn_value12 类型值=325 类型名=动态属性值12.\nlua_role_dyn_att13 类型值=326 类型名=动态属性名13.\nlua_role_dyn_value13 类型值=327 类型名=动态属性值13.\nlua_role_dyn_att14 类型值=328 类型名=动态属性名14.\nlua_role_dyn_value14 类型值=329 类型名=动态属性值14.\nlua_role_dyn_att15 类型值=330 类型名=动态属性名15.\nlua_role_dyn_value15 类型值=331 类型名=动态属性值15.\nlua_role_dyn_att16 类型值=332 类型名=动态属性名16.\nlua_role_dyn_value16 类型值=333 类型名=动态属性值16.\nlua_role_dyn_att17 类型值=334 类型名=动态属性名17.\nlua_role_dyn_value17 类型值=335 类型名=动态属性值17.\nlua_role_dyn_att18 类型值=336 类型名=动态属性名18.\nlua_role_dyn_value18 类型值=337 类型名=动态属性值18.\nlua_role_dyn_att19 类型值=338 类型名=动态属性名19.\nlua_role_dyn_value19 类型值=339 类型名=动态属性值19.\nlua_role_dyn_att20 类型值=340 类型名=动态属性名20.\nlua_role_dyn_value20 类型值=341 类型名=动态属性值20.\nlua_role_dyn_att21 类型值=342 类型名=动态属性名21.\nlua_role_dyn_value21 类型值=343 类型名=动态属性值21.\nlua_role_dyn_att22 类型值=344 类型名=动态属性名22.\nlua_role_dyn_value22 类型值=345 类型名=动态属性值22.\nlua_role_dyn_att23 类型值=346 类型名=动态属性名23.\nlua_role_dyn_value23 类型值=347 类型名=动态属性值23.\nlua_role_dyn_att24 类型值=348 类型名=动态属性名24.\nlua_role_dyn_value24 类型值=349 类型名=动态属性值24.\nlua_role_dyn_att25 类型值=350 类型名=动态属性名25.\nlua_role_dyn_value25 类型值=351 类型名=动态属性值25.\nlua_role_dyn_att26 类型值=352 类型名=动态属性名26.\nlua_role_dyn_value26 类型值=353 类型名=动态属性值26.\nlua_role_dyn_att27 类型值=354 类型名=动态属性名27.\nlua_role_dyn_value27 类型值=355 类型名=动态属性值27.\nlua_role_dyn_att28 类型值=356 类型名=动态属性名28.\nlua_role_dyn_value28 类型值=357 类型名=动态属性值28.\nlua_role_dyn_att29 类型值=358 类型名=动态属性名29.\nlua_role_dyn_value29 类型值=359 类型名=动态属性值29.\nlua_role_dyn_att30 类型值=360 类型名=动态属性名30.\nlua_role_dyn_value30 类型值=361 类型名=动态属性值30.\nlua_role_dyn_att31 类型值=362 类型名=动态属性名31.\nlua_role_dyn_value31 类型值=363 类型名=动态属性值31.\nlua_role_dyn_att32 类型值=364 类型名=动态属性名32.\nlua_role_dyn_value32 类型值=365 类型名=动态属性值32.\nlua_role_dyn_att33 类型值=366 类型名=动态属性名33.\nlua_role_dyn_value33 类型值=367 类型名=动态属性值33.\nlua_role_dyn_att34 类型值=368 类型名=动态属性名34.\nlua_role_dyn_value34 类型值=369 类型名=动态属性值34.\nlua_role_dyn_att35 类型值=370 类型名=动态属性名35.\nlua_role_dyn_value35 类型值=371 类型名=动态属性值35.\nlua_role_dyn_att36 类型值=372 类型名=动态属性名36.\nlua_role_dyn_value36 类型值=373 类型名=动态属性值36.\nlua_role_dyn_att37 类型值=374 类型名=动态属性名37.\nlua_role_dyn_value37 类型值=375 类型名=动态属性值37.\nlua_role_dyn_att38 类型值=376 类型名=动态属性名38.\nlua_role_dyn_value38 类型值=377 类型名=动态属性值38.\nlua_role_dyn_att39 类型值=378 类型名=动态属性名39.\nlua_role_dyn_value39 类型值=379 类型名=动态属性值39.\nlua_role_dyn_att40 类型值=380 类型名=动态属性名40.\nlua_role_dyn_value40 类型值=381 类型名=动态属性值40.\nlua_role_dyn_att41 类型值=382 类型名=动态属性名41.\nlua_role_dyn_value41 类型值=383 类型名=动态属性值41.\nlua_role_dyn_att42 类型值=384 类型名=动态属性名42.\nlua_role_dyn_value42 类型值=385 类型名=动态属性值42.\nlua_role_dyn_att43 类型值=386 类型名=动态属性名43.\nlua_role_dyn_value43 类型值=387 类型名=动态属性值43.\nlua_role_dyn_att44 类型值=388 类型名=动态属性名44.\nlua_role_dyn_value44 类型值=389 类型名=动态属性值44.\nlua_role_dyn_att45 类型值=390 类型名=动态属性名45.\nlua_role_dyn_value45 类型值=391 类型名=动态属性值45.\nlua_role_dyn_att46 类型值=392 类型名=动态属性名46.\nlua_role_dyn_value46 类型值=393 类型名=动态属性值46.\nlua_role_dyn_att47 类型值=394 类型名=动态属性名47.\nlua_role_dyn_value47 类型值=395 类型名=动态属性值47.\nlua_role_dyn_att48 类型值=396 类型名=动态属性名48.\nlua_role_dyn_value48 类型值=397 类型名=动态属性值48.\nlua_role_dyn_att49 类型值=398 类型名=动态属性名49.\nlua_role_dyn_value49 类型值=399 类型名=动态属性值49.\nlua_role_dyn_att50 类型值=400 类型名=动态属性名50.\nlua_role_dyn_value50 类型值=401 类型名=动态属性值50.\nlua_role_dyn_att51 类型值=402 类型名=动态属性名51.\nlua_role_dyn_value51 类型值=403 类型名=动态属性值51.\nlua_role_dyn_att52 类型值=404 类型名=动态属性名52.\nlua_role_dyn_value52 类型值=405 类型名=动态属性值52.\nlua_role_dyn_att53 类型值=406 类型名=动态属性名53.\nlua_role_dyn_value53 类型值=407 类型名=动态属性值53.\nlua_role_dyn_att54 类型值=408 类型名=动态属性名54.\nlua_role_dyn_value54 类型值=409 类型名=动态属性值54.\nlua_role_dyn_att55 类型值=410 类型名=动态属性名55.\nlua_role_dyn_value55 类型值=411 类型名=动态属性值55.\nlua_role_dyn_att56 类型值=412 类型名=动态属性名56.\nlua_role_dyn_value56 类型值=413 类型名=动态属性值56.\nlua_role_dyn_att57 类型值=414 类型名=动态属性名57.\nlua_role_dyn_value57 类型值=415 类型名=动态属性值57.\nlua_role_dyn_att58 类型值=416 类型名=动态属性名58.\nlua_role_dyn_value58 类型值=417 类型名=动态属性值58.\nlua_role_dyn_att59 类型值=418 类型名=动态属性名59.\nlua_role_dyn_value59 类型值=419 类型名=动态属性值59.\nlua_role_dyn_att60 类型值=420 类型名=动态属性名60.\nlua_role_dyn_value60 类型值=421 类型名=动态属性值60.\nlua_role_dyn_att61 类型值=422 类型名=动态属性名61.\nlua_role_dyn_value61 类型值=423 类型名=动态属性值61.\nlua_role_dyn_att62 类型值=424 类型名=动态属性名62.\nlua_role_dyn_value62 类型值=425 类型名=动态属性值62.\nlua_role_dyn_att63 类型值=426 类型名=动态属性名63.\nlua_role_dyn_value63 类型值=427 类型名=动态属性值63.\nlua_role_dyn_att64 类型值=428 类型名=动态属性名64.\nlua_role_dyn_value64 类型值=429 类型名=动态属性值64.\nlua_role_dyn_att65 类型值=430 类型名=动态属性名65.\nlua_role_dyn_value65 类型值=431 类型名=动态属性值65.\nlua_role_dyn_att66 类型值=432 类型名=动态属性名66.\nlua_role_dyn_value66 类型值=433 类型名=动态属性值66.\nlua_role_dyn_att67 类型值=434 类型名=动态属性名67.\nlua_role_dyn_value67 类型值=435 类型名=动态属性值67.\nlua_role_dyn_att68 类型值=436 类型名=动态属性名68.\nlua_role_dyn_value68 类型值=437 类型名=动态属性值68.\nlua_role_dyn_att69 类型值=438 类型名=动态属性名69.\nlua_role_dyn_value69 类型值=439 类型名=动态属性值69.\nlua_role_dyn_att70 类型值=440 类型名=动态属性名70.\nlua_role_dyn_value70 类型值=441 类型名=动态属性值70.\nlua_role_dyn_att71 类型值=442 类型名=动态属性名71.\nlua_role_dyn_value71 类型值=443 类型名=动态属性值71.\nlua_role_dyn_att72 类型值=444 类型名=动态属性名72.\nlua_role_dyn_value72 类型值=445 类型名=动态属性值72.\nlua_role_dyn_att73 类型值=446 类型名=动态属性名73.\nlua_role_dyn_value73 类型值=447 类型名=动态属性值73.\nlua_role_dyn_att74 类型值=448 类型名=动态属性名74.\nlua_role_dyn_value74 类型值=449 类型名=动态属性值74.\nlua_role_dyn_att75 类型值=450 类型名=动态属性名75.\nlua_role_dyn_value75 类型值=451 类型名=动态属性值75.\nlua_role_dyn_att76 类型值=452 类型名=动态属性名76.\nlua_role_dyn_value76 类型值=453 类型名=动态属性值76.\nlua_role_dyn_att77 类型值=454 类型名=动态属性名77.\nlua_role_dyn_value77 类型值=455 类型名=动态属性值77.\nlua_role_dyn_att78 类型值=456 类型名=动态属性名78.\nlua_role_dyn_value78 类型值=457 类型名=动态属性值78.\nlua_role_dyn_att79 类型值=458 类型名=动态属性名79.\nlua_role_dyn_value79 类型值=459 类型名=动态属性值79.\nlua_role_dyn_att80 类型值=460 类型名=动态属性名80.\nlua_role_dyn_value80 类型值=461 类型名=动态属性值80.\nlua_role_dyn_att81 类型值=462 类型名=动态属性名81.\nlua_role_dyn_value81 类型值=463 类型名=动态属性值81.\nlua_role_dyn_att82 类型值=464 类型名=动态属性名82.\nlua_role_dyn_value82 类型值=465 类型名=动态属性值82.\nlua_role_dyn_att83 类型值=466 类型名=动态属性名83.\nlua_role_dyn_value83 类型值=467 类型名=动态属性值83.\nlua_role_dyn_att84 类型值=468 类型名=动态属性名84.\nlua_role_dyn_value84 类型值=469 类型名=动态属性值84.\nlua_role_dyn_att85 类型值=470 类型名=动态属性名85.\nlua_role_dyn_value85 类型值=471 类型名=动态属性值85.\nlua_role_dyn_att86 类型值=472 类型名=动态属性名86.\nlua_role_dyn_value86 类型值=473 类型名=动态属性值86.\nlua_role_dyn_att87 类型值=474 类型名=动态属性名87.\nlua_role_dyn_value87 类型值=475 类型名=动态属性值87.\nlua_role_dyn_att88 类型值=476 类型名=动态属性名88.\nlua_role_dyn_value88 类型值=477 类型名=动态属性值88.\nlua_role_dyn_att89 类型值=478 类型名=动态属性名89.\nlua_role_dyn_value89 类型值=479 类型名=动态属性值89.\nlua_role_dyn_att90 类型值=480 类型名=动态属性名90.\nlua_role_dyn_value90 类型值=481 类型名=动态属性值90.\nlua_role_dyn_att91 类型值=482 类型名=动态属性名91.\nlua_role_dyn_value91 类型值=483 类型名=动态属性值91.\nlua_role_dyn_att92 类型值=484 类型名=动态属性名92.\nlua_role_dyn_value92 类型值=485 类型名=动态属性值92.\nlua_role_dyn_att93 类型值=486 类型名=动态属性名93.\nlua_role_dyn_value93 类型值=487 类型名=动态属性值93.\nlua_role_dyn_att94 类型值=488 类型名=动态属性名94.\nlua_role_dyn_value94 类型值=489 类型名=动态属性值94.\nlua_role_dyn_att95 类型值=490 类型名=动态属性名95.\nlua_role_dyn_value95 类型值=491 类型名=动态属性值95.\nlua_role_dyn_att96 类型值=492 类型名=动态属性名96.\nlua_role_dyn_value96 类型值=493 类型名=动态属性值96.\nlua_role_dyn_att97 类型值=494 类型名=动态属性名97.\nlua_role_dyn_value97 类型值=495 类型名=动态属性值97.\nlua_role_dyn_att98 类型值=496 类型名=动态属性名98.\nlua_role_dyn_value98 类型值=497 类型名=动态属性值98.\nlua_role_dyn_att99 类型值=498 类型名=动态属性名99.\nlua_role_dyn_value99 类型值=499 类型名=动态属性值99.\n\n",
	eRoleSite="\n枚举类型:角色site位类型定义\n参数:\n返回:无返回值.\n备注:\nlua_site_weapon 类型值=1 类型名=武器的site.\nlua_site_helmet 类型值=2 类型名=头盔的site.\nlua_site_wrist_0 类型值=3 类型名=护腕0的site.\nlua_site_wrist_1 类型值=4 类型名=护腕1site.\nlua_site_armor 类型值=5 类型名=衣服的site.\nlua_site_juju 类型值=6 类型名=符咒的site.\nlua_site_shoes 类型值=7 类型名=鞋子的site.\nlua_site_shoulder 类型值=8 类型名=护肩的site.\nlua_site_necklace 类型值=9 类型名=项链的site.\nlua_site_ring_0 类型值=10 类型名=戒指0的site.\nlua_site_ring_1 类型值=11 类型名=戒指1的site.\nlua_site_medal 类型值=12 类型名=勋章的site.\nlua_site_gem 类型值=13 类型名=宝石的site.\nlua_site_wings 类型值=14 类型名=翅膀的site.\nlua_site_amulet 类型值=15 类型名=守护的site.\nlua_site_mount 类型值=16 类型名=坐骑的site.\nlua_site_shield 类型值=17 类型名=盾牌的site.\nlua_site_fashion 类型值=18 类型名=时装的site.\nlua_site_hat 类型值=19 类型名=斗笠的site.\nlua_site_gloves 类型值=20 类型名=手套的site.\nlua_site_jewelry 类型值=21 类型名=珠宝的site.\nlua_site_bag_0 类型值=22 类型名=背包0第一个格子的site.\nlua_site_bag_1 类型值=62 类型名=背包1第一个格子的site.\nlua_site_bag_2 类型值=102 类型名=背包2第一个格子的site.\nlua_site_bag_3 类型值=142 类型名=背包3第一个格子的site.\nlua_site_bag_4 类型值=182 类型名=背包4第一个格子的site.\nlua_site_warehouse 类型值=222 类型名=仓库第一个格子的site.\nlua_site_warehouse_adv 类型值=262 类型名=高级仓库第一个格子的site.\nlua_site_expand_0 类型值=406 类型名=背包0扩充位置的site.\nlua_site_expand_1 类型值=407 类型名=背包1扩充位置的site.\nlua_site_expand_2 类型值=408 类型名=背包2扩充位置的site.\nlua_site_expand_3 类型值=409 类型名=背包3扩充位置的site.\nlua_site_expand_4 类型值=410 类型名=背包4扩充位置的site.\nlua_site_glasses 类型值=411 类型名=眼镜的site.\nlua_site_bracelet_0 类型值=412 类型名=手镯0的site.\nlua_site_bracelet_1 类型值=413 类型名=手镯1的site.\nlua_site_mask 类型值=414 类型名=面甲的site.\nlua_site_kneelet 类型值=415 类型名=护膝的site.\nlua_site_chestplate 类型值=416 类型名=护胸的site.\nlua_site_cloak 类型值=417 类型名=披风的site.\nlua_site_earrings 类型值=418 类型名=耳环的site.\nlua_site_headwear 类型值=419 类型名=头饰的site.\nlua_site_legguard 类型值=420 类型名=护腿的site.\nlua_site_jade 类型值=421 类型名=玉佩的site.\nlua_site_instrument 类型值=422 类型名=乐器的site.\nlua_site_hangings 类型值=423 类型名=挂饰的site.\nlua_site_fashion_weapon 类型值=424 类型名=时装武器的site.\nlua_site_equip_custom_0 类型值=434 类型名=用户自定义装备位0.\nlua_site_equip_custom_1 类型值=435 类型名=用户自定义装备位1.\nlua_site_equip_custom_2 类型值=436 类型名=用户自定义装备位2.\nlua_site_equip_custom_3 类型值=437 类型名=用户自定义装备位3.\nlua_site_equip_custom_4 类型值=438 类型名=用户自定义装备位4.\nlua_site_equip_custom_5 类型值=439 类型名=用户自定义装备位5.\nlua_site_equip_custom_6 类型值=440 类型名=用户自定义装备位6.\nlua_site_equip_custom_7 类型值=441 类型名=用户自定义装备位7.\nlua_site_equip_custom_8 类型值=442 类型名=用户自定义装备位8.\nlua_site_equip_custom_9 类型值=443 类型名=用户自定义装备位9.\nlua_site_equip_custom_10 类型值=444 类型名=用户自定义装备位10.\nlua_site_equip_custom_11 类型值=445 类型名=用户自定义装备位11.\nlua_site_equip_custom_12 类型值=446 类型名=用户自定义装备位12.\nlua_site_equip_custom_13 类型值=447 类型名=用户自定义装备位13.\nlua_site_equip_custom_14 类型值=448 类型名=用户自定义装备位14.\nlua_site_equip_custom_15 类型值=449 类型名=用户自定义装备位15.\nlua_site_equip_custom_16 类型值=450 类型名=用户自定义装备位16.\nlua_site_equip_custom_17 类型值=451 类型名=用户自定义装备位17.\nlua_site_equip_custom_18 类型值=452 类型名=用户自定义装备位18.\nlua_site_equip_custom_19 类型值=453 类型名=用户自定义装备位19.\n\n",
	eTriggerType="\n枚举类型:触发器类型定义\n参数:\n返回:无返回值.\n备注:\nlua_trigger_system_start 类型值=1 类型名=系统启动时回调.\nlua_trigger_first_in_game 类型值=2 类型名=第一次进游戏时回调.\nlua_trigger_login 类型值=3 类型名=登陆游戏时回调.\nlua_trigger_logout 类型值=4 类型名=退出游戏时回调.\nlua_trigger_castle_war_start 类型值=5 类型名=攻城战开始时回调.\nlua_trigger_castle_war_end 类型值=6 类型名=攻城战结束时回调.\nlua_trigger_castle_war_init 类型值=7 类型名=类型值=7 类型名=申请攻城战成功时回调.\nlua_trigger_gp 类型值=8 类型名=类型值=8 类型名=检测到平均超速时回调.\nlua_trigger_gp_one 类型值=9 类型名=类型值=9 类型名=检测到超速时回调.\nlua_trigger_map_create 类型值=200 类型名=地图建创时回调.\nlua_trigger_map_destroy 类型值=201 类型名=地图销毁时回调.\nlua_trigger_enter_map 类型值=202 类型名=进入地图时回调.\nlua_trigger_leave_map 类型值=203 类型名=离开地图时回调.\nlua_trigger_item_appear 类型值=204 类型名=物品在地图上出现时回调.\nlua_trigger_item_disappear 类型值=205 类型名=物品在地图上消失时回调.\nlua_trigger_monster_appear 类型值=206 类型名=怪物在地图上出现时回调.\nlua_trigger_monster_disappear 类型值=207 类型名=怪物在地图上消失时回调.\nlua_trigger_npc_appear 类型值=208 类型名=NPC在地图上出现时回调.\nlua_trigger_npc_disappear 类型值=209 类型名=NPC在地图上消失时回调.\nlua_trigger_level_up 类型值=300 类型名=升级时回调.\nlua_trigger_pre_equip 类型值=301 类型名=穿装备之前回调.\nlua_trigger_post_equip 类型值=302 类型名=穿装备之后回调.\nlua_trigger_pre_un_equip 类型值=303 类型名=脱装备之前回调.\nlua_trigger_post_un_equip 类型值=304 类型名=脱装备之后回调.\nlua_trigger_move 类型值=305 类型名=移动时回调.\nlua_trigger_pre_spell 类型值=306 类型名=使用技能之前回调.\nlua_trigger_spell 类型值=307 类型名=使用技能之后回调.\nlua_trigger_pre_mining 类型值=308 类型名=挖矿之前回调.\nlua_trigger_mining 类型值=309 类型名=挖矿之后回调.\nlua_trigger_pre_item_apply 类型值=310 类型名=使用物品之前回调.\nlua_trigger_item_apply 类型值=311 类型名=使用物品之后回调.\nlua_trigger_pre_item_pickup 类型值=312 类型名=拾取物品之前回调.\nlua_trigger_item_pickup 类型值=313 类型名=拾取物品之后回调.\nlua_trigger_pre_item_drop 类型值=314 类型名=主动扔物品之前回调.\nlua_trigger_item_drop 类型值=315 类型名=主动扔物品之后回调.\nlua_trigger_pre_die 类型值=316 类型名=死亡之前回调.\nlua_trigger_post_die 类型值=317 类型名=死亡之后回调.\nlua_trigger_kill 类型值=318 类型名=杀死角色时回调.\nlua_trigger_attack 类型值=319 类型名=受攻击时回调.\nlua_trigger_damage_process 类型值=322 类型名=走伤害处理流程时回调.\nlua_trigger_restore_process 类型值=323 类型名=走恢复处理流程时回调.\nlua_trigger_teleport 类型值=324 类型名=瞬移时回调.\nlua_trigger_pre_catch 类型值=325 类型名=捉宝宝之前回调.\nlua_trigger_catch 类型值=326 类型名=捉宝宝之后回调.\nlua_trigger_pre_dig_meat 类型值=327 类型名=挖肉之前回调.\nlua_trigger_dig_meat 类型值=328 类型名=挖肉之后回调.\nlua_trigger_add_buff 类型值=329 类型名=添加BUFF时回调.\nlua_trigger_remove_buff 类型值=330 类型名=删除BUFF时回调.\nlua_trigger_pre_drop 类型值=331 类型名=要爆东西之前回调.\nlua_trigger_post_drop 类型值=332 类型名=要爆东西之后回调.\nlua_trigger_pre_drop_one 类型值=333 类型名=爆某个具体物品之前回调.\nlua_trigger_post_drop_one 类型值=334 类型名=爆某个具体物品之后回调.\nlua_trigger_add_skill 类型值=335 类型名=添加技能时回调.\nlua_trigger_switch_skill 类型值=336 类型名=开关技能时回调.\nlua_trigger_summon 类型值=337 类型名=召唤宝宝时回调.\nlua_trigger_pre_process_pk 类型值=338 类型名=处理PK值之前回调.\nlua_trigger_post_process_pk 类型值=339 类型名=处理PK值之后回调.\nlua_trigger_create 类型值=340 类型名=怪物、物品、NPC创建时回调.\nlua_trigger_destroy 类型值=341 类型名=怪物、物品、NPC销毁时回调.\nlua_trigger_pre_enter_jump 类型值=343 类型名=进入跳转点之前回调.\nlua_trigger_equip_suit 类型值=344 类型名=装备套装时回调.\nlua_trigger_un_equip_suit 类型值=345 类型名=脱掉套装时回调.\nlua_trigger_item_amount_zero 类型值=346 类型名=物品堆叠数为0时回调.\nlua_trigger_item_use_zero 类型值=347 类型名=物品使用次数为0时回调.\nlua_trigger_item_dur_zero 类型值=348 类型名=物品耐久为0时回调.\nlua_trigger_item_timeup 类型值=349 类型名=物品时效过期时回调.\nlua_trigger_add_exp 类型值=350 类型名=杀怪得到经验时回调.\nlua_trigger_monster_born 类型值=351 类型名=怪物出生时回调.\nlua_trigger_player_relive 类型值=352 类型名=玩家复活时回调.\nlua_trigger_dungeon_end 类型值=353 类型名=副本结束时回调.\nlua_trigger_timer_check 类型值=354 类型名=道具自检时回调.\nlua_trigger_add_exp_all 类型值=355 类型名=任何原因得到经验时回调(已被删除,不当使用会造成服务器死循环).\nlua_trigger_player_pre_die 类型值=356 类型名=玩家死亡之前回调.\nlua_trigger_player_post_die 类型值=357 类型名=玩家死亡之后回调.\nlua_trigger_monster_pre_die 类型值=358 类型名=怪物死亡之前回调.\nlua_trigger_monster_post_die 类型值=359 类型名=怪物死亡之后回调.\nlua_trigger_attack_ex 类型值=360 类型名=受攻击时回调.on_attack加强版,多了扣血值与技能参数.\nlua_trigger_system_stop 类型值=361 类型名=系统停止时回调.\nlua_trigger_pre_logout 类型值=362 类型名=退出游戏之前回调.\nlua_trigger_ride_request 类型值=363 类型名=收到上马请求时回调.\nlua_trigger_unride_request 类型值=364 类型名=收到下马请求时回调.\nlua_trigger_billin 类型值=365 类型名=充值回调,只有玩家在线才会回调.\nlua_trigger_mall 类型值=366 类型名=商城消费之后回调.\nlua_trigger_pre_mall 类型值=367 类型名=商城消费之前回调.\nlua_trigger_escorter_fail 类型值=368 类型名=护送怪失败时回调.\nlua_trigger_escorter_far 类型值=369 类型名=护送怪过远时回调.\nlua_trigger_apply_buff 类型值=370 类型名=buff触发回调.\nlua_trigger_monster_in_fight 类型值=371 类型名=怪物进入战斗状态触发.\nlua_trigger_monster_out_fight 类型值=372 类型名=怪物退出战斗状态触发.\nlua_trigger_player_pre_curse 类型值=373 类型名=武器被诅咒前触发.\nlua_trigger_role_pre_harm 类型值=374 类型名=角色受到伤害时触发,返回固定伤害数值.\nlua_trigger_pre_npc_buy 类型值=375 类型名=玩家NPC处购买物品前触发,返回值决定是否可以购买物品.\nlua_trigger_npc_buy 类型值=376 类型名=玩家NPC处购买物品触发.\nlua_trigger_pre_stall 类型值=377 类型名=玩家摆摊前触发.\nlua_trigger_hack_check 类型值=378 类型名=外挂检测触发.\nlua_trigger_auto_add_gold 类型值=379 类型名=杀怪自动加金币\nlua_trigger_hack_check2 类型值=380 类型名=外挂检查\nlua_trigger_family_member_ntf 类型值=381 类型名=行会事件\nlua_trigger_pre_stall_buy 类型值=382 类型名=购买摆摊物品前触发\nlua_trigger_family_ntf 类型值=383 类型名=行会创建和销毁触发\nlua_trigger_item_dur_zero_ex 类型值=384 类型名=耐久为0删除扩展\nlua_trigger_dummy_pre_die 类型值=385 类型名=假人死亡前触发\nlua_trigger_dummy_post_die 类型值=386 类型名=假人死亡后触发\nlua_trigger_item_attr_zero 类型值=387 类型名=物品属性变为0触发\nlua_trigger_attacker_pre_harm 类型值=388 类型名=攻击者受到伤害时触发,返回固定伤害数值.\nlua_trigger_pre_level_up 类型值=389 类型名=角色升级前触发.\nlua_trigger_pre_add_gray 类型值=390 类型名=角色变灰名前触发.\nlua_trigger_pre_join_family 类型值=391 类型名=申请加入行会前触发.\nlua_trigger_pre_invite_family 类型值=392 类型名=邀请加入行会前触发.\nlua_trigger_pre_relate_family 类型值=393 类型名=行会敌对联盟前触发.\nlua_trigger_billin_ex 类型值=394 类型名=玩家充值回调,不管玩家是否在线.\nlua_trigger_player_change_name 类型值=395 类型名=玩家改名结果触发\nlua_trigger_sub_ingot 类型值=396 类型名=玩家扣元宝触发\nlua_trigger_servant_betry 类型值=397 类型名=宝宝叛变触发\nlua_trigger_captcha_result 类型值=398 类型名=验证码结果触发\nlua_trigger_pre_p2p_trade 类型值=399 类型名=p2p交易前触发\nlua_trigger_pre_market_delegate_sell 类型值=400 类型名=寄售行寄售前触发\n\n",
	trim="string  trim(string  strString)\n去掉字符串首尾多余的空白字符.\n参数:strString 待处理的字符串,\n返回:去掉字符串首尾所有的空白字符后的新串.\n备注:t_str=string.trim(str)，去掉str字符串首尾所有的空白字符（不包括中间），返回新字符串t_str。空白字符包括：换行符(\n)、制表符(\t)、回车符(\r)、回退符(\b)、换页符 (\f)，空格符(\32)。\n",
	split="table  split(string  strMaster,string  strSub)\n对字符串以指定分隔符进行分隔.\n参数:strMaster 主字符串.,strSub 分隔字符串.,\n返回:分隔后的串列表.\n备注:table=string.split(master, sub)，以子串sub为分隔符，对主串进行分隔。分隔后的串放入table中，并返回这个table。比如：string.split('ABC#DE', '#')，执行的结果就是{'ABC', 'DE'}。\n\n	与接口StrSplit效果一致。\n",
	indexOf="int  indexOf(string  strMaster,string  strSub)\n在主字符串中查找子字符串.\n参数:strMaster 主字符串.,strSub 子字符串.,\n返回:子字符串在主字符串中的位置(数组下标),出错返回-1.\n备注:t_pos=string.indexOf(master, sub),在主串master中查找sub。返回查找到的位置（数组下标），出错返回-1。比如：string.indexOf(&ldquo;abcdef&rdquo;, &ldquo;de&rdquo;)，执行的结果就是3。\n",
	indexOf="int  indexOf(string  strMaster,string  strSub,int  iOffset)\n在主字符串中从指定位置查找子字符串.\n参数:strMaster 主字符串.,strSub 子字符串.,iOffset 相对字符串开头的偏移位.,\n返回:返回查找到的位置(数组下标),出错返回-1.\n备注:t_pos=string.indexOf(master, sub, offset) ,在主串master中从offset位置开始查找sub。返回查找到的位置（数组下标），出错返回-1。比如：string.indexOf(&ldquo;abcdef&rdquo;, &ldquo;de&rdquo;, 1)，执行的结果就是3。\n",
	left="string  left(string  strString,int  iLen)\n从字符串左边起复制N个长度的字符.\n参数:strString 字符串.,iLen 要复制的长度.,\n返回:复制后新字符串.\n备注:t_str=string.left(str, len),从字符串str的最左边位置复制len个长度的字符到目标串中，并返回目标串。\n\n	复制的长度不能超过字符串长度，否则出错。\n",
	left="string  left(string  strString,int  iLen,int  iOffset)\n从字符串的左边第n个位置复制m个长度的字符.\n参数:strString 字符串.,iLen 要复制的长度.,iOffset 字符串左起偏移长度.,\n返回:返回新字符串.\n备注:t_str=string.left(str, len, offset),从字符串str的左边第offset个位置复制len个长度的字符到目标串中，并返回目标串。比如:string.left(&ldquo;abcdef&rdquo;, 2, 1)，执行的结果就是&rdquo;bc&rdquo;。\n\n	复制的长度不能超过字符串长度-偏移长度\n",
	right="string  right(string  strString,int  iLen)\n从字符串右边起复制N个长度的字符.\n参数:strString 字符串.,iLen 复制的字符串长度.,\n返回:返回新字符串.\n备注:t_str=string.right(str, len),从字符串str的最右边位置复制len个长度的字符到目标串中，并返回目标串。\n\n	复制的长度不能超过字符串长度\n",
	right="string  right(string  strString,int  iLen,int  iOffset)\n从字符串的右边第n个位置复制m个长度的字符.\n参数:strString 字符串.,iLen 复制字符的长度.,iOffset 字符串偏移长度.,\n返回:返回新字符串.\n备注:t_str=string. right (str, len, offset),从字符串str的右边第offset个位置复制len个长度的字符到目标串中，并返回目标串。比如:string.right(&ldquo;abcdef&rdquo;, 2, 1),执行的结果就是&rdquo;de&rdquo;。\n\n	复制的长度不能超过字符串长度-偏移长度\n",
	mid="string  mid(string  strString,int  iOffset,int  iLen)\n从字符串的开始偏移n个位置复制m个长度的字符.\n参数:strString 字符串.,iOffset 字符串偏移长度.,iLen 复制的字符串长度.,\n返回:返回新字符串.\n备注:t_str=string.mid(str, offset, len),从字符串str的开始偏移offset个位置复制len个长度的字符到目标串中，并返回目标串(功能同string.left)。比如:string.mid(&ldquo;abcdef&rdquo;, 1, 2),执行的结果就是&rdquo;bc&rdquo;。\n\n	复制的长度不能超过字符串长度-偏移长度\n",
	ord="int  ord(string  strChar)\n返回字符的ascii码.\n参数:strChar 字符串.,\n返回:字符的ascii码.\n备注:i_asscii=string.ord(str),返回字符的ASSCII码,字符串str的长度必须为1.比如:string.ord(&ldquo;A&rdquo;),执行的结果就是65.\n",
	chr="string  chr(int  iAscii)\n将ascii转成字符.\n参数:iAscii 字符的ascii码.,\n返回:ascii码对应的字符,长度为1.\n备注:t_str=string.chr(i_asscii),返回数值i&shy;_asscii的字符格式。比如:string.chr(65),执行的结果就是&rdquo;A&rdquo;。\n",
	replace="string  replace(string  strMaster,string  strFinder,string  strReplace)\n在主字符串中查找子字符串,查找到后将找到的子字符串进行替换操作.\n参数:strMaster 主字符串.,strFinder 查找的字符串.,strReplace 替换的字符串.,\n返回:返回新字符串.\n备注:t_str=string.replace(strMaster, strFinder, strReplace)，在主字符串中查找子字符串，查找到后将找到的子字符串进行替换操作。返回替换后的新字符串。\n",
	encode="string  encode(object  oObject)\n将lua对象转换成json格式的字符串.\n参数:oObject 任意lua对象.,\n返回:对象的json字符串.\n备注:json_text=json.encode(object) 将任意对象转换成json字符串，对象可以是数字、字符串、table。\n",
	decode="object  decode(string  strJson)\n将json格式的字符串转换成lua对象.\n参数:strJson lua对象对应的json格式串.,\n返回:返回任意lua对象.\n备注:object=json.decode(json_text) 将json字符串转换成对应的对象，根据json字符串的描述，可能转换成数字、字符串、table.\n",
	GetItemGold="int32  GetItemGold(string  strItem)\n取得金币类型物品的金币\n参数:strItem 物品GUID.,\n返回:物品的金币数量,返败返回0.\n参考:Map_GenGold,ModifyItemGold,\n",
	SetDummyDefaultSkillAI="bool  SetDummyDefaultSkillAI(int32  job,table  AI_table)\n设置假人的默认技能AI\n参数:job 职业 1、战士 2、法师 3、道士.,AI_table 欲设置的技能优先级.,\n返回:设置是否成功.\n备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本\n",
	SetDummySkillAI="bool  SetDummySkillAI(string  dummy,table  AI_table)\n设置假人的技能AI\n参数:dummy 假人或英雄的GUID.,AI_table 欲设置的技能优先级.,\n返回:设置是否成功.\n备注:详细的AI_table格式可以参考system/dummy_AI.lua脚本\n",
	GetZoneKey="string  GetZoneKey(void  )\n获取区密钥. \n参数: ,\n返回:区密钥.\n",
	SetLog="bool  SetLog(int32  log_level,bool  is_open)\n日志开关接口. \n参数:log_level 日志级别 1、调试；2、信息；4、警告；8、错误.,is_open 是否打开.,\n返回:true = 成功, false = 失败.\n",
	on_escorter_fail="void  on_escorter_fail(string  strMonster,string  strMaster)\n押送类怪物死亡时回调. \n参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_escorter_far="void  on_escorter_far(string  strMonster,string  strMaster)\n押送类怪物离得过远时回调. \n参数:strMonster 怪物的GUID.,strMaster 怪物所属玩家的GUID,多GS情况下有可能找不到玩家实体.,\n返回:无返回值.\n备注:怪物与玩家一直处于过远状态时,该触发器每10秒只会触发一次.\n参考:eTriggerType,\n",
	GetCurScriptName="string  GetCurScriptName(void  )\n取得当前正在运行的脚本文件名. \n参数: ,\n返回:文件名,没有扩展名.\n警告:该接口不能在类似LoadString执行方式中调用.\n",
	GetSvrRunTime="uint32  GetSvrRunTime(void  )\n获取服务器运行时间. \n参数: ,\n返回:运行的秒数.\n",
	SetDBMerge="bool  SetDBMerge(string  strDatabaseName,uint8  byType,string  strCallBack,string  strParam)\n设置数据表合区类型\n参数:strDatabaseName 数据库表必须以DATA_***的形式定义.,byType 变量全区类型, 0 = 忽略,合区时保留目标数据库数据 1 = 替换,合区时保留源数据库数据 2 = 取大,合区时取大的数据，只对整型 3 = 取小,合区时取小的数据,只对整形 4 = 相加,合区时结果相加,只对整形 5 = 相连,合区时结果相连,只对字符串 6 = 删除,合区时清除,strCallBack 回调函数名,有二种定义格式:1.文件名:函数名 2.函数名.,strParam 自定义参数,由脚本作者自行维护,方便上下文切换.回调时原封不动的传回来.,\n返回:返回投递是否成功.由于数据库事件是异步的,所以返回值只表示事件投递是否成功,而不是SQL执行是否成功.\n备注:回调函数格式:\n void OnDBEvtResult(bool bResult, unsigned int dwError, const char* strError, int iResultNum, const lua_script::lua_table&amp; tRecordSets, const char* strParam);\n bResult:执行结果 \n dwError:错误码 \n strError:错误信息 \n iResultNum:没有结果集的语句影响的结果数 \n tRecordSets:有结果集的语句产生的结果集 \n strParam:自定义参数\n警告:对性能还是有影响的,不要轻易使用.\n",
	SetScriptTimeout="void  SetScriptTimeout(uint32  dwTick)\n设置当前正在运行的脚本死循环判断时间. \n参数:dwTick ,\n返回:无返回值.\n警告:该接口不能在类似LoadString执行方式中调用.\n",
	Player_SetNameColor="bool  Player_SetNameColor(string  strPlayer,string  strColor)\n设置玩家名字的颜色. \n参数:strPlayer 玩家的GUID.,strColor 颜色值.,\n返回:成功或失败.\n",
	AddTitleEx="void  AddTitleEx(string  strPlayer,uint16  wTitleID,uint32  dwTimes)\n给玩家添加称号,允许设置称号时间. \n参数:strPlayer 玩家的GUID.,wTitleID 称号的ID.,dwTimes 称号的持继时间,单位为秒.,\n返回:无返回值.\n备注:如持继时间设为0,则使用配置表时间.\n",
	GetHeroRage="int32  GetHeroRage(string  hero)\n获得英雄的怒气值\n参数:hero 英雄的GUID.,\n返回:当前的怒气值. 如果英雄不存在返回-1\n备注:无\n",
	MapOwnerFamily="string  MapOwnerFamily(string  strMap)\n判断地图上的所有玩家是否属于同一个行会. \n参数:strMap 地图GUID.,\n返回:如果地图上所有玩家不属于同一个行会返回'',反之返回行会名字.\n警告:忽略地图上的GM角色与死亡角色.\n",
	Player_GetServantLevel="int32  Player_GetServantLevel(string  strServant)\n获取玩家召唤宝宝的等级. \n参数:strServant 宝宝的GUID.,\n返回:返回该宝宝的等级,出错返回0.\n",
	SetHeroRage="bool  SetHeroRage(string  hero,int32  rage)\n设置英雄的怒气值\n参数:hero 英雄的GUID.,rage 怒气值.,\n返回:设置是否成功.\n备注:无\n",
	on_monster_in_fight="void  on_monster_in_fight(string  strMonster)\n怪物进入战斗状态时回调\n参数:strMonster 怪物的GUID.,\n返回:无返回值.\n备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物进入战斗状态才回调.\n参考:eTriggerType,\n",
	on_monster_out_fight="void  on_monster_out_fight(string  strMonster)\n怪物退出战斗状态时回调\n参数:strMonster 怪物的GUID.,\n返回:无返回值.\n备注:此回调为异步回调可通过设置过滤器指定某类怪物id的怪物退出战斗状态才回调.\n参考:eTriggerType,\n",
	on_post_monster_die="void  on_post_monster_die(string  strMonster,string  strKiller)\n怪物死亡时回调. \n参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_post_player_die="void  on_post_player_die(string  strPlayer,string  strKiller)\n玩家死亡时回调. \n参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_monster_die="bool  on_pre_monster_die(string  strMonster,string  strKiller)\n怪物死亡之前回调. \n参数:strMonster 怪物的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许怪物死亡, false = 阻止怪物死亡.\n参考:eTriggerType,\n",
	on_pre_player_die="bool  on_pre_player_die(string  strPlayer,string  strKiller)\n玩家死亡之前回调. \n参数:strPlayer 玩家的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许玩家死亡, false = 阻止玩家死亡.\n参考:eTriggerType,\n",
	on_pre_player_relive="bool  on_pre_player_relive(string  strRole,int32  iType)\n角色复活之前回调. \n参数:strRole 角色的GUID.,iType 复活类型, 0 技能复活 1 原地复活 2 回城复活 3 副本复活,\n返回:true = 允许角色复活, false = 阻止角色复活.\n参考:eTriggerType,\n",
	Item_IsExist="bool  Item_IsExist(string  strPlayer,string  strItem)\n根据物品GUID判断该物品是否存在. \n参数:strPlayer 该参数现已无意义,默认填''即可.,strItem 物品的GUID.,\n返回:是或否.\n",
	Item_MapRemove="bool  Item_MapRemove(string  strItem,string  strDesc,string  strTarget)\n清理地图上的某个物品. \n参数:strItem 物品的GUID.,strDesc 销毁原因.,strTarget 销毁动作的发起者.,\n返回:成功或失败.\n",
	Map_GetRegionDummys="table  Map_GetRegionDummys(string  strMap,table  tRange,bool  bIgnoreDied)\n获取地图区域内的英雄列表. \n参数:strMap 地图的GUID.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,\n返回:区域内英雄列表,返回lua table.\n",
	SetDummyAIOption="bool  SetDummyAIOption(string  dummy,table  AI_table)\n设置假人的AI配置\n参数:dummy 假人或英雄的GUID.,AI_table AI各项配置，INT32数组表示.,\n返回:设置是否成功.\n备注:可以参考system/dummy_AI.lua脚本\n",
	SetDummyDefaultAIOption="bool  SetDummyDefaultAIOption(table  AI_table)\n设置假人的AI配置\n参数:AI_table AI各项配置，INT32数组表示.,\n返回:设置是否成功.\n备注:可以参考system/dummy_AI.lua脚本\n",
	Str2Zip="string  Str2Zip(string  strText)\n将指定文本进行ZIP压缩,然后再BASE64编码. \n参数:strText 文本串.,\n返回:ZIP压缩后BASE64编码串.\n",
	Zip2Str="string  Zip2Str(string  strZip)\n将指定文本进行BASE64解码,然后再ZIP解压. \n参数:strZip 编码串.,\n返回:文本串.\n",
	GetHeroLord="string  GetHeroLord(string  hero)\n获取英雄的主人guid\n参数:hero 英雄的GUID.,\n返回:英雄的主人GUID.\n备注:无\n",
	Monster_ClearHateList="bool  Monster_ClearHateList(string  strMonster)\n清除怪物的仇恨列表. \n参数:strMonster 怪物的GUID.,\n返回:true=成功,false=失败.\n",
	Monster_SetHateList="bool  Monster_SetHateList(string  strMonster,table  tHateList)\n设置怪物的仇恨列表. \n参数:strMonster 怪物的GUID.,tHateList 怪物的仇恨列表. 如 tHateList = {{'GUID' = guid, 'Hate' = hate, 'Elapse' = elapse}, ....},\n返回:true=成功,false=失败.\n",
	on_pre_curse="bool  on_pre_curse(string  strPlayer)\n玩家的武器被诅咒前回调. \n参数:strPlayer 玩家的GUID.,\n返回:true=允许武器被诅咒, false=阻止武器被诅咒.\n备注:武器被诅咒是有概率的,所有并不是每次杀死目标都会触发.\n参考:eTriggerType,\n",
	on_pre_harm="int  on_pre_harm(string  strRole,string  strAttacker,int  iHp,int  iDefense,string  strKillKey,bool  IsBurst)\n被攻击者受到伤害即将损血前回调. \n参数:strRole 被攻击者的GUID,比如玩家、怪物、英雄.,strAttacker 攻击者的GUID,比如玩家、怪物、英雄.,iHp 被攻击者即将损失的血量,负数表示损血.,iDefense 本次攻击被攻击者发挥出的防御值,该值必定是正数.,strKillKey 本次攻击所使用的技能KeyName.,IsBurst 本次攻击是否为暴击 true=是 false=否.,\n返回:如果返回负数则损血,返回正数则补血.数值对应损/补的血量.\n警告:注意返回正负数的区别.如果系统、地图、角色分别都挂了这类触发器,生效顺序为系统、地图、角色.\n参考:eTriggerType,\n",
	GetGroupName="string  GetGroupName(void  )\n获取组Name. \n参数: ,\n返回:组Name.\n",
	HasZhenshi="bool  HasZhenshi(string  strPlayer)\n判断玩家是否处于珍视状态. \n参数:strPlayer 玩家的GUID.,\n返回:true = 是, false = 否.\n",
	RoleRankTop="string  RoleRankTop(int  iType,int  iJob,int  iGender,int  iAttrName)\n取得当前在线的、指定属性排名最高的那个角色的GUID. \n参数:iType 角色的类型 0 = 玩家, 1 = 英雄, 其它 = 出错.,iJob 角色的职业 0 = 所有职业, 1 = 战士, 2 = 法师, 3 = 道士.,iGender 角色的性别 0 = 所有性别, 1 = 男, 2 = 女.,iAttrName 要排名的属性类型.,\n返回:角色的GUID,如果没有角色返回''.\n参考:eRoleAttr,\n",
	on_apply_buff="void  on_apply_buff(string  strRole,uint16  wBuffID)\n角色触发BUFF效果时回调. \n参数:strRole 角色的GUID.,wBuffID BUFF的ID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	SetNetCheckEx="void  SetNetCheckEx(string  player_guid,bool  is_check,bool  is_drop)\n客户端网络状态检查扩展\n参数:player_guid 玩家guid.,is_check true表示开始检查 false表示结束检查.,is_drop true表示丢弃 false表示不丢弃.,\n返回:无返回值.\n",
	on_npc_buy="void  on_npc_buy(string  strPlayer,string  strItemKey,int32  iNum,int32  iPrice,uint8  type,string  strNpc)\n玩家在NPC购买之后回调. \n参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买总价.,type 购买货币类型 0经验 1元宝 2绑定元宝 3积分 4金币 5绑定金币,strNpc NPC的GUID,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_npc_buy="bool  on_pre_npc_buy(string  strPlayer,string  strItemKey,int32  iNum,int32  iPrice,uint8  type,string  strNpc)\n玩家在NPC购买之前回调. \n参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 购买数量.,iPrice 购买总价.,type 购买货币类型 0经验 1元宝 2绑定元宝 3积分 4金币 5绑定金币,strNpc NPC的GUID,\n返回:无.\n参考:eTriggerType,\n",
	GetPlayerUUID="string  GetPlayerUUID(string  player_guid)\n获得玩家或英雄的为一名标识\n参数:player_guid 玩家的GUID.,\n返回:玩家或英雄的为一名标识.\n",
	UUIDToGUID="string  UUIDToGUID(string  player_uuid)\n根据玩家或英雄的为一名标识获得其GUID\n参数:player_uuid 玩家的UUID(唯一名标识).,\n返回:玩家或英雄的GUID.\n",
	GetCurrentHero="string  GetCurrentHero(string  player)\n获取玩家当前召唤出来的英雄\n参数:player 玩家的GUID.,\n返回:英雄的GUID,如果没有返回''\n",
	ShowRoleHPRef="bool  ShowRoleHPRef(string  see,string  target,int32  target_hp_ref)\n向周围通知角色血量的变化\n参数:see 需要看到目标角色血量变化的玩家GUID.如果为''则周围所有玩家都会看到,target 血量发生变化的对象的GUID(即谁的头顶会冒血),target_hp_ref 血量的变化量(即头顶冒血的数字),\n返回:成功或失败.\n",
	GetFamilyByName="string  GetFamilyByName(string  strFamilyName)\n根据行会名字获取行会GUID\n参数:strFamilyName 行会名称.,\n返回:行会名,没有则返回''.\n",
	Map_GetRegionMonstersCount="int32  Map_GetRegionMonstersCount(string  strMap,string  strMonsterKey,table  tRange,bool  bIgnoreDied,bool  bIgnoreServant)\n获取地图区域内的怪物数量. \n参数:strMap 地图的GUID.,strMonsterKey 怪物的KeyName.如果参数为'',则匹配所有怪物.,tRange tRange[1] = 0时,tRange[2]为区域中心点X坐标,tRange[3]为区域中心点Y坐标,tRange[4]为区域中心X半径,tRange[5]为区域中心Y半径.\n\n tRange[1] = 1时,tRange[2]为区域左上角X坐标,tRange[3]为区域左上角Y坐标,tRange[4]为区域宽度,tRange[5]为区域高度.,bIgnoreDied 是否忽略死亡角色.,bIgnoreServant 是否忽略宠物.,\n返回:区域内怪物数量.\n",
	IsBagLock="bool  IsBagLock(string  player_guid)\n判断玩家包裹是否锁定\n参数:player_guid 玩家的GUID.,\n返回:true表示玩家包裹被锁定false表示未锁定\n",
	SetBagLock="void  SetBagLock(string  player_guid,bool  lock)\n锁定或解锁玩家或英雄的包裹\n参数:player_guid 玩家的GUID.,lock lock=true表示锁定包裹 lock=false表示解锁包裹,\n返回:无返回值.\n备注:玩家包裹被锁定后将无法移动物品 使用物品.\n",
	SetFamilyMaxMember="void  SetFamilyMaxMember(string  family,int32  max_num)\n设置行会最大成员数\n参数:family 行会的名称或者GUID.,max_num 行会的最大人数.,\n返回:无返回值.\n备注:设置行会的最大人数不能小于当前的行会人数,设置后会通知CS修改最大人数\n",
	CopyHero="string  CopyHero(string  hero_guid,uint32  life,string  callback,string  params)\n生成英雄的分身\n参数:hero_guid 英雄原身的guid.,life 分身的生命时间，单位是秒 0表示永远存在,callback 分身生成成功后的回调.,params 回调参数.,\n返回:生成的英雄分身的guid.\n备注:如果分身生成成功会回调。 function(player, err, hero, param) player 英雄主人的guid err 错误码，永远为0 hero 英雄的guid param 用户传入的回调参数\n",
	Player_SpellGrid="bool  Player_SpellGrid(string  strPlayer,string  strSkill,uint16  x,uint16  y)\n玩家对目标施放技能. \n参数:strPlayer 玩家的GUID.,strSkill 技能的KeyName.,x 目标逻辑格的x坐标.,y 目标逻辑格的y坐标.,\n返回:技能施放成功返回true失败返回false.\n备注:技能施放成功只表示发送消息通知客户端释放此技能.\n",
	Player_SpellTarget="bool  Player_SpellTarget(string  strPlayer,string  strSkill,string  strTarget)\n玩家对目标施放技能. \n参数:strPlayer 玩家的GUID.,strSkill 技能的KeyName.,strTarget 目标的GUID.,\n返回:技能施放成功返回true失败返回false.\n备注:技能施放成功只表示发送消息通知客户端释放此技能.\n",
	SysSpeakMsg="void  SysSpeakMsg(string  strMsg,string  strPlayer)\n发送客户端喇叭消息. \n参数:strMsg 消息内容.,strPlayer 玩家的GUID.,\n返回:无返回值.\n",
	GetFamilyLeader="string  GetFamilyLeader(string  family)\n获得行会会长guid\n参数:family 行会的名称或者GUID.,\n返回:如果没有返回'',有则返回会长玩家的guid\n备注:无\n",
	GetFamilyMembersByTitleId="table  GetFamilyMembersByTitleId(string  family,uint8  title_id)\n通过称号ID返回玩家所属行会成员的列表\n参数:family 行会GUID.,title_id 封号ID, 0、行会成员；1、会长；2、副会长；3、精英、4以上为自定义,\n返回:行会成员GUID列表的lua table.\n",
	GetBuffAtt1="int32  GetBuffAtt1(string  strRole,string  strBuffKey)\n取得BUFF的Att1属性值. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strBuffKey BUFF的KeyName.,\n返回:Att1属性值.\n",
	GetHeroCopyNum="uint32  GetHeroCopyNum(string  hero_guid)\n获得英雄的分身数量\n参数:hero_guid 英雄的guid.,\n返回:英雄的分身数量.\n",
	IsHeroCopy="bool  IsHeroCopy(string  hero_guid)\n判断英雄是否为分身\n参数:hero_guid 英雄的guid.,\n返回:true是英雄分身 false不是分身.\n",
	ShowRoleHPRefEx="bool  ShowRoleHPRefEx(string  see,string  target,int32  target_hp_ref,uint8  type)\n向周围通知角色血量的变化扩展\n参数:see 需要看到目标角色血量变化的玩家GUID.如果为''则周围所有玩家都会看到,target 血量发生变化的对象的GUID(即谁的头顶会冒血),target_hp_ref 血量的变化量(即头顶冒血的数字),type 0=普通 1=暴击 2=致命 3=附加伤害,\n返回:成功或失败.\n",
	FlushPlayerData="bool  FlushPlayerData(string  player_guid)\n将玩家数据刷新到dbserver\n参数:player_guid 玩家或英雄的guid,\n返回:刷新成功或失败.\n",
	GetCopyWho="string  GetCopyWho(string  copy_guid)\n获得分身的真身\n参数:copy_guid 分身的guid,\n返回:真身的guid.\n",
	KillEx="bool  KillEx(string  strRole,string  strKiller)\n立即杀死角色扩展. \n参数:strRole 角色的GUID,角色可以为玩家、怪物、NPC.,strKiller 凶手的GUID,角色可以为玩家、怪物、NPC.,\n返回:成功或失败.\n",
	SetDummyState="bool  SetDummyState(string  dummy_guid,int32  state)\n设置假人状态\n参数:dummy_guid 假人的guid,state 假人的状态 2=跟随 3=战斗 0=休息,\n返回:设置成功返回true\n",
	HasTimer="bool  HasTimer(string  strObject,uint32  dwTimerID)\n判断对象是否有定时器. \n参数:strObject 对象的GUID,对象可以为玩家、怪物、NPC、地图、物品、系统.,dwTimerID 定时器的ID,同一象对下ID必须唯一.,\n返回:对象有定时器返回true没有返回false.\n",
	GetJoinHitTarget="string  GetJoinHitTarget(string  hero_guid)\n获取英雄合击的目标的guid\n参数:hero_guid 英雄的guid.,\n返回:返回合击目标角色的guid\n",
	CancelStall="void  CancelStall(string  player_guid)\n取消玩家摆摊\n参数:player_guid 玩家的guid.,\n返回:无返回值.\n",
	LoadPlayer="void  LoadPlayer(string  player_guid,string  func,string  param)\n引擎加载玩家\n参数:player_guid 玩家的guid.,func 加载玩家成功时执行的函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(player, param) player 加载玩家的guid param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:无返回值.\n",
	on_hack_check="void  on_hack_check(string  strPlayer,int32  right,int32  wrong)\n客户端外挂检测回调. \n参数:strPlayer 玩家的GUID.,right 非外挂权重,wrong 外挂权重,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_stall="bool  on_pre_stall(string  strPlayer)\n玩家在摆摊前回调 玩家在摆摊前回调. \n参数:strPlayer 玩家的GUID.,\n返回:true=允许玩家摆摊, false=阻止玩家摆摊.\n参考:eTriggerType,\n",
	AddFamilyMember="bool  AddFamilyMember(string  player_guid,string  FamilyName,string  func,string  param)\n指定玩家加入行会\n参数:player_guid 玩家的guid.,FamilyName 行会的名称,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:\n备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.\n",
	ChangeFamilyTitle="bool  ChangeFamilyTitle(string  player_guid,string  FamilyName,uint8  titile_id,string  func,string  param)\n指定行会中玩家的封号\n参数:player_guid 玩家的guid.,FamilyName 行会的名称,titile_id 封号ID, 0、行会成员；1、会长；2、副会长；3、精英、4以上为自定义,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:\n备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.\n",
	DelFamilyMember="bool  DelFamilyMember(string  player_guid,string  FamilyName,string  func,string  param)\n删除行会中的指定玩家\n参数:player_guid 玩家的guid.,FamilyName 行会的名称,func 玩家加入行会成功或失败以后回调函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(err, player_guid, family_name, param) err 错误码 0表示成功，其他表示各种错误 player_guid 玩家的guid family_name 行会名称 param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:\n备注:异步过程返回成功表示请求已发出由中央服务器处理如不关心结果后两个参数可为''.\n",
	Player_SpellPosX="uint16  Player_SpellPosX(string  player_guid)\n获得玩家或英雄释放技能的中心点坐标X\n参数:player_guid 玩家的guid.,\n返回:技能释放中心点的X坐标失败返回0\n",
	Player_SpellPosY="uint16  Player_SpellPosY(string  player_guid)\n获得玩家或英雄释放技能的中心点坐标Y\n参数:player_guid 玩家的guid.,\n返回:技能释放中心点的Y坐标失败返回0\n",
	on_auto_add_gold="void  on_auto_add_gold(string  strPlayer,string  monster_KeyName,int  add_gold)\n玩家杀怪自动加金币触发回调\n参数:strPlayer 玩家的GUID.,monster_KeyName 被杀怪物的KeyName,add_gold 增加的金币数,\n返回:无返回值.\n参考:eTriggerType,\n",
	GetClientVer="uint32  GetClientVer(string  player_guid)\n获得客户端版本号\n参数:player_guid 玩家的guid.,\n返回:客户端版本号\n备注:注意玩家刚上线时可能会取不到版本号返回0\n",
	Map_AddJumpPointEx="bool  Map_AddJumpPointEx(string  strSourMap,string  strDestMap,uint16  wSourX,uint16  wSourY,uint16  wSourR,uint16  wDestX,uint16  wDestY,uint16  wDestR)\n在地图上添加跳转点扩展. \n参数:strSourMap 源地图的GUID.,strDestMap 目标地图的GUID.,wSourX 源地图坐标X.,wSourY 源地图坐标Y.,wSourR 源地图范围,wDestX 目标地图坐标X.,wDestY 目标地图坐标Y.,wDestR 目标图范围,\n返回:成功或失败.\n",
	on_hack_check2="void  on_hack_check2(string  strPlayer,int32  c1,int32  c2,int32  c3,int32  c4,int32  c5,int32  c6,int32  c7,int32  c8)\n客户端外挂检测回调2. \n参数:strPlayer 玩家的GUID.,c1 由客户端决定,c2 由客户端决定,c3 由客户端决定,c4 由客户端决定,c5 由客户端决定,c6 由客户端决定,c7 由客户端决定,c8 由客户端决定,\n返回:无返回值.\n参考:eTriggerType,\n",
	GetSkillExp="uint16  GetSkillExp(string  player_guid,string  skill_key_name)\n获得玩家技能的熟练度\n参数:player_guid 玩家的guid.,skill_key_name 技能的关键字.,\n返回:成功返回玩家的熟练度，失败返回0.\n",
	SetSkillExp="bool  SetSkillExp(string  player_guid,string  skill_key_name,uint16  skill_exp)\n设置玩家技能的熟练度\n参数:player_guid 玩家的guid.,skill_key_name 技能的关键字.,skill_exp 设置的技能熟练度.,\n返回:成功或失败.\n",
	on_fang_chen_mi="void  on_fang_chen_mi(string  strPlayer,uint32  type,int32  time)\n增加防沉迷通知事件\n参数:strPlayer 玩家的GUID.,type 防沉迷状态 0=无经验 1=一半经验 2=全经验,time 已进入防沉迷状态的时间 单位秒,\n返回:无返回值.\n参考:eTriggerType,\n",
	SetServantMasterName="void  SetServantMasterName(string  servant_guid,string  master_name)\n修改宝宝的主人名字\n参数:servant_guid 宝宝的guid.,master_name 主人的名字.,\n返回:无返回值.\n",
	Guid2Id="uint16  Guid2Id(string  guid)\n更具Guid获得配置表中的ID\n参数:guid 对象的guid.,\n返回:对象的Id.\n备注:传入guid的对象只能是怪物、NPC、道具、地图.\n",
	Id2KeyName="string  Id2KeyName(uint16  id,uint8  type)\n更具对象Id获得KeyName\n参数:id 对象Id.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,\n返回:对象配置表中的KeyName.\n",
	KeyName2Id="uint16  KeyName2Id(string  KeyName,uint8  type)\n更具对象KeyName获得Id\n参数:KeyName 对象KeyName.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,\n返回:对象配置表中的Id.\n",
	KeyName2Name="string  KeyName2Name(string  KeyName,uint8  type)\n更具对象KeyName获得Name\n参数:KeyName 对象KeyName.,type 对象类型 2=怪物 3=NPC 4=道具 5=地图 17=技能 18=Buff其他无效.,\n返回:对象配置表中的Name.\n",
	Player_SetAttackModeLock="void  Player_SetAttackModeLock(string  player_guid,bool  is_lock)\n设置玩家是否可以改变攻击类型\n参数:player_guid 玩家的guid.,is_lock true=锁定不允许改变 false=解锁可以改变.,\n返回:无返回值.\n",
	on_family_member_ntf="void  on_family_member_ntf(string  family_guid,string  family_name,string  player_guid,uint32  opt)\n行会事件触发回调\n参数:family_guid 行会的GUID.,family_name 行会名称,player_guid 玩家的GUID,opt 事件类型 1=添加成员 2=删除成员 3=编辑成员Title,\n返回:无返回值.\n参考:eTriggerType,\n",
	Guid2Name="string  Guid2Name(string  guid)\n更具Guid获得对象名称\n参数:guid 对象的guid.,\n返回:对象的名称.\n备注:传入guid的对象只能是玩家、英雄、行会、怪物、NPC、道具、地图.\n",
	DummyLockTarget="bool  DummyLockTarget(string  dummy_guid,string  target_guid)\n指定假人锁定敌人\n参数:dummy_guid 假人的guid.,target_guid 目标的guid.,\n返回:true表示命令成功下达，false表示假人不存在.\n",
	DummyMove="bool  DummyMove(string  dummy_guid,uint16  x,uint16  y)\n指定假人移动\n参数:dummy_guid 假人的guid.,x 坐标X.,y 坐标Y.,\n返回:true表示命令成功下达，false表示假人不存在.\n",
	GetBuffList="table  GetBuffList(string  role_guid)\n获得指定角色的buff列表\n参数:role_guid 角色的guid,\n返回:返回角色的buff列表 {{'kye'=keyname, 'life'=life, 'att1'=att1_value}...}.\n",
	LastKeepPkgTime="uint32  LastKeepPkgTime(string  strPlayer)\n取得玩家的最后心跳包时间\n参数:strPlayer 玩家的GUID.,\n返回:最后心跳包时间.\n",
	GetFamilyMemberAttr="uint32  GetFamilyMemberAttr(string  player_guid,uint8  attr_type)\n获得家族成员信息\n参数:player_guid 角色的guid,attr_type 信息种类 1=称号 2=贡献度 3=累计贡献度 4=加入时间,\n返回:对应种类的数值.\n",
	Player_AddEffect="void  Player_AddEffect(string  player_guid,uint8  effect_type,uint16  effect_id)\n设置玩家特效\n参数:player_guid 角色的guid,effect_type 特效位置 1=武器 2=身体 3=坐骑,effect_id 特效Id,\n返回:无返回值.\n",
	LoadPlayerEx="void  LoadPlayerEx(string  player_name,string  func,string  param)\n引擎加载玩家\n参数:player_name 玩家的名字.,func 加载玩家成功时执行的函数.格式, 1 = 文件名:函数名 2 = 文件名. 回调函数格式 callbackfunc(player, param) player 加载玩家的guid param 用户自定义参数,param 定义参数,函数回调时自动传回.方便脚本作者上下文切换.,\n返回:无返回值.\n",
	on_pre_stall_buy="int  on_pre_stall_buy(string  buy_guid,string  sell_guid,string  item_guid,int64 &amp;  price,uint16  amount,uint8  type)\n购买摆摊物品前触发\n参数:buy_guid 买家的GUID.,sell_guid 卖家的GUID.,item_guid 物品的GUID.,price 购买的总价格,amount 购买数量,type 0=金币 1=元宝,\n返回:如果返回负数则表示不允许购买,返回正数则表示购买的最终价格.\n参考:eTriggerType,\n",
	TeamInvite="void  TeamInvite(string  inviter_guid,string  invitee_guid,bool  need_agree)\n组队邀请玩家\n参数:inviter_guid 邀请玩家的GUID.,invitee_guid 被邀请玩家的GUID.,need_agree 是否需要对方同意, true=需要 false=不需要,\n返回:无返回值.\n",
	NPCTalkDetailQuest="void  NPCTalkDetailQuest(string  strNpc,string  strPlayer,string  strTalk,uint16  wWidth,uint16  wHeight)\n打开NPC的对话框和任务\n参数:strNpc NPC的GUID.,strPlayer 玩家GUID.,strTalk 对话框的内容.,wWidth 对话框的宽度.,wHeight 对话框的高度.,\n返回:无返回值.\n参考:NPCTalk,NPCTalkEx,NPCTalkDetail,NPCTalkDetailEx,\n",
	Player_IsAttackModeLock="bool  Player_IsAttackModeLock(string  player_guid)\n判断玩家攻击模式是否被锁定\n参数:player_guid 玩家的GUID.,\n返回:true=锁定 false=不锁定.\n",
	GetGSClientVer="uint32  GetGSClientVer(void  )\n获取引擎中学习到的最新的客户端版本\n参数: ,\n返回:引擎里最新的客户端版本号.\n",
	GetClientVerEx="uint32  GetClientVerEx(string  player_guid)\n获得新的客户端版本号\n参数:player_guid 玩家的guid.,\n返回:客户端版本号\n备注:注意玩家刚上线时请用RequestClientVer请求版本号，然后添加delaycall，最后再delaycall的回调函数里调用此函数获得版本号\n",
	RequestClientVer="void  RequestClientVer(string  player_guid)\n请求客户端版本\n参数:player_guid 玩家的GUID.,\n返回:无返回值.\n",
	IO_TextFileTotalLine="int32  IO_TextFileTotalLine(string  strFileName)\n获得文本内容的总行数. \n参数:strFileName 文件名.,\n返回:行数,失败返回-1.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	Player_CatchEx="string  Player_CatchEx(string  strPlayer,string  strServantKey,bool  need_relive)\n玩家捕捉宝宝扩展. \n参数:strPlayer 玩家的GUID.,strServantKey 宝宝的KeyName.,need_relive 是否需要在捕捉后重新生成一个野怪,\n返回:宝宝的GUID,出错返回''.\n",
	on_family_ntf="void  on_family_ntf(string  family_guid,string  family_name,uint8  opt_type,string  player_guid)\n行会创建和销毁触发回调\n参数:family_guid 行会的GUID.,family_name 行会名称,opt_type 事件类型 0=行会销毁 1=行会创建,player_guid 创建或销毁行会的玩家GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	CanAttack="bool  CanAttack(string  actor_guid,string  target_guid)\n判断目标是否可攻击\n参数:actor_guid 攻击者guid.,target_guid 目标guid.,\n返回:true=表示可攻击， false=不可攻击\n",
	SetIsBrust="void  SetIsBrust(string  actor_guid,bool  is_brust)\n设置是否显示为暴击\n参数:actor_guid 释放技能对象的guid.,is_brust 是否暴击 false=否 true=是.,\n返回:无返回值.\n备注:注意每调用一次接口只对下次伤害显示生效一次\n",
	IO_FileList="table  IO_FileList(string  strDirName)\n获得指定目录中所有txt文件名. \n参数:strDirName 文件目录名如果为''则获取整个data目录下的txt文件名.,\n返回:txt文件名组成的table.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	IO_FileSize="uint32  IO_FileSize(string  strFileName)\n返回文件大小. \n参数:strFileName 文件名.,\n返回:文件大小.\n备注:如果要持久化存储数据,请用数据库变量SetDBNum、SetDBStr等.如要临时存储数据请用GS变量GetInt(用系统GUID)、SetStr(用系统GUID)等.\n警告:该接口在沙盒中运行,只能操作Data目录.大量使用文件接口会造成服务器卡机,后果自负.\n",
	on_item_dur_zero_ex="void  on_item_dur_zero_ex(string  strRole,string  strItem,uint16  wItemID,string  strItemKey)\n角色装备耐久为0时回调扩展. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,\n返回:无返回值.\n备注:此回调和on_item_dur_zero的区别是此回调中增加装备耐久，装备不会销毁\n参考:eTriggerType,\n",
	on_post_dummy_die="void  on_post_dummy_die(string  strDummy,string  strKiller)\n英雄死亡时回调. \n参数:strDummy 英雄的GUID.,strKiller 杀手的GUID.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_pre_dummy_die="bool  on_pre_dummy_die(string  strDummy,string  strKiller)\n英雄死亡之前回调. \n参数:strDummy 英雄的GUID.,strKiller 杀手的GUID.,\n返回:true = 允许英雄死亡, false = 阻止英雄死亡.\n参考:eTriggerType,\n",
	GetEquipSuitCount="uint8  GetEquipSuitCount(string  player_guid,string  equip_guid,uint16  item_id,uint16  suit_id)\n获得角色身上指定套装中装备数量\n参数:player_guid 角色guid.,equip_guid 此装备所指定的套装.,item_id 此物品id所指定的套装.,suit_id 此套装id所指定的套装.,\n返回:角色身上指定套装中的装备数\n备注:equip_guid equip_guid suit_id,只要任一填一个\n",
	on_item_attr_zero="void  on_item_attr_zero(string  strRole,string  strItem,uint16  wItemID,string  strItemKey,int32  attr)\n角色物品属性为0时回调. \n参数:strRole 角色的GUID.,strItem 物品的GUID.,wItemID 物品的ID.,strItemKey 物品的KeyName.,attr 指明物品那种属性为0(1=堆叠数 2=耐久 4=使用次数),\n返回:无返回值.\n备注:注意添加此触发器后 原来的on_item_amount_zero, on_item_use_zero, on_item_dur_zero, on_item_dur_zero_ex自动失效.\n参考:eTriggerType,\n",
	SetServantPickItem="bool  SetServantPickItem(string  servant_guid,bool  is_pick_item)\n设置是否开启宝宝自动捡物品功能\n参数:servant_guid 宝宝的guid.,is_pick_item true表示打开自动捡物品功能 fase表示关闭此功能,\n返回:true表示设置成功 false表示设置失败\n",
	SetServantPickList="bool  SetServantPickList(string  servant_guid,uint16  item_id,string  item_key_name,bool  add_or_del)\n添加或删除某物品到宝宝的拾取列表中\n参数:servant_guid 宝宝的guid.,item_id 物品的Id,item_key_name 物品的KeyName如果id找不到则按keyname找,add_or_del true=添加到列表 false=从列表中删除,\n返回:true表示设置成功 false表示设置失败\n备注:如果拾取列表为空则默认拾取所有物品\n",
	GetClientType="uint8  GetClientType(string  player_guid)\n获取客户端的类型\n参数:player_guid 角色guid.,\n返回:客户端类型 0=端游 1=页游 2=手游\n",
	on_pre_attacker_harm="int  on_pre_attacker_harm(string  strRole,string  strAttacker,int  iHp,string  strKillKey)\n攻击者受到伤害即将损血前回调. \n参数:strRole 被攻击者的GUID,比如玩家、怪物、英雄.,strAttacker 攻击者的GUID,比如玩家、怪物、英雄.,iHp 攻击者即将损失的血量,负数表示损血.,strKillKey 本次攻击所使用的技能KeyName.,\n返回:如果返回负数则损血,返回正数则补血.数值对应损/补的血量.\n警告:注意返回正负数的区别.如果系统、地图、角色分别都挂了这类触发器,生效顺序为系统、地图、角色.\n参考:eTriggerType,\n",
	on_pre_level_up="bool  on_pre_level_up(string  strRole,int32  iLevel)\n角色升级前回调. \n参数:strRole 角色的GUID.,iLevel 角色现在的等级.,\n返回:true 角色正常升级 false角色不升级经验不扣.\n参考:eTriggerType,\n",
	GetServantState="uint32  GetServantState(string  servant_guid)\n获取宝宝AI状态\n参数:servant_guid 宝宝的guid.,\n返回:宝宝现在处于的状态 跟随=7 休息=8 战斗=9 跳地图=10\n",
	SetServantState="void  SetServantState(string  servant_guid,uint32  state)\n设置宝宝AI状态\n参数:servant_guid 宝宝的guid.,state 跟随=7 休息=8 战斗=9 强制更随=11,\n返回:无返回值.\n",
	GetClientCheckInfo="void  GetClientCheckInfo(string  player_guid,string  call_back,string  param,uint32  time_out)\n获得客户端的校验信息\n参数:player_guid 目标客户端的角色guid,call_back 收到校验信息以后回调的函数名,param 回调函数时,time_out 获取校验信息的超时时间单位毫秒,\n返回:无返回值.\n备注:调用此接口后，当收到客户端回应或者设置 的超时时间已到时会回调设置call_back函数 void call_back(player, param, info_table, is_timeout) player 玩家的guid param 调用此接口时预设的参数 info_table 客户端返回的一个int数组 is_timeout 是否校验超时\n",
	Guid2Number="string  Guid2Number(string  guid)\n将引擎使用的GUID字符串转为纯阿拉伯数字表示的字符串\n参数:guid 引擎中使用的guid(32进制表示).,\n返回:纯阿拉伯数字表示的guid(10进制表示).\n",
	Number2Guid="string  Number2Guid(string  number)\n将纯阿拉伯数字表示的字符串转化为引擎使用的GUID字符串\n参数:number 纯阿拉伯数字表示的guid(10进制表示).,\n返回:引擎中使用的guid(32进制表示).\n",
	number_arithmetic="string  number_arithmetic(string  value1,string  value2,string  opreate)\n增加对INT64类型数据的四则运算支持\n参数:value1 INT64类型数字的字符串格式,value2 INT64类型数字的字符串格式,opreate 支持的运算符 '+', '-', '*', '/',\n返回:计算结果数字的字符串格式, 失败返回 '';\n备注:注意如果value1 和 value2都必须在INT64类型数值的范围内, opreate 必须是 '+', '-', '*', '/', 注意除法是按整数除法来运算\n",
	number_logic="bool  number_logic(string  value1,string  value2,string  opreate)\n增加对INT64类型数据的逻辑运算支持\n参数:value1 INT64类型数字的字符串格式,value2 INT64类型数字的字符串格式,opreate 支持的运算符 '==', '&gt;=', '&lt;=', '&gt;', '&lt;', '~=',\n返回:true或false;\n",
	GetGSVer="string  GetGSVer(void  )\n获得游戏服务器版本号\n参数: ,\n返回:获得游戏服务器版本号格式为 年-月-日 时:分:秒\n",
	SetMD5CheckList="void  SetMD5CheckList(string  player_guid,table  t_md5_list,string  call_back,string  param,uint32  time_out)\n获得客户端的MD5码黑名单上报的数量\n参数:player_guid 目标客户端的角色guid,t_md5_list md5码黑名单列表,call_back 收到黑名单数量上报以后回调的函数名,param 当回调函数回调时返回的参数,time_out 获取黑名单的超时时间单位毫秒(建议设置在5分钟以上),\n返回:无返回值.\n备注:调用此接口后，当收到客户端回应或者设置 的超时时间已到时会回调设置call_back函数 void call_back(player, param, md5_num_table, is_timeout) player 玩家的guid param 调用此接口时预设的参数 md5_num_table 客户端返回的黑名单中每个md5码对应的数量 is_timeout 是否校验超时\n",
	SetClientDelay="void  SetClientDelay(string  player_guid,int32  delay)\n设置客户端异常断线后延迟退出游戏时间\n参数:player_guid 角色guid.,delay 异常断线后客户端延迟退出游戏的毫秒数，注意最小不能小于5000毫秒,\n返回:无返回值.\n",
	GetBindGoldStr="string  GetBindGoldStr(string  strPlayer)\n取得角色绑定金币字符串格式. \n参数:strPlayer 玩家的GUID.,\n返回:玩家绑定金币的数量的字符串.\n参考:GetGold,GetBindGold,\n",
	GetExpStr="string  GetExpStr(string  strPlayer)\n获取角色经验字符串版. \n参数:strPlayer 玩家的GUID.,\n返回:当前经验值字符串.\n",
	GetGoldStr="string  GetGoldStr(string  strPlayer)\n取得角色非绑定金币字符串格式. \n参数:strPlayer 玩家的GUID.,\n返回:玩家非绑定金币的数量的字符串.\n参考:GetGold,GetBindGold,\n",
	Player_AddExpStr="bool  Player_AddExpStr(string  strPlayer,string  str_exp,string  strDesc,string  strTarget)\n添加角色经验字符串版. \n参数:strPlayer 玩家的GUID.,str_exp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_AddGoldStr="bool  Player_AddGoldStr(string  strPlayer,string  str_gold,bool  bBind,string  strDesc,string  strTarget)\n添加角色金币字符串版. \n参数:strPlayer 玩家的GUID.,str_gold 金币数量的字符串.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:AddGold,AddBindGold,\n",
	Player_IsGoldStrEnough="bool  Player_IsGoldStrEnough(string  strPlayer,string  str_gold,bool  bBind)\n判断角色的金币是否足够字符串版. \n参数:strPlayer 玩家的GUID.,str_gold 金币数量字符串.,bBind 是否绑定.,\n返回:是或否.\n",
	Player_SubExpStr="bool  Player_SubExpStr(string  strPlayer,string  str_exp,string  strDesc,string  strTarget)\n扣除角色经验. \n参数:strPlayer 玩家的GUID.,str_exp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_SubGoldStr="bool  Player_SubGoldStr(string  strPlayer,string  str_gold,bool  bBind,string  strDesc,string  strTarget)\n扣除角色金币字符串版. \n参数:strPlayer 玩家的GUID.,str_gold 金币数量的字符串.,bBind 是否绑定.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubGold,SubBindGold,\n",
	on_pre_invite_family="bool  on_pre_invite_family(string  player_guid,string  invite_name)\n邀请玩家加入行会前触发 邀请玩家加入行会前触发. \n参数:player_guid 邀请玩家的guid,invite_name 被邀请玩家的名字,\n返回:true=允许此协议发送给中央服务器处理, false=阻止此协议转发.\n参考:eTriggerType,\n",
	on_pre_join_family="bool  on_pre_join_family(string  player_guid,string  family_guid)\n玩家申请加入行会前触发 玩家申请加入行会前触发. \n参数:player_guid 要申请加入玩家的guid,family_guid 要加入行会的guid,\n返回:true=允许此协议发送给中央服务器处理, false=阻止此协议转发.\n参考:eTriggerType,\n",
	pre_add_gray="bool  pre_add_gray(string  actor_guid,string  target_guid)\n玩家变灰名前回调 玩家变灰名前回调. \n参数:actor_guid 要变灰名的玩家的guid.,target_guid 要变灰名玩家的目标玩家的guid.,\n返回:true=允许变灰名, false=阻止变灰名.\n参考:eTriggerType,\n",
	on_pre_relate_family="bool  on_pre_relate_family(string  my_family_name,string  other_family_name,uint8  relationship)\n行会建立联盟或者敌对关系前触发 行会建立联盟或者敌对关系前触发. \n参数:my_family_name 自己行会名称,other_family_name 要联盟或者敌对的行会名称,relationship 关系 1=联盟 2=敌对,\n返回:true=允许行会联盟或者敌对 false=不允许\n参考:eTriggerType,\n",
	StartMigrate="string  StartMigrate(string  player_guid,uint32  dst_zone_id,string  call_back_func,string  param)\n启动玩家角色数据跨服\n参数:player_guid 准备跨服的角色guid,dst_zone_id 目标区的区id,call_back_func 跨服操作完成后回调的脚本函数名,param 当回调函数回调时返回的参数,\n返回:如果启动失败返回失败原因 成功返回''\n备注:调用此接口后，不管跨服成功或者失败都会回调设置的call_back_func函数 * 示例代码：\n* function qianyi(player, param)\n*     local ret = lualib:StartMigrate(player, 87373, 'migrate_result', 'abc')\n*     if ret ~= '' then\n*        lualib:SysWarnMsg(player, '数据迁移出错:'..ret)\n*     end\n* end\n* function migrate_result(player, err, param)\n*     lualib:SysWarnMsg(player, '数据迁移结果:'..err)\n* end\n* \n",
	Npc_GetBindQuests="table  Npc_GetBindQuests(string  strNpc)\n取得NPC实体上绑定的任务. \n参数:strNpc NPC的GUID.,\n返回:绑定的可接任务和可交任务列表,返回lua table.\n备注:返回一个table，里面包含两个table，分别是可接任务列表和可交任务列表. * 示例代码：\n* function test(strNpc)\n*     local ret = lualib:Npc_GetBindQuests(strNpc)\n*     -- 打印可接任务id\n*     local accepts = ret[1]\n*     for k,v in ipairs(accepts) do\n*         print(v)\n*     end\n*     -- 打印可交任务id\n*     local accomplishes = ret[2]\n*     for k,v in ipairs(accomplishes) do\n*         print(v)\n*     end\n* end\n* \n",
	Map_IsDgn="bool  Map_IsDgn(string  strKeyName)\n判断地图是不是副本\n参数:strKeyName 地图的KeyName.,\n返回:是或否.\n",
	AllItemList="table  AllItemList(string  strPlayer)\n取得玩家所有物品的GUID列表. \n参数:strPlayer 玩家的GUID.,\n返回:所有物品的GUID列表,返回lua table.\n",
	AddBagSite="bool  AddBagSite(string  player_guid,int32  amount)\n增加背包格子数\n参数:player_guid 角色guid.,amount 增加的格子数,\n返回:是否成功\n警告:建议不要同时使用乾坤囊这类物品.\n",
	GetQuestGroupHuntingsCount="int32  GetQuestGroupHuntingsCount(string  strPlayer,uint16  wQuestID,uint16  wMonsterID)\n获取玩家任务组杀怪次数. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wMonsterID 怪物的ID.,\n返回:杀怪数量.\n",
	SetFamilyRelation="string  SetFamilyRelation(string  family_name1,string  family_name2,uint8  opt,string  call_back_func,string  param)\n设置行会关系\n参数:family_name1 行会名1,family_name2 行会名2,opt 1=结盟 2=敌对 3=解除,call_back_func 操作完成后回调的脚本函数名,param 当回调函数回调时返回的参数,\n返回:如果设置条件失败返回失败原因 成功返回''(成功只代表请求投递成功，是不是成功要看回调函数里的返回)\n备注:调用此接口后，不管设置关系成功或者失败都会回调设置的call_back_func函数 * 示例代码：\n* function ally_family(player, param)\n*     local ret = lualib:SetFamilyRelation(family_name1, family_name2, 1, 'set_family_result', 'abc')\n*     if ret ~= '' then\n*        lualib:SysWarnMsg(player, '设置行会关系出错:'..ret)\n*     end\n* end\n* function set_family_result(family_name1, family_name2, opt, err, param)\n*     if err ~= '' then\n*        lualib:SysWarnMsg(player, '设置行会关系出错:'..err)\n*     end\n* end\n* \n",
	SetQuestGroupHuntingsCount="void  SetQuestGroupHuntingsCount(string  strPlayer,uint16  wQuestID,uint16  wMonsterID,int32  iCount)\n设置玩家任务组杀怪次数. \n参数:strPlayer 玩家的GUID.,wQuestID 任务的ID.,wMonsterID 怪物的ID.,iCount 杀怪数量.,\n返回:无返回值.\n",
	OpenShopEx="void  OpenShopEx(string  strPlayer,uint16  wShopId)\n打开随身商店\n参数:strPlayer 玩家GUID.,wShopId 商店ID.,\n返回:无返回值.\n参考:AddShop,OpenShop,\n",
	OpenWarehouseAdvEx="void  OpenWarehouseAdvEx(string  strPlayer)\n打开随身高级仓库\n参数:strPlayer 玩家GUID.,\n返回:无返回值.\n参考:OpenWarehouse,OpenWarehouseAdv,\n",
	OpenWarehouseEx="void  OpenWarehouseEx(string  strPlayer)\n打开随身仓库\n参数:strPlayer 玩家GUID.,\n返回:无返回值.\n参考:OpenWarehouse,OpenWarehouseAdv,\n",
	on_billinex="void  on_billinex(uint32  userid,int32  iBillinIngot)\n玩家冲值时回调. \n参数:userid 账号id.,iBillinIngot 当次充值元宝数.,\n返回:无返回值.\n参考:eTriggerType,\n",
	DelItemsBatch="bool  DelItemsBatch(string  strPlayer,table  guids,string  strDesc,string  strTarget)\n批量删除玩家物品. \n参数:strPlayer 玩家的GUID.,guids 物品的guids.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n备注:无. * 示例代码：\n* function del_items(player)\n*     local guids = {'5432GH32', '7472GH51'}\n*     local ret = lualib:DelItemsBatch(player, guids, '回收', '脚本')\n*     if not ret then\n*         lualib:SysWarnMsg(player, '批量删除物品失败')\n*     end\n* end\n* \n",
	GetAllPlayerNames="table  GetAllPlayerNames(void  )\n取得服务器上所有玩家的名字列表. \n参数: ,\n返回:玩家名列表,返回lua table.\n",
	GetMonsterDropOwner="string  GetMonsterDropOwner(string  monster_guid)\n获得怪物掉落归属\n参数:monster_guid 怪物guid.,\n返回:怪物掉落归属者的guid,如果没有就是'';\n",
	Monster_SetAttackType="bool  Monster_SetAttackType(string  monster_guid,uint8  target_type,bool  is_attack)\n设置怪物(包括宝宝和守卫)允许攻击角色类型. \n参数:monster_guid 怪物GUID.,target_type 目标的类型支持0 = 玩家, 1 = 假人, 2 = 怪物, 3 = NPC,is_attack true=允许攻击 false=不允许攻击,\n返回:设置成功返回true.\n备注:如果怪物无归属返回''\n",
	Player_ChangeName="bool  Player_ChangeName(string  strPlayer,string  strNewName)\n玩家改名. \n参数:strPlayer 玩家的GUID.,strNewName 新名字.,\n返回:返回true时只代表发出改名请求，不代表改名成功，要等待事件触发.\n备注:无. * 示例代码：\n*先注册改名结果触发的监听，比如下面注册全局触发\n*function on_change_name_result(player, result, new_name)\n*    if 0 == result then\n*        成功\n*    else\n*        失败，可能是重名或者名字包含屏蔽字\n*    end\n*end\n*lualib:AddTrigger('0',  lua_trigger_player_change_name, 'on_change_name_result')\n*然后脚本调用\n*function change_name(player, new_name)\n*    if lualib:Player_ChangeName(player, new_name) then\n*        改名请求已经提交\n*    else\n*        改名请求失败\n*    end\n*end\n*等待改名结果触发，如果改名成功，可以将玩家踢下线，重新上线后新名字生效\n* \n",
	on_player_change_name="void  on_player_change_name(string  strPlayer,uint8  result,string  newName)\n玩家改名结果 玩家改名结果. \n参数:strPlayer 玩家的GUID.,result 改名结果(0成功，1名字重复失败),newName 新名字,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_sub_ingot="void  on_sub_ingot(string  strPlayer,int32  ingot,uint8  to)\n扣元宝回调. \n参数:strPlayer 玩家的GUID.,ingot 元宝数量.,to 元宝去向(0给系统，1给玩家).,\n返回:无返回值.\n参考:eTriggerType,\n",
	Player_AddInnerForceExp="bool  Player_AddInnerForceExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n添加角色内功经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	Player_DisableForbidTalkType="bool  Player_DisableForbidTalkType(string  strPlayer,uint32  dwType)\n取消玩家禁言类型. \n参数:strPlayer 玩家的GUID.,dwType 取消禁言类型,1=文字禁言 2=语音禁言 3=文字和语音禁言.,\n返回:成功或失败.\n警告:该函数是异步的,返回成功并不代表解除禁言类型成功.\n",
	Player_SetAntiIndulge="bool  Player_SetAntiIndulge(string  strPlayer,uint32  dwType)\n设置玩家的防沉迷状态. \n参数:strPlayer 玩家的GUID.,dwType 0 = 无收益 1 = 经验减半 2 = 全收益.,\n返回:成功或失败.\n",
	Player_SetForbidTalkType="bool  Player_SetForbidTalkType(string  strPlayer,string  strDesc,uint32  dwType,uint32  dwTimes)\n设置玩家禁言类型. \n参数:strPlayer 玩家的GUID.,strDesc 禁言设置原因.,dwType 禁言设置类型,1=文字禁言 2=语音禁言 3=文字和语音禁言.,dwTimes 禁言设置时间,单位秒.注意该时间请如实填写,否则会数据溢出.,\n返回:成功或失败.\n警告:该函数是异步的,返回成功并不代表设置成功.\n",
	Player_SubInnerForceExp="bool  Player_SubInnerForceExp(string  strPlayer,int32  iExp,string  strDesc,string  strTarget)\n扣除角色内功经验. \n参数:strPlayer 玩家的GUID.,iExp 经验数量.,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n",
	SubIngotEx="bool  SubIngotEx(string  strPlayer,int  iIngot,uint8  byTo,string  strDesc,string  strTarget)\n扣除角色非绑定元宝. \n参数:strPlayer 玩家的GUID.,iIngot 元宝数量.,byTo 元宝去向(0给系统，1给玩家).,strDesc 动作的原因.,strTarget 动作的发起者.,\n返回:成功或失败.\n参考:SubIngot,SubBindIngot,\n",
	on_captcha_result="void  on_captcha_result(string  strPlayer,uint8  result,uint8  reason)\n验证码结果回调 验证吗结果回调. \n参数:strPlayer 玩家的GUID.,result 验证码结果 0 验证成功 1 验证失败.,reason 验证成功时指明额外信息 0 无 1 疑似外挂；验证失败时指明失败原因 0 验证码输入错误 1 验证超时 2 玩家要求重试.,\n返回:无返回值.\n参考:eTriggerType,\n",
	on_servant_betry="bool  on_servant_betry(string  strMonster)\n宝宝叛变回调 宝宝叛变回调. \n参数:strMonster 宝宝的GUID.,\n返回:true=允许叛变, false=阻止叛变.\n参考:eTriggerType,\n",
	GetPlayerGloryState="uint32  GetPlayerGloryState(string  strPlayer,uint32  dwGloryID)\n获取玩家成就状态. \n参数:strPlayer 玩家的guid.,dwGloryID 成绩id.,\n返回:成就状态 0 成就不存在 1 未完成 2 已完成 3 已奖励.\n",
	MailEx="bool  MailEx(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,int32  integral,table  item_templates)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,item_templates 附件物品,lua table格式描述,不超过5个.\n\n item_templates 格式:\n\n {\n\n 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)\n\n '强效金创药', 1, 1,\n\n '强效魔法药', 1, 1,\n\n '灵元珠', 10, 1,\n\n '新手之剑', 1, 1,\n\n '新手头盔', 1, 1,\n\n },\n返回:true表示投递成功,false表示失败.\n",
	MailJsonItemEx="bool  MailJsonItemEx(string  sender_name,string  receiver_name,string  text,int32  gold,int32  yuanbao,int32  integral,string  json_item)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_name 收件人姓名,即玩家的姓名.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,json_item 附件物品实体,json格式描述.,\n返回:true表示投递成功,false表示失败.\n",
	MailToPlayerEx="bool  MailToPlayerEx(string  sender_name,string  receiver_guid,string  text,int32  gold,int32  yuanbao,int32  integral,table  item_templates)\n给某个玩家发送一封文本邮件. \n参数:sender_name 这里一般填系统名称,比如'精炼系统'等等.,receiver_guid 收件人guid,即玩家的guid.,text 邮件内容.,gold 附件金币数.,yuanbao 附件元宝数.,integral 附件积分数.,item_templates 附件物品,lua table格式描述,不超过5个.\n\n item_templates 格式:\n\n {\n\n 物品keyname 物品数量(不能超过最大堆叠数) 是否绑定(0/1)\n\n '强效金创药', 1, 1,\n\n '强效魔法药', 1, 1,\n\n '灵元珠', 10, 1,\n\n '新手之剑', 1, 1,\n\n '新手头盔', 1, 1,\n\n },\n返回:true表示投递成功,false表示失败.\n",
	SendCaptchaReq="bool  SendCaptchaReq(string  player_guid,uint32  type)\n发送验证码请求\n参数:player_guid 角色guid.,type 验证码类型 0 找出两个相同的字 .,\n返回:是否成功\n警告:返回成功只代表验证码请求发送成功，具体结果请监听相应的触发.\n",
	GetPlatformInfo="table  GetPlatformInfo(string  strPlayer)\n获取玩家第三方登陆平台信息. \n参数:strPlayer 玩家guid.,\n返回:返回lua_table, 包含平台名称和平台用户具体信息.\n警告:无. * 示例代码：\n* function test(strPlayer)\n*     local ret = lualib:GetPlatformInfo(strPlayer)\n*     local platform_name = ret[1]\n*     local platform_info_json = ret[2]\n*     if platform_info_json ~= '' then\n*       local platform_info_table = json.decode(platform_info_json)\n*     end\n* end\n*\n",
	Player_GetAllTitles="table  Player_GetAllTitles(string  strPlayer)\n获取玩家所有称号. \n参数:strPlayer 玩家的GUID.,\n返回:返回lua_table，包含玩家所有称号.\n备注:无. * 示例代码：\n* function test(strPlayer)\n*     local ret = lualib:Player_GetAllTitles(strPlayer)\n*     -- 打印所有称号\n*     for k,v in ipairs(ret) do\n*         local title_id = v[1]        --称号id\n*         local title_keyname = v[2]   --称号keyname\n*         local title_life = v[3]      --称号有效时间\n*     end\n* end\n* \n",
	SendRoleInnerForceNtf="bool  SendRoleInnerForceNtf(string  strRole)\n向周围通知角色内功数值\n参数:strRole 角色GUID,角色只能是玩家或怪物.,\n返回:成功或失败.\n",
	GetAllDBVars="table  GetAllDBVars(void  )\n获取所有的数据库变量. \n参数: ,\n返回:返回lua_table.\n备注:无. * 示例代码：\n* function test()\n*     local ret = lualib:GetAllDBVars()\n*     -- 打印所有DB变量\n*     for k,v in ipairs(ret) do\n*         local var_type = v[1]    --变量类型 0 num 1 str\n*         local var_key = v[2]     --变量key\n*         local var_value = v[3]   --变量的值\n*         local merge_type = v[4]  --变量合区类型, 参考接口SetDBNumEx和SetDBStrEx\n*     end\n* end\n* \n",
	GetAllTimeMs="double  GetAllTimeMs(void  )\n取得1970年1月1日0时0分0到现在经过的毫秒数. \n参数: ,\n返回:毫秒数.\n",
	SysMsg_SendBroadcastColorByClientType="void  SysMsg_SendBroadcastColorByClientType(string  strMsg,string  strName,int32  iForeground,int32  iBackground,uint8  byClientType)\n发送客户端底部广播消息. \n参数:strMsg 消息内容.,strName 广播标题.,iForeground 前景颜色.,iBackground 背景颜色.,byClientType 客户端类型组合, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),\n返回:无返回值.\n备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.\n",
	SysMsg_SendCenterMsgByClientType="void  SysMsg_SendCenterMsgByClientType(uint8  byType,string  strMsg,string  strPlayer,uint8  byClientType)\n发送客户端中部消息. \n参数:byType 消息类型,0 = 自己 1 = 所有人 2 = 行会 3 = 队伍 4 = 当前.,strMsg 消息内容.,strPlayer 玩家的GUID.当消息类型为组队或行会时,该GUID必须为队伍或行会中的成员.否则默认填''.,byClientType 客户端类型组合, 只有消息类型为1或4时才起作用, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),\n返回:无返回值.\n",
	SysMsg_SendTopColorByClientType="void  SysMsg_SendTopColorByClientType(uint8  byCount,string  strMsg,int32  iForeground,int32  iBackground,uint8  byClientType)\n发送客户端顶部广播消息. \n参数:byCount 消息滚动次数.,strMsg 消息内容.,iForeground 前景颜色.,iBackground 背景颜色.,byClientType 客户端类型组合, 为(1&lt;&lt;0) = 端游,(1&lt;&lt;1) = 页游,(1&lt;&lt;2) = 手游的组合，比如(1&lt;&lt;0),\n返回:无返回值.\n备注:1 = 黄色 2 = 红色 3 = 粉红 4 = 蓝色 5 = 浅蓝 6 = 深粉 7 = 白色 8 = 深蓝 9 = 亮蓝 10 = 深黄 11 = 透明 12 = 黑色 13 = 绿色.\n",
	GBKToUTF8="string  GBKToUTF8(string  strGbk)\n将GBK编码的字符串转为UTF8编码. \n参数:strGbk GBK编码字符串.,\n返回:UTF8编码字符串.\n",
	UTF8ToGBK="string  UTF8ToGBK(string  strUtf8)\n将UTF8编码的字符串转为GBK编码. \n参数:strUtf8 UTF8编码字符串.,\n返回:GBK编码字符串.\n",
	on_pre_market_delegate_sell="bool  on_pre_market_delegate_sell(string  strPlayer,string  strItemKey,int32  iNum,int32  iPrice,int32  iMoneyType)\n玩家在寄售行寄售之前回调. \n参数:strPlayer 玩家的GUID.,strItemKey 道具的KeyName.,iNum 寄售数量.,iPrice 寄售单价.,iMoneyType 寄售货币类型. 0 = 金币, 1 = 元宝, 2 = 积分.,\n返回:true = 允许玩家寄售, false = 阻止玩家寄售.\n参考:eTriggerType,\n",
	on_pre_p2p_trade="bool  on_pre_p2p_trade(string  strRequestor,string  strResponsor,string  strRequestorItems,string  strResponsorItems,int32  iRequestorGold,int32  iResponsorGold)\n玩家在P2P交易之前回调. \n参数:strRequestor 发起玩家的GUID.,strResponsor 接受玩家的GUID.,strRequestorItems 发起玩家交易的物品, 为类似'[keyname1, keyname2, ...]'的json数组.,strResponsorItems 接受玩家交易的物品, 格式同上.,iRequestorGold 发起玩家交易的金币数量.,iResponsorGold 接受玩家交易的金币数量.,\n返回:true = 允许玩家P2P交易, false = 阻止玩家P2P交易.\n参考:eTriggerType,\n",
	SetItemDropFreezeTime="bool  SetItemDropFreezeTime(string  strItem,uint32  dwFreeze)\n修改物品的掉落冻结时间\n参数:strItem 物品GUID.,dwFreeze 冻结时间,单位为秒.,\n返回:返回修改成功或失败.\n备注:冻结时间:掉落后多久可以被别人拾取.\n",
}
